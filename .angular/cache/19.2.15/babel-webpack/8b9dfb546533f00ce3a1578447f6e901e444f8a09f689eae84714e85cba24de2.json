{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EmployeeCardComponent } from '../../components/employee-card/employee-card.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/job-description.service\";\nimport * as i2 from \"../../services/employee.service\";\nimport * as i3 from \"../../services/matching.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction MatchingComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const job_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", job_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", job_r1.emploi, \" (\", job_r1.filiere_activite, \") \");\n  }\n}\nfunction MatchingComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Lancer le Matching\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Chargement...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Calcul du matching en cours... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.matchingErrorMessage, \" \");\n  }\n}\nfunction MatchingComponent_div_28_app_employee_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-employee-card\", 32);\n  }\n  if (rf & 2) {\n    const result_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"employee\", ctx_r1.getEmployeeFromResult(result_r3))(\"matchingScore\", result_r3.score);\n  }\n}\nfunction MatchingComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"h3\", 29);\n    i0.ɵɵtext(2, \"R\\u00E9sultats du Matching\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 30);\n    i0.ɵɵtemplate(4, MatchingComponent_div_28_app_employee_card_4_Template, 1, 2, \"app-employee-card\", 31);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.matchingResults);\n  }\n}\nfunction MatchingComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" Aucun employ\\u00E9 correspondant trouv\\u00E9 pour cette fiche de poste. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emp_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", emp_r4.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", emp_r4.name, \" (\", emp_r4.position, \") \");\n  }\n}\nfunction MatchingComponent_span_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Lancer le Matching Inverse\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_span_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Chargement...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Calcul du matching inverse en cours... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.inverseMatchingErrorMessage, \" \");\n  }\n}\nfunction MatchingComponent_div_45_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"h3\", 36);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 37);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 38);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    let tmp_4_0;\n    const result_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_3_0 = ctx_r1.getJobDescriptionFromResult(result_r5)) == null ? null : tmp_3_0.emploi);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_4_0 = ctx_r1.getJobDescriptionFromResult(result_r5)) == null ? null : tmp_4_0.filiere_activite);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Score de correspondance: \", i0.ɵɵpipeBind2(7, 3, result_r5.score, \"1.0-2\"), \"% \");\n  }\n}\nfunction MatchingComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"h3\", 29);\n    i0.ɵɵtext(2, \"\\uD83D\\uDCCA Opportunit\\u00E9s de Poste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 30);\n    i0.ɵɵtemplate(4, MatchingComponent_div_45_div_4_Template, 8, 6, \"div\", 34);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.inverseMatchingResults);\n  }\n}\nfunction MatchingComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" Aucune opportunit\\u00E9 de poste trouv\\u00E9e pour cet employ\\u00E9. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class MatchingComponent {\n  constructor(jobDescriptionService, employeeService, matchingService) {\n    this.jobDescriptionService = jobDescriptionService;\n    this.employeeService = employeeService;\n    this.matchingService = matchingService;\n    this.jobDescriptions = [];\n    this.employees = [];\n    this.selectedJobId = null;\n    this.selectedEmployeeId = null;\n    this.matchingResults = [];\n    this.inverseMatchingResults = [];\n    this.loadingJobDescriptions = true;\n    this.loadingEmployees = true;\n    this.loadingMatching = false;\n    this.loadingInverseMatching = false;\n    this.matchingErrorMessage = null;\n    this.inverseMatchingErrorMessage = null;\n  }\n  ngOnInit() {\n    this.loadJobDescriptions();\n    this.loadEmployees();\n  }\n  loadJobDescriptions() {\n    this.loadingJobDescriptions = true;\n    this.jobDescriptionService.getJobDescriptions().subscribe({\n      next: data => {\n        this.jobDescriptions = data;\n        this.loadingJobDescriptions = false;\n      },\n      error: err => {\n        console.error('Error loading job descriptions:', err);\n        this.matchingErrorMessage = 'Erreur lors du chargement des fiches de poste.';\n        this.loadingJobDescriptions = false;\n      }\n    });\n  }\n  loadEmployees() {\n    this.loadingEmployees = true;\n    this.employeeService.getEmployees().subscribe({\n      next: data => {\n        this.employees = data;\n        this.loadingEmployees = false;\n      },\n      error: err => {\n        console.error('Error loading employees:', err);\n        this.inverseMatchingErrorMessage = 'Erreur lors du chargement des employés.';\n        this.loadingEmployees = false;\n      }\n    });\n  }\n  onJobSelect() {\n    this.matchingResults = [];\n    this.matchingErrorMessage = null;\n  }\n  onEmployeeSelect() {\n    this.inverseMatchingResults = [];\n    this.inverseMatchingErrorMessage = null;\n  }\n  performMatching() {\n    if (!this.selectedJobId) {\n      this.matchingErrorMessage = 'Veuillez sélectionner une fiche de poste.';\n      return;\n    }\n    this.loadingMatching = true;\n    this.matchingErrorMessage = null;\n    this.matchingResults = [];\n    this.matchingService.getMatchingResults(this.selectedJobId).subscribe({\n      next: results => {\n        this.matchingResults = results.sort((a, b) => b.score - a.score); // Sort by score descending\n        this.loadingMatching = false;\n      },\n      error: err => {\n        console.error('Error performing matching:', err);\n        this.matchingErrorMessage = 'Erreur lors du calcul du matching. Assurez-vous que le service FastAPI est en cours d\\'exécution.';\n        this.loadingMatching = false;\n      }\n    });\n  }\n  performInverseMatching() {\n    if (!this.selectedEmployeeId) {\n      this.inverseMatchingErrorMessage = 'Veuillez sélectionner un employé.';\n      return;\n    }\n    this.loadingInverseMatching = true;\n    this.inverseMatchingErrorMessage = null;\n    this.inverseMatchingResults = [];\n    // For inverse matching, we iterate through all job descriptions\n    // and call the matching service for each job with the selected employee.\n    // This assumes the backend's /jobemployeeskillmatch/:jobId endpoint\n    // can handle a single employee's skills being matched against a job.\n    // If the backend's /calculate endpoint in FastAPI is used, it would be different.\n    // Current backend endpoint only takes jobId and returns all matching employees for that job.\n    // To do inverse matching, we need to call the matching for each job and filter results.\n    // This might be inefficient for a large number of jobs.\n    // A dedicated inverse matching endpoint on the backend would be ideal.\n    // For demonstration, we'll simulate by calling matching for all jobs and filtering.\n    const promises = [];\n    this.jobDescriptions.forEach(job => {\n      if (job.id) {\n        promises.push(this.matchingService.getMatchingResults(job.id));\n      }\n    });\n    // Combine all observables and process results\n    // This is a simplified approach. A more robust solution would involve a backend endpoint\n    // specifically for inverse matching or a more complex client-side aggregation.\n    Promise.all(promises.map(p => p.toPromise())).then(allResultsArrays => {\n      const allResults = [].concat(...allResultsArrays.filter(r => r !== undefined));\n      this.inverseMatchingResults = allResults.filter(result => result.employee_id === this.selectedEmployeeId).sort((a, b) => b.score - a.score); // Sort by score descending\n      this.loadingInverseMatching = false;\n    }).catch(err => {\n      console.error('Error performing inverse matching:', err);\n      this.inverseMatchingErrorMessage = 'Erreur lors du calcul du matching inverse. Assurez-vous que le service FastAPI est en cours d\\'exécution.';\n      this.loadingInverseMatching = false;\n    });\n  }\n  getEmployeeFromResult(result) {\n    return this.employees.find(emp => emp.id === result.employee_id) || {\n      id: result.employee_id,\n      name: result.name,\n      position: result.position,\n      email: '',\n      hire_date: ''\n    };\n  }\n  getJobDescriptionFromResult(result) {\n    return this.jobDescriptions.find(job => job.id === result.job_description_id);\n  }\n  static {\n    this.ɵfac = function MatchingComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatchingComponent)(i0.ɵɵdirectiveInject(i1.JobDescriptionService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.MatchingService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MatchingComponent,\n      selectors: [[\"app-matching\"]],\n      decls: 47,\n      vars: 20,\n      consts: [[1, \"p-6\"], [1, \"text-3xl\", \"font-bold\", \"text-primary\", \"mb-6\"], [1, \"bg-blue-50\", \"border-l-4\", \"border-blue-400\", \"p-4\", \"mb-6\"], [1, \"flex\"], [1, \"flex-shrink-0\"], [\"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-blue-400\"], [\"fill-rule\", \"evenodd\", \"d\", \"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\", \"clip-rule\", \"evenodd\"], [1, \"ml-3\"], [1, \"text-sm\", \"text-blue-700\"], [1, \"card\", \"mb-6\"], [1, \"text-xl\", \"font-semibold\", \"text-dark\", \"mb-4\"], [1, \"mb-4\"], [\"for\", \"jobDescriptionSelect\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"jobDescriptionSelect\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"], [4, \"ngIf\"], [\"class\", \"text-center text-primary mb-4\", 4, \"ngIf\"], [\"class\", \"mt-4 p-3 bg-red-100 text-red-700 rounded-md\", 4, \"ngIf\"], [\"class\", \"mt-8\", 4, \"ngIf\"], [\"class\", \"mt-8 text-center text-gray-600\", 4, \"ngIf\"], [1, \"card\", \"mt-12\"], [\"for\", \"employeeSelect\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"employeeSelect\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [3, \"ngValue\"], [1, \"text-center\", \"text-primary\", \"mb-4\"], [1, \"mt-4\", \"p-3\", \"bg-red-100\", \"text-red-700\", \"rounded-md\"], [1, \"mt-8\"], [1, \"text-2xl\", \"font-bold\", \"text-primary\", \"mb-4\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-6\"], [3, \"employee\", \"matchingScore\", 4, \"ngFor\", \"ngForOf\"], [3, \"employee\", \"matchingScore\"], [1, \"mt-8\", \"text-center\", \"text-gray-600\"], [\"class\", \"card mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-4\"], [1, \"text-xl\", \"font-semibold\", \"text-primary\"], [1, \"text-dark\"], [1, \"mt-4\", \"text-lg\", \"font-bold\", \"text-green-600\"]],\n      template: function MatchingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Matching Intelligent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(6, \"svg\", 5);\n          i0.ɵɵelement(7, \"path\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"p\", 8)(10, \"strong\");\n          i0.ɵɵtext(11, \"Algorithme de Matching :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12, \" Notre syst\\u00E8me analyse les comp\\u00E9tences requises pour chaque poste et les compare avec les comp\\u00E9tences des employ\\u00E9s pour calculer un score de compatibilit\\u00E9 pr\\u00E9cis. \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(13, \"div\", 9)(14, \"h3\", 10);\n          i0.ɵɵtext(15, \"\\uD83C\\uDFAF Trouver les meilleurs candidats pour un poste\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 11)(17, \"label\", 12);\n          i0.ɵɵtext(18, \"S\\u00E9lectionner une fiche de poste:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 13);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MatchingComponent_Template_select_ngModelChange_19_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedJobId, $event) || (ctx.selectedJobId = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function MatchingComponent_Template_select_change_19_listener() {\n            return ctx.onJobSelect();\n          });\n          i0.ɵɵelementStart(20, \"option\", 14);\n          i0.ɵɵtext(21, \"-- Choisir une fiche de poste --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, MatchingComponent_option_22_Template, 2, 3, \"option\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function MatchingComponent_Template_button_click_23_listener() {\n            return ctx.performMatching();\n          });\n          i0.ɵɵtemplate(24, MatchingComponent_span_24_Template, 2, 0, \"span\", 17)(25, MatchingComponent_span_25_Template, 2, 0, \"span\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(26, MatchingComponent_div_26_Template, 2, 0, \"div\", 18)(27, MatchingComponent_div_27_Template, 2, 1, \"div\", 19)(28, MatchingComponent_div_28_Template, 5, 1, \"div\", 20)(29, MatchingComponent_div_29_Template, 2, 0, \"div\", 21);\n          i0.ɵɵelementStart(30, \"div\", 22)(31, \"h3\", 10);\n          i0.ɵɵtext(32, \"\\uD83D\\uDD04 Matching Inverse: Opportunit\\u00E9s pour un employ\\u00E9\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"div\", 11)(34, \"label\", 23);\n          i0.ɵɵtext(35, \"S\\u00E9lectionner un employ\\u00E9:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"select\", 24);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MatchingComponent_Template_select_ngModelChange_36_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedEmployeeId, $event) || (ctx.selectedEmployeeId = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function MatchingComponent_Template_select_change_36_listener() {\n            return ctx.onEmployeeSelect();\n          });\n          i0.ɵɵelementStart(37, \"option\", 14);\n          i0.ɵɵtext(38, \"-- Choisir un employ\\u00E9 --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(39, MatchingComponent_option_39_Template, 2, 3, \"option\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(40, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function MatchingComponent_Template_button_click_40_listener() {\n            return ctx.performInverseMatching();\n          });\n          i0.ɵɵtemplate(41, MatchingComponent_span_41_Template, 2, 0, \"span\", 17)(42, MatchingComponent_span_42_Template, 2, 0, \"span\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(43, MatchingComponent_div_43_Template, 2, 0, \"div\", 18)(44, MatchingComponent_div_44_Template, 2, 1, \"div\", 19)(45, MatchingComponent_div_45_Template, 5, 1, \"div\", 20)(46, MatchingComponent_div_46_Template, 2, 0, \"div\", 21);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(19);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedJobId);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngValue\", null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.jobDescriptions);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedJobId || ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.matchingErrorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.matchingResults.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.matchingResults.length === 0 && ctx.selectedJobId && !ctx.loadingMatching && !ctx.matchingErrorMessage);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedEmployeeId);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngValue\", null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedEmployeeId || ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.inverseMatchingErrorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.inverseMatchingResults.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.inverseMatchingResults.length === 0 && ctx.selectedEmployeeId && !ctx.loadingInverseMatching && !ctx.inverseMatchingErrorMessage);\n        }\n      },\n      dependencies: [CommonModule, i4.NgForOf, i4.NgIf, i4.DecimalPipe, FormsModule, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, EmployeeCardComponent],\n      styles: [\"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGNoaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDIiwiZmlsZSI6Im1hdGNoaW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBZGRpdGlvbmFsIG1hdGNoaW5nIHBhZ2Ugc3R5bGVzIGlmIG5lZWRlZCAqLyJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbWF0Y2hpbmcvbWF0Y2hpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEM7QUFDOUMsZ1RBQWdUIiwic291cmNlc0NvbnRlbnQiOlsiLyogQWRkaXRpb25hbCBtYXRjaGluZyBwYWdlIHN0eWxlcyBpZiBuZWVkZWQgKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","EmployeeCardComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","job_r1","id","ɵɵadvance","ɵɵtextInterpolate2","emploi","filiere_activite","ɵɵtextInterpolate1","ctx_r1","matchingErrorMessage","ɵɵelement","getEmployeeFromResult","result_r3","score","ɵɵtemplate","MatchingComponent_div_28_app_employee_card_4_Template","matchingResults","emp_r4","name","position","inverseMatchingErrorMessage","ɵɵtextInterpolate","tmp_3_0","getJobDescriptionFromResult","result_r5","tmp_4_0","ɵɵpipeBind2","MatchingComponent_div_45_div_4_Template","inverseMatchingResults","MatchingComponent","constructor","jobDescriptionService","employeeService","matchingService","jobDescriptions","employees","selectedJobId","selectedEmployeeId","loadingJobDescriptions","loadingEmployees","loadingMatching","loadingInverseMatching","ngOnInit","loadJobDescriptions","loadEmployees","getJobDescriptions","subscribe","next","data","error","err","console","getEmployees","onJobSelect","onEmployeeSelect","performMatching","getMatchingResults","results","sort","a","b","performInverseMatching","promises","forEach","job","push","Promise","all","map","p","toPromise","then","allResultsArrays","allResults","concat","filter","r","undefined","result","employee_id","catch","find","emp","email","hire_date","job_description_id","ɵɵdirectiveInject","i1","JobDescriptionService","i2","EmployeeService","i3","MatchingService","selectors","decls","vars","consts","template","MatchingComponent_Template","rf","ctx","ɵɵtwoWayListener","MatchingComponent_Template_select_ngModelChange_19_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","MatchingComponent_Template_select_change_19_listener","MatchingComponent_option_22_Template","MatchingComponent_Template_button_click_23_listener","MatchingComponent_span_24_Template","MatchingComponent_span_25_Template","MatchingComponent_div_26_Template","MatchingComponent_div_27_Template","MatchingComponent_div_28_Template","MatchingComponent_div_29_Template","MatchingComponent_Template_select_ngModelChange_36_listener","MatchingComponent_Template_select_change_36_listener","MatchingComponent_option_39_Template","MatchingComponent_Template_button_click_40_listener","MatchingComponent_span_41_Template","MatchingComponent_span_42_Template","MatchingComponent_div_43_Template","MatchingComponent_div_44_Template","MatchingComponent_div_45_Template","MatchingComponent_div_46_Template","ɵɵtwoWayProperty","length","i4","NgForOf","NgIf","DecimalPipe","i5","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\matching\\matching.component.ts","C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\matching\\matching.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { JobDescriptionService } from '../../services/job-description.service';\nimport { EmployeeService } from '../../services/employee.service';\nimport { MatchingService } from '../../services/matching.service';\nimport { JobDescription } from '../../models/job-description.model';\nimport { Employee } from '../../models/employee.model';\nimport { MatchingResult } from '../../models/matching.model';\nimport { EmployeeCardComponent } from '../../components/employee-card/employee-card.component';\n\n@Component({\n  selector: 'app-matching',\n  standalone: true,\n  imports: [CommonModule, FormsModule, EmployeeCardComponent],\n  templateUrl: './matching.component.html',\n  styleUrls: ['./matching.component.css']\n})\nexport class MatchingComponent implements OnInit {\n  jobDescriptions: JobDescription[] = [];\n  employees: Employee[] = [];\n  selectedJobId: number | null = null;\n  selectedEmployeeId: number | null = null;\n  matchingResults: MatchingResult[] = [];\n  inverseMatchingResults: MatchingResult[] = [];\n\n  loadingJobDescriptions: boolean = true;\n  loadingEmployees: boolean = true;\n  loadingMatching: boolean = false;\n  loadingInverseMatching: boolean = false;\n\n  matchingErrorMessage: string | null = null;\n  inverseMatchingErrorMessage: string | null = null;\n\n  constructor(\n    private jobDescriptionService: JobDescriptionService,\n    private employeeService: EmployeeService,\n    private matchingService: MatchingService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadJobDescriptions();\n    this.loadEmployees();\n  }\n\n  loadJobDescriptions(): void {\n    this.loadingJobDescriptions = true;\n    this.jobDescriptionService.getJobDescriptions().subscribe({\n      next: (data) => {\n        this.jobDescriptions = data;\n        this.loadingJobDescriptions = false;\n      },\n      error: (err) => {\n        console.error('Error loading job descriptions:', err);\n        this.matchingErrorMessage = 'Erreur lors du chargement des fiches de poste.';\n        this.loadingJobDescriptions = false;\n      }\n    });\n  }\n\n  loadEmployees(): void {\n    this.loadingEmployees = true;\n    this.employeeService.getEmployees().subscribe({\n      next: (data) => {\n        this.employees = data;\n        this.loadingEmployees = false;\n      },\n      error: (err) => {\n        console.error('Error loading employees:', err);\n        this.inverseMatchingErrorMessage = 'Erreur lors du chargement des employés.';\n        this.loadingEmployees = false;\n      }\n    });\n  }\n\n  onJobSelect(): void {\n    this.matchingResults = [];\n    this.matchingErrorMessage = null;\n  }\n\n  onEmployeeSelect(): void {\n    this.inverseMatchingResults = [];\n    this.inverseMatchingErrorMessage = null;\n  }\n\n  performMatching(): void {\n    if (!this.selectedJobId) {\n      this.matchingErrorMessage = 'Veuillez sélectionner une fiche de poste.';\n      return;\n    }\n\n    this.loadingMatching = true;\n    this.matchingErrorMessage = null;\n    this.matchingResults = [];\n\n    this.matchingService.getMatchingResults(this.selectedJobId).subscribe({\n      next: (results) => {\n        this.matchingResults = results.sort((a, b) => b.score - a.score); // Sort by score descending\n        this.loadingMatching = false;\n      },\n      error: (err) => {\n        console.error('Error performing matching:', err);\n        this.matchingErrorMessage = 'Erreur lors du calcul du matching. Assurez-vous que le service FastAPI est en cours d\\'exécution.';\n        this.loadingMatching = false;\n      }\n    });\n  }\n\n  performInverseMatching(): void {\n    if (!this.selectedEmployeeId) {\n      this.inverseMatchingErrorMessage = 'Veuillez sélectionner un employé.';\n      return;\n    }\n\n    this.loadingInverseMatching = true;\n    this.inverseMatchingErrorMessage = null;\n    this.inverseMatchingResults = [];\n\n    // For inverse matching, we iterate through all job descriptions\n    // and call the matching service for each job with the selected employee.\n    // This assumes the backend's /jobemployeeskillmatch/:jobId endpoint\n    // can handle a single employee's skills being matched against a job.\n    // If the backend's /calculate endpoint in FastAPI is used, it would be different.\n\n    // Current backend endpoint only takes jobId and returns all matching employees for that job.\n    // To do inverse matching, we need to call the matching for each job and filter results.\n    // This might be inefficient for a large number of jobs.\n    // A dedicated inverse matching endpoint on the backend would be ideal.\n\n    // For demonstration, we'll simulate by calling matching for all jobs and filtering.\n    const promises: Observable<MatchingResult[]>[] = [];\n    this.jobDescriptions.forEach(job => {\n      if (job.id) {\n        promises.push(this.matchingService.getMatchingResults(job.id));\n      }\n    });\n\n    // Combine all observables and process results\n    // This is a simplified approach. A more robust solution would involve a backend endpoint\n    // specifically for inverse matching or a more complex client-side aggregation.\n    Promise.all(promises.map(p => p.toPromise())).then(allResultsArrays => {\n      const allResults: MatchingResult[] = [].concat(...allResultsArrays.filter(r => r !== undefined) as any);\n      this.inverseMatchingResults = allResults.filter(result => result.employee_id === this.selectedEmployeeId)\n                                              .sort((a, b) => b.score - a.score); // Sort by score descending\n      this.loadingInverseMatching = false;\n    }).catch(err => {\n      console.error('Error performing inverse matching:', err);\n      this.inverseMatchingErrorMessage = 'Erreur lors du calcul du matching inverse. Assurez-vous que le service FastAPI est en cours d\\'exécution.';\n      this.loadingInverseMatching = false;\n    });\n  }\n\n  getEmployeeFromResult(result: MatchingResult): Employee {\n    return this.employees.find(emp => emp.id === result.employee_id) || { \n      id: result.employee_id, \n      name: result.name, \n      position: result.position, \n      email: '', \n      hire_date: '' \n    };\n  }\n\n  getJobDescriptionFromResult(result: MatchingResult): JobDescription | undefined {\n    return this.jobDescriptions.find(job => job.id === result.job_description_id);\n  }\n}","<div class=\"p-6\">\n  <h2 class=\"text-3xl font-bold text-primary mb-6\">Matching Intelligent</h2>\n  \n  <div class=\"bg-blue-50 border-l-4 border-blue-400 p-4 mb-6\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <p class=\"text-sm text-blue-700\">\n          <strong>Algorithme de Matching :</strong> Notre système analyse les compétences requises pour chaque poste et les compare avec les compétences des employés pour calculer un score de compatibilité précis.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card mb-6\">\n    <h3 class=\"text-xl font-semibold text-dark mb-4\">🎯 Trouver les meilleurs candidats pour un poste</h3>\n    <div class=\"mb-4\">\n      <label for=\"jobDescriptionSelect\" class=\"block text-gray-700 text-sm font-bold mb-2\">Sélectionner une fiche de poste:</label>\n      <select id=\"jobDescriptionSelect\" [(ngModel)]=\"selectedJobId\" (change)=\"onJobSelect()\"\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n        <option [ngValue]=\"null\" disabled>-- Choisir une fiche de poste --</option>\n        <option *ngFor=\"let job of jobDescriptions\" [ngValue]=\"job.id\">\n          {{ job.emploi }} ({{ job.filiere_activite }})\n        </option>\n      </select>\n    </div>\n    <button (click)=\"performMatching()\" [disabled]=\"!selectedJobId || loadingMatching\" class=\"btn btn-primary\">\n      <span *ngIf=\"!loadingMatching\">Lancer le Matching</span>\n      <span *ngIf=\"loadingMatching\">Chargement...</span>\n    </button>\n  </div>\n\n  <div *ngIf=\"loadingMatching\" class=\"text-center text-primary mb-4\">\n    Calcul du matching en cours...\n  </div>\n\n  <div *ngIf=\"matchingErrorMessage\" class=\"mt-4 p-3 bg-red-100 text-red-700 rounded-md\">\n    {{ matchingErrorMessage }}\n  </div>\n\n  <div *ngIf=\"matchingResults.length > 0\" class=\"mt-8\">\n    <h3 class=\"text-2xl font-bold text-primary mb-4\">Résultats du Matching</h3>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <app-employee-card *ngFor=\"let result of matchingResults\"\n                         [employee]=\"getEmployeeFromResult(result)\"\n                         [matchingScore]=\"result.score\">\n      </app-employee-card>\n    </div>\n  </div>\n\n  <div *ngIf=\"matchingResults.length === 0 && selectedJobId && !loadingMatching && !matchingErrorMessage\" class=\"mt-8 text-center text-gray-600\">\n    Aucun employé correspondant trouvé pour cette fiche de poste.\n  </div>\n\n  <!-- Inverse Matching Section -->\n  <div class=\"card mt-12\">\n    <h3 class=\"text-xl font-semibold text-dark mb-4\">🔄 Matching Inverse: Opportunités pour un employé</h3>\n    <div class=\"mb-4\">\n      <label for=\"employeeSelect\" class=\"block text-gray-700 text-sm font-bold mb-2\">Sélectionner un employé:</label>\n      <select id=\"employeeSelect\" [(ngModel)]=\"selectedEmployeeId\" (change)=\"onEmployeeSelect()\"\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n        <option [ngValue]=\"null\" disabled>-- Choisir un employé --</option>\n        <option *ngFor=\"let emp of employees\" [ngValue]=\"emp.id\">\n          {{ emp.name }} ({{ emp.position }})\n        </option>\n      </select>\n    </div>\n    <button (click)=\"performInverseMatching()\" [disabled]=\"!selectedEmployeeId || loadingInverseMatching\" class=\"btn btn-primary\">\n      <span *ngIf=\"!loadingInverseMatching\">Lancer le Matching Inverse</span>\n      <span *ngIf=\"loadingInverseMatching\">Chargement...</span>\n    </button>\n  </div>\n\n  <div *ngIf=\"loadingInverseMatching\" class=\"text-center text-primary mb-4\">\n    Calcul du matching inverse en cours...\n  </div>\n\n  <div *ngIf=\"inverseMatchingErrorMessage\" class=\"mt-4 p-3 bg-red-100 text-red-700 rounded-md\">\n    {{ inverseMatchingErrorMessage }}\n  </div>\n\n  <div *ngIf=\"inverseMatchingResults.length > 0\" class=\"mt-8\">\n    <h3 class=\"text-2xl font-bold text-primary mb-4\">📊 Opportunités de Poste</h3>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <div *ngFor=\"let result of inverseMatchingResults\" class=\"card mb-4\">\n        <h3 class=\"text-xl font-semibold text-primary\">{{ getJobDescriptionFromResult(result)?.emploi }}</h3>\n        <p class=\"text-dark\">{{ getJobDescriptionFromResult(result)?.filiere_activite }}</p>\n        <div class=\"mt-4 text-lg font-bold text-green-600\">\n          Score de correspondance: {{ result.score | number:'1.0-2' }}%\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"inverseMatchingResults.length === 0 && selectedEmployeeId && !loadingInverseMatching && !inverseMatchingErrorMessage\" class=\"mt-8 text-center text-gray-600\">\n    Aucune opportunité de poste trouvée pour cet employé.\n  </div>\n</div>"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAQ5C,SAASC,qBAAqB,QAAQ,wDAAwD;;;;;;;;;ICetFC,EAAA,CAAAC,cAAA,iBAA+D;IAC7DD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAFmCH,EAAA,CAAAI,UAAA,YAAAC,MAAA,CAAAC,EAAA,CAAkB;IAC5DN,EAAA,CAAAO,SAAA,EACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAH,MAAA,CAAAI,MAAA,QAAAJ,MAAA,CAAAK,gBAAA,OACF;;;;;IAIFV,EAAA,CAAAC,cAAA,WAA+B;IAAAD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACxDH,EAAA,CAAAC,cAAA,WAA8B;IAAAD,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAItDH,EAAA,CAAAC,cAAA,cAAmE;IACjED,EAAA,CAAAE,MAAA,uCACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAENH,EAAA,CAAAC,cAAA,cAAsF;IACpFD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAO,SAAA,EACF;IADEP,EAAA,CAAAW,kBAAA,MAAAC,MAAA,CAAAC,oBAAA,MACF;;;;;IAKIb,EAAA,CAAAc,SAAA,4BAGoB;;;;;IADDd,EADA,CAAAI,UAAA,aAAAQ,MAAA,CAAAG,qBAAA,CAAAC,SAAA,EAA0C,kBAAAA,SAAA,CAAAC,KAAA,CACZ;;;;;IAJnDjB,EADF,CAAAC,cAAA,cAAqD,aACF;IAAAD,EAAA,CAAAE,MAAA,iCAAqB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3EH,EAAA,CAAAC,cAAA,cAAkE;IAChED,EAAA,CAAAkB,UAAA,IAAAC,qDAAA,gCAEkD;IAGtDnB,EADE,CAAAG,YAAA,EAAM,EACF;;;;IALoCH,EAAA,CAAAO,SAAA,GAAkB;IAAlBP,EAAA,CAAAI,UAAA,YAAAQ,MAAA,CAAAQ,eAAA,CAAkB;;;;;IAO5DpB,EAAA,CAAAC,cAAA,cAA+I;IAC7ID,EAAA,CAAAE,MAAA,gFACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAUAH,EAAA,CAAAC,cAAA,iBAAyD;IACvDD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAF6BH,EAAA,CAAAI,UAAA,YAAAiB,MAAA,CAAAf,EAAA,CAAkB;IACtDN,EAAA,CAAAO,SAAA,EACF;IADEP,EAAA,CAAAQ,kBAAA,MAAAa,MAAA,CAAAC,IAAA,QAAAD,MAAA,CAAAE,QAAA,OACF;;;;;IAIFvB,EAAA,CAAAC,cAAA,WAAsC;IAAAD,EAAA,CAAAE,MAAA,iCAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACvEH,EAAA,CAAAC,cAAA,WAAqC;IAAAD,EAAA,CAAAE,MAAA,oBAAa;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAI7DH,EAAA,CAAAC,cAAA,cAA0E;IACxED,EAAA,CAAAE,MAAA,+CACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAENH,EAAA,CAAAC,cAAA,cAA6F;IAC3FD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAO,SAAA,EACF;IADEP,EAAA,CAAAW,kBAAA,MAAAC,MAAA,CAAAY,2BAAA,MACF;;;;;IAMMxB,EADF,CAAAC,cAAA,cAAqE,aACpB;IAAAD,EAAA,CAAAE,MAAA,GAAiD;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACrGH,EAAA,CAAAC,cAAA,YAAqB;IAAAD,EAAA,CAAAE,MAAA,GAA2D;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACpFH,EAAA,CAAAC,cAAA,cAAmD;IACjDD,EAAA,CAAAE,MAAA,GACF;;IACFF,EADE,CAAAG,YAAA,EAAM,EACF;;;;;;;IAL2CH,EAAA,CAAAO,SAAA,GAAiD;IAAjDP,EAAA,CAAAyB,iBAAA,EAAAC,OAAA,GAAAd,MAAA,CAAAe,2BAAA,CAAAC,SAAA,oBAAAF,OAAA,CAAAjB,MAAA,CAAiD;IAC3ET,EAAA,CAAAO,SAAA,GAA2D;IAA3DP,EAAA,CAAAyB,iBAAA,EAAAI,OAAA,GAAAjB,MAAA,CAAAe,2BAAA,CAAAC,SAAA,oBAAAC,OAAA,CAAAnB,gBAAA,CAA2D;IAE9EV,EAAA,CAAAO,SAAA,GACF;IADEP,EAAA,CAAAW,kBAAA,+BAAAX,EAAA,CAAA8B,WAAA,OAAAF,SAAA,CAAAX,KAAA,iBACF;;;;;IAPJjB,EADF,CAAAC,cAAA,cAA4D,aACT;IAAAD,EAAA,CAAAE,MAAA,8CAAwB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC9EH,EAAA,CAAAC,cAAA,cAAkE;IAChED,EAAA,CAAAkB,UAAA,IAAAa,uCAAA,kBAAqE;IAQzE/B,EADE,CAAAG,YAAA,EAAM,EACF;;;;IARsBH,EAAA,CAAAO,SAAA,GAAyB;IAAzBP,EAAA,CAAAI,UAAA,YAAAQ,MAAA,CAAAoB,sBAAA,CAAyB;;;;;IAUrDhC,EAAA,CAAAC,cAAA,cAAyK;IACvKD,EAAA,CAAAE,MAAA,6EACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADjFR,OAAM,MAAO8B,iBAAiB;EAgB5BC,YACUC,qBAA4C,EAC5CC,eAAgC,EAChCC,eAAgC;IAFhC,KAAAF,qBAAqB,GAArBA,qBAAqB;IACrB,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,eAAe,GAAfA,eAAe;IAlBzB,KAAAC,eAAe,GAAqB,EAAE;IACtC,KAAAC,SAAS,GAAe,EAAE;IAC1B,KAAAC,aAAa,GAAkB,IAAI;IACnC,KAAAC,kBAAkB,GAAkB,IAAI;IACxC,KAAArB,eAAe,GAAqB,EAAE;IACtC,KAAAY,sBAAsB,GAAqB,EAAE;IAE7C,KAAAU,sBAAsB,GAAY,IAAI;IACtC,KAAAC,gBAAgB,GAAY,IAAI;IAChC,KAAAC,eAAe,GAAY,KAAK;IAChC,KAAAC,sBAAsB,GAAY,KAAK;IAEvC,KAAAhC,oBAAoB,GAAkB,IAAI;IAC1C,KAAAW,2BAA2B,GAAkB,IAAI;EAM7C;EAEJsB,QAAQA,CAAA;IACN,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAD,mBAAmBA,CAAA;IACjB,IAAI,CAACL,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAACP,qBAAqB,CAACc,kBAAkB,EAAE,CAACC,SAAS,CAAC;MACxDC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACd,eAAe,GAAGc,IAAI;QAC3B,IAAI,CAACV,sBAAsB,GAAG,KAAK;MACrC,CAAC;MACDW,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,iCAAiC,EAAEC,GAAG,CAAC;QACrD,IAAI,CAACzC,oBAAoB,GAAG,gDAAgD;QAC5E,IAAI,CAAC6B,sBAAsB,GAAG,KAAK;MACrC;KACD,CAAC;EACJ;EAEAM,aAAaA,CAAA;IACX,IAAI,CAACL,gBAAgB,GAAG,IAAI;IAC5B,IAAI,CAACP,eAAe,CAACoB,YAAY,EAAE,CAACN,SAAS,CAAC;MAC5CC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACb,SAAS,GAAGa,IAAI;QACrB,IAAI,CAACT,gBAAgB,GAAG,KAAK;MAC/B,CAAC;MACDU,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,0BAA0B,EAAEC,GAAG,CAAC;QAC9C,IAAI,CAAC9B,2BAA2B,GAAG,yCAAyC;QAC5E,IAAI,CAACmB,gBAAgB,GAAG,KAAK;MAC/B;KACD,CAAC;EACJ;EAEAc,WAAWA,CAAA;IACT,IAAI,CAACrC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACP,oBAAoB,GAAG,IAAI;EAClC;EAEA6C,gBAAgBA,CAAA;IACd,IAAI,CAAC1B,sBAAsB,GAAG,EAAE;IAChC,IAAI,CAACR,2BAA2B,GAAG,IAAI;EACzC;EAEAmC,eAAeA,CAAA;IACb,IAAI,CAAC,IAAI,CAACnB,aAAa,EAAE;MACvB,IAAI,CAAC3B,oBAAoB,GAAG,2CAA2C;MACvE;IACF;IAEA,IAAI,CAAC+B,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC/B,oBAAoB,GAAG,IAAI;IAChC,IAAI,CAACO,eAAe,GAAG,EAAE;IAEzB,IAAI,CAACiB,eAAe,CAACuB,kBAAkB,CAAC,IAAI,CAACpB,aAAa,CAAC,CAACU,SAAS,CAAC;MACpEC,IAAI,EAAGU,OAAO,IAAI;QAChB,IAAI,CAACzC,eAAe,GAAGyC,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC/C,KAAK,GAAG8C,CAAC,CAAC9C,KAAK,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC2B,eAAe,GAAG,KAAK;MAC9B,CAAC;MACDS,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAEC,GAAG,CAAC;QAChD,IAAI,CAACzC,oBAAoB,GAAG,mGAAmG;QAC/H,IAAI,CAAC+B,eAAe,GAAG,KAAK;MAC9B;KACD,CAAC;EACJ;EAEAqB,sBAAsBA,CAAA;IACpB,IAAI,CAAC,IAAI,CAACxB,kBAAkB,EAAE;MAC5B,IAAI,CAACjB,2BAA2B,GAAG,mCAAmC;MACtE;IACF;IAEA,IAAI,CAACqB,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAACrB,2BAA2B,GAAG,IAAI;IACvC,IAAI,CAACQ,sBAAsB,GAAG,EAAE;IAEhC;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA,MAAMkC,QAAQ,GAAmC,EAAE;IACnD,IAAI,CAAC5B,eAAe,CAAC6B,OAAO,CAACC,GAAG,IAAG;MACjC,IAAIA,GAAG,CAAC9D,EAAE,EAAE;QACV4D,QAAQ,CAACG,IAAI,CAAC,IAAI,CAAChC,eAAe,CAACuB,kBAAkB,CAACQ,GAAG,CAAC9D,EAAE,CAAC,CAAC;MAChE;IACF,CAAC,CAAC;IAEF;IACA;IACA;IACAgE,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,EAAE,CAAC,CAAC,CAACC,IAAI,CAACC,gBAAgB,IAAG;MACpE,MAAMC,UAAU,GAAqB,EAAE,CAACC,MAAM,CAAC,GAAGF,gBAAgB,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKC,SAAS,CAAQ,CAAC;MACvG,IAAI,CAACjD,sBAAsB,GAAG6C,UAAU,CAACE,MAAM,CAACG,MAAM,IAAIA,MAAM,CAACC,WAAW,KAAK,IAAI,CAAC1C,kBAAkB,CAAC,CAChEqB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC/C,KAAK,GAAG8C,CAAC,CAAC9C,KAAK,CAAC,CAAC,CAAC;MAC5E,IAAI,CAAC4B,sBAAsB,GAAG,KAAK;IACrC,CAAC,CAAC,CAACuC,KAAK,CAAC9B,GAAG,IAAG;MACbC,OAAO,CAACF,KAAK,CAAC,oCAAoC,EAAEC,GAAG,CAAC;MACxD,IAAI,CAAC9B,2BAA2B,GAAG,2GAA2G;MAC9I,IAAI,CAACqB,sBAAsB,GAAG,KAAK;IACrC,CAAC,CAAC;EACJ;EAEA9B,qBAAqBA,CAACmE,MAAsB;IAC1C,OAAO,IAAI,CAAC3C,SAAS,CAAC8C,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAChF,EAAE,KAAK4E,MAAM,CAACC,WAAW,CAAC,IAAI;MAClE7E,EAAE,EAAE4E,MAAM,CAACC,WAAW;MACtB7D,IAAI,EAAE4D,MAAM,CAAC5D,IAAI;MACjBC,QAAQ,EAAE2D,MAAM,CAAC3D,QAAQ;MACzBgE,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;KACZ;EACH;EAEA7D,2BAA2BA,CAACuD,MAAsB;IAChD,OAAO,IAAI,CAAC5C,eAAe,CAAC+C,IAAI,CAACjB,GAAG,IAAIA,GAAG,CAAC9D,EAAE,KAAK4E,MAAM,CAACO,kBAAkB,CAAC;EAC/E;;;uCAlJWxD,iBAAiB,EAAAjC,EAAA,CAAA0F,iBAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAA5F,EAAA,CAAA0F,iBAAA,CAAAG,EAAA,CAAAC,eAAA,GAAA9F,EAAA,CAAA0F,iBAAA,CAAAK,EAAA,CAAAC,eAAA;IAAA;EAAA;;;YAAjB/D,iBAAiB;MAAAgE,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UClB5BvG,EADF,CAAAC,cAAA,aAAiB,YACkC;UAAAD,EAAA,CAAAE,MAAA,2BAAoB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAItEH,EAFJ,CAAAC,cAAA,aAA4D,aACxC,aACW;;UACzBD,EAAA,CAAAC,cAAA,aAA2E;UACzED,EAAA,CAAAc,SAAA,cAAsQ;UAE1Qd,EADE,CAAAG,YAAA,EAAM,EACF;;UAGFH,EAFJ,CAAAC,cAAA,aAAkB,WACiB,cACvB;UAAAD,EAAA,CAAAE,MAAA,gCAAwB;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAACH,EAAA,CAAAE,MAAA,yMAC5C;UAGNF,EAHM,CAAAG,YAAA,EAAI,EACA,EACF,EACF;UAGJH,EADF,CAAAC,cAAA,cAAuB,cAC4B;UAAAD,EAAA,CAAAE,MAAA,kEAAgD;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAEpGH,EADF,CAAAC,cAAA,eAAkB,iBACqE;UAAAD,EAAA,CAAAE,MAAA,6CAAgC;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC7HH,EAAA,CAAAC,cAAA,kBAC2I;UADzGD,EAAA,CAAAyG,gBAAA,2BAAAC,4DAAAC,MAAA;YAAA3G,EAAA,CAAA4G,kBAAA,CAAAJ,GAAA,CAAAhE,aAAA,EAAAmE,MAAA,MAAAH,GAAA,CAAAhE,aAAA,GAAAmE,MAAA;YAAA,OAAAA,MAAA;UAAA,EAA2B;UAAC3G,EAAA,CAAA6G,UAAA,oBAAAC,qDAAA;YAAA,OAAUN,GAAA,CAAA/C,WAAA,EAAa;UAAA,EAAC;UAEpFzD,EAAA,CAAAC,cAAA,kBAAkC;UAAAD,EAAA,CAAAE,MAAA,wCAAgC;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAC3EH,EAAA,CAAAkB,UAAA,KAAA6F,oCAAA,qBAA+D;UAInE/G,EADE,CAAAG,YAAA,EAAS,EACL;UACNH,EAAA,CAAAC,cAAA,kBAA2G;UAAnGD,EAAA,CAAA6G,UAAA,mBAAAG,oDAAA;YAAA,OAASR,GAAA,CAAA7C,eAAA,EAAiB;UAAA,EAAC;UAEjC3D,EADA,CAAAkB,UAAA,KAAA+F,kCAAA,mBAA+B,KAAAC,kCAAA,mBACD;UAElClH,EADE,CAAAG,YAAA,EAAS,EACL;UAoBNH,EAlBA,CAAAkB,UAAA,KAAAiG,iCAAA,kBAAmE,KAAAC,iCAAA,kBAImB,KAAAC,iCAAA,kBAIjC,KAAAC,iCAAA,kBAU0F;UAM7ItH,EADF,CAAAC,cAAA,eAAwB,cAC2B;UAAAD,EAAA,CAAAE,MAAA,6EAAiD;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAErGH,EADF,CAAAC,cAAA,eAAkB,iBAC+D;UAAAD,EAAA,CAAAE,MAAA,0CAAwB;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC/GH,EAAA,CAAAC,cAAA,kBAC2I;UAD/GD,EAAA,CAAAyG,gBAAA,2BAAAc,4DAAAZ,MAAA;YAAA3G,EAAA,CAAA4G,kBAAA,CAAAJ,GAAA,CAAA/D,kBAAA,EAAAkE,MAAA,MAAAH,GAAA,CAAA/D,kBAAA,GAAAkE,MAAA;YAAA,OAAAA,MAAA;UAAA,EAAgC;UAAC3G,EAAA,CAAA6G,UAAA,oBAAAW,qDAAA;YAAA,OAAUhB,GAAA,CAAA9C,gBAAA,EAAkB;UAAA,EAAC;UAExF1D,EAAA,CAAAC,cAAA,kBAAkC;UAAAD,EAAA,CAAAE,MAAA,qCAAwB;UAAAF,EAAA,CAAAG,YAAA,EAAS;UACnEH,EAAA,CAAAkB,UAAA,KAAAuG,oCAAA,qBAAyD;UAI7DzH,EADE,CAAAG,YAAA,EAAS,EACL;UACNH,EAAA,CAAAC,cAAA,kBAA8H;UAAtHD,EAAA,CAAA6G,UAAA,mBAAAa,oDAAA;YAAA,OAASlB,GAAA,CAAAvC,sBAAA,EAAwB;UAAA,EAAC;UAExCjE,EADA,CAAAkB,UAAA,KAAAyG,kCAAA,mBAAsC,KAAAC,kCAAA,mBACD;UAEzC5H,EADE,CAAAG,YAAA,EAAS,EACL;UAuBNH,EArBA,CAAAkB,UAAA,KAAA2G,iCAAA,kBAA0E,KAAAC,iCAAA,kBAImB,KAAAC,iCAAA,kBAIjC,KAAAC,iCAAA,kBAa6G;UAG3KhI,EAAA,CAAAG,YAAA,EAAM;;;UA/EkCH,EAAA,CAAAO,SAAA,IAA2B;UAA3BP,EAAA,CAAAiI,gBAAA,YAAAzB,GAAA,CAAAhE,aAAA,CAA2B;UAEnDxC,EAAA,CAAAO,SAAA,EAAgB;UAAhBP,EAAA,CAAAI,UAAA,iBAAgB;UACAJ,EAAA,CAAAO,SAAA,GAAkB;UAAlBP,EAAA,CAAAI,UAAA,YAAAoG,GAAA,CAAAlE,eAAA,CAAkB;UAKVtC,EAAA,CAAAO,SAAA,EAA8C;UAA9CP,EAAA,CAAAI,UAAA,cAAAoG,GAAA,CAAAhE,aAAA,IAAAgE,GAAA,CAAA5D,eAAA,CAA8C;UACzE5C,EAAA,CAAAO,SAAA,EAAsB;UAAtBP,EAAA,CAAAI,UAAA,UAAAoG,GAAA,CAAA5D,eAAA,CAAsB;UACtB5C,EAAA,CAAAO,SAAA,EAAqB;UAArBP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAA5D,eAAA,CAAqB;UAI1B5C,EAAA,CAAAO,SAAA,EAAqB;UAArBP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAA5D,eAAA,CAAqB;UAIrB5C,EAAA,CAAAO,SAAA,EAA0B;UAA1BP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAA3F,oBAAA,CAA0B;UAI1Bb,EAAA,CAAAO,SAAA,EAAgC;UAAhCP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAApF,eAAA,CAAA8G,MAAA,KAAgC;UAUhClI,EAAA,CAAAO,SAAA,EAAgG;UAAhGP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAApF,eAAA,CAAA8G,MAAA,UAAA1B,GAAA,CAAAhE,aAAA,KAAAgE,GAAA,CAAA5D,eAAA,KAAA4D,GAAA,CAAA3F,oBAAA,CAAgG;UAStEb,EAAA,CAAAO,SAAA,GAAgC;UAAhCP,EAAA,CAAAiI,gBAAA,YAAAzB,GAAA,CAAA/D,kBAAA,CAAgC;UAElDzC,EAAA,CAAAO,SAAA,EAAgB;UAAhBP,EAAA,CAAAI,UAAA,iBAAgB;UACAJ,EAAA,CAAAO,SAAA,GAAY;UAAZP,EAAA,CAAAI,UAAA,YAAAoG,GAAA,CAAAjE,SAAA,CAAY;UAKGvC,EAAA,CAAAO,SAAA,EAA0D;UAA1DP,EAAA,CAAAI,UAAA,cAAAoG,GAAA,CAAA/D,kBAAA,IAAA+D,GAAA,CAAA3D,sBAAA,CAA0D;UAC5F7C,EAAA,CAAAO,SAAA,EAA6B;UAA7BP,EAAA,CAAAI,UAAA,UAAAoG,GAAA,CAAA3D,sBAAA,CAA6B;UAC7B7C,EAAA,CAAAO,SAAA,EAA4B;UAA5BP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAA3D,sBAAA,CAA4B;UAIjC7C,EAAA,CAAAO,SAAA,EAA4B;UAA5BP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAA3D,sBAAA,CAA4B;UAI5B7C,EAAA,CAAAO,SAAA,EAAiC;UAAjCP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAAhF,2BAAA,CAAiC;UAIjCxB,EAAA,CAAAO,SAAA,EAAuC;UAAvCP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAAxE,sBAAA,CAAAkG,MAAA,KAAuC;UAavClI,EAAA,CAAAO,SAAA,EAA0H;UAA1HP,EAAA,CAAAI,UAAA,SAAAoG,GAAA,CAAAxE,sBAAA,CAAAkG,MAAA,UAAA1B,GAAA,CAAA/D,kBAAA,KAAA+D,GAAA,CAAA3D,sBAAA,KAAA2D,GAAA,CAAAhF,2BAAA,CAA0H;;;qBDnFtH3B,YAAY,EAAAsI,EAAA,CAAAC,OAAA,EAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,CAAAG,WAAA,EAAExI,WAAW,EAAAyI,EAAA,CAAAC,cAAA,EAAAD,EAAA,CAAAE,uBAAA,EAAAF,EAAA,CAAAG,0BAAA,EAAAH,EAAA,CAAAI,eAAA,EAAAJ,EAAA,CAAAK,OAAA,EAAE7I,qBAAqB;MAAA8I,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}