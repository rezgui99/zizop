{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { EmployeeCardComponent } from '../../components/employee-card/employee-card.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/job-description.service\";\nimport * as i2 from \"../../services/employee.service\";\nimport * as i3 from \"../../services/matching.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction MatchingComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const job_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", job_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", job_r1.emploi, \" (\", job_r1.filiere_activite, \") \");\n  }\n}\nfunction MatchingComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Lancer le Matching\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Chargement...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_27_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Lancer le Matching\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_27_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Chargement...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_27_span_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Affectation Automatique\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_27_span_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Affectation en cours...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"h3\", 10);\n    i0.ɵɵtext(2, \"\\uD83E\\uDD16 Affectation Automatique\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 30)(4, \"div\")(5, \"label\", 31);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 32);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function MatchingComponent_div_27_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.minScoreForAssignment, $event) || (ctx_r2.minScoreForAssignment = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 33)(9, \"span\");\n    i0.ɵɵtext(10, \"50%\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"span\");\n    i0.ɵɵtext(12, \"75%\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14, \"100%\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\")(16, \"label\", 31);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 34);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function MatchingComponent_div_27_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.maxAssignments, $event) || (ctx_r2.maxAssignments = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 33)(20, \"span\");\n    i0.ɵɵtext(21, \"1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"span\");\n    i0.ɵɵtext(23, \"5\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"span\");\n    i0.ɵɵtext(25, \"10\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(26, \"div\", 35)(27, \"p\", 36)(28, \"strong\");\n    i0.ɵɵtext(29, \"Candidats \\u00E9ligibles:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"filter\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"button\", 37);\n    i0.ɵɵpipe(33, \"filter\");\n    i0.ɵɵlistener(\"click\", function MatchingComponent_div_27_Template_button_click_32_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.performAutoAssignment());\n    });\n    i0.ɵɵtemplate(34, MatchingComponent_div_27_span_34_Template, 2, 0, \"span\", 18)(35, MatchingComponent_div_27_span_35_Template, 2, 0, \"span\", 18);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(36, \"svg\", 38);\n    i0.ɵɵelement(37, \"path\", 39);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(38, MatchingComponent_div_27_span_38_Template, 2, 0, \"span\", 18)(39, MatchingComponent_div_27_span_39_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Score minimum requis: \", ctx_r2.minScoreForAssignment, \"%\");\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.minScoreForAssignment);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\"Nombre max d'affectations: \", ctx_r2.maxAssignments, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.maxAssignments);\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(31, 11, ctx_r2.matchingResults, \"score >= \" + ctx_r2.minScoreForAssignment).length, \" employ\\u00E9(s) avec un score \\u2265 \", ctx_r2.minScoreForAssignment, \"% \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.loadingAutoAssignment || i0.ɵɵpipeBind2(33, 14, ctx_r2.matchingResults, \"score >= \" + ctx_r2.minScoreForAssignment).length === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.loadingMatching);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loadingMatching);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.loadingAutoAssignment);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loadingAutoAssignment);\n  }\n}\nfunction MatchingComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtext(1, \" Calcul du matching en cours... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.matchingErrorMessage, \" \");\n  }\n}\nfunction MatchingComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42)(1, \"pre\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r2.autoAssignmentMessage.includes(\"\\u2705\") ? \"bg-green-100 text-green-800 border border-green-200\" : \"bg-red-100 text-red-700 border border-red-200\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.autoAssignmentMessage);\n  }\n}\nfunction MatchingComponent_div_31_app_employee_card_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-employee-card\", 48);\n  }\n  if (rf & 2) {\n    const result_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"employee\", ctx_r2.getEmployeeFromResult(result_r4))(\"matchingScore\", result_r4.score);\n  }\n}\nfunction MatchingComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"h3\", 45);\n    i0.ɵɵtext(2, \"R\\u00E9sultats du Matching\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 46);\n    i0.ɵɵtemplate(4, MatchingComponent_div_31_app_employee_card_4_Template, 1, 2, \"app-employee-card\", 47);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.matchingResults);\n  }\n}\nfunction MatchingComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1, \" Aucun employ\\u00E9 correspondant trouv\\u00E9 pour cette fiche de poste. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emp_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", emp_r5.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", emp_r5.name, \" (\", emp_r5.position, \") \");\n  }\n}\nfunction MatchingComponent_span_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Lancer le Matching Inverse\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_span_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Chargement...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40);\n    i0.ɵɵtext(1, \" Calcul du matching inverse en cours... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatchingComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.inverseMatchingErrorMessage, \" \");\n  }\n}\nfunction MatchingComponent_div_48_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51)(1, \"h3\", 52);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 53);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 54);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    let tmp_4_0;\n    const result_r6 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_3_0 = ctx_r2.getJobDescriptionFromResult(result_r6)) == null ? null : tmp_3_0.emploi);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate((tmp_4_0 = ctx_r2.getJobDescriptionFromResult(result_r6)) == null ? null : tmp_4_0.filiere_activite);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Score de correspondance: \", i0.ɵɵpipeBind2(7, 3, result_r6.score, \"1.0-2\"), \"% \");\n  }\n}\nfunction MatchingComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"h3\", 45);\n    i0.ɵɵtext(2, \"\\uD83D\\uDCCA Opportunit\\u00E9s de Poste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 46);\n    i0.ɵɵtemplate(4, MatchingComponent_div_48_div_4_Template, 8, 6, \"div\", 50);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.inverseMatchingResults);\n  }\n}\nfunction MatchingComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1, \" Aucune opportunit\\u00E9 de poste trouv\\u00E9e pour cet employ\\u00E9. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class MatchingComponent {\n  constructor(jobDescriptionService, employeeService, matchingService) {\n    this.jobDescriptionService = jobDescriptionService;\n    this.employeeService = employeeService;\n    this.matchingService = matchingService;\n    this.jobDescriptions = [];\n    this.employees = [];\n    this.selectedJobId = null;\n    this.selectedEmployeeId = null;\n    this.matchingResults = [];\n    this.inverseMatchingResults = [];\n    this.loadingJobDescriptions = true;\n    this.loadingEmployees = true;\n    this.loadingMatching = false;\n    this.loadingInverseMatching = false;\n    this.loadingAutoAssignment = false;\n    this.matchingErrorMessage = null;\n    this.inverseMatchingErrorMessage = null;\n    this.autoAssignmentMessage = null;\n    // Paramètres d'affectation automatique\n    this.minScoreForAssignment = 70;\n    this.maxAssignments = 5;\n  }\n  ngOnInit() {\n    this.loadJobDescriptions();\n    this.loadEmployees();\n  }\n  loadJobDescriptions() {\n    this.loadingJobDescriptions = true;\n    this.jobDescriptionService.getJobDescriptions().subscribe({\n      next: data => {\n        this.jobDescriptions = data;\n        this.loadingJobDescriptions = false;\n      },\n      error: err => {\n        console.error('Error loading job descriptions:', err);\n        this.matchingErrorMessage = 'Erreur lors du chargement des fiches de poste.';\n        this.loadingJobDescriptions = false;\n      }\n    });\n  }\n  loadEmployees() {\n    this.loadingEmployees = true;\n    this.employeeService.getEmployees().subscribe({\n      next: data => {\n        this.employees = data;\n        this.loadingEmployees = false;\n      },\n      error: err => {\n        console.error('Error loading employees:', err);\n        this.inverseMatchingErrorMessage = 'Erreur lors du chargement des employés.';\n        this.loadingEmployees = false;\n      }\n    });\n  }\n  onJobSelect() {\n    this.matchingResults = [];\n    this.matchingErrorMessage = null;\n  }\n  onEmployeeSelect() {\n    this.inverseMatchingResults = [];\n    this.inverseMatchingErrorMessage = null;\n  }\n  performMatching() {\n    if (!this.selectedJobId) {\n      this.matchingErrorMessage = 'Veuillez sélectionner une fiche de poste.';\n      return;\n    }\n    this.loadingMatching = true;\n    this.matchingErrorMessage = null;\n    this.matchingResults = [];\n    // Utilise le nouveau controller jobemployeeskillmatch\n    this.matchingService.getJobEmployeeSkillMatch(this.selectedJobId).subscribe({\n      next: results => {\n        this.matchingResults = results.sort((a, b) => b.score - a.score); // Sort by score descending\n        this.loadingMatching = false;\n      },\n      error: err => {\n        console.error('Error performing matching:', err);\n        this.matchingErrorMessage = 'Erreur lors du calcul du matching. Vérifiez que le backend et FastAPI sont en cours d\\'exécution.';\n        this.loadingMatching = false;\n      }\n    });\n  }\n  performInverseMatching() {\n    if (!this.selectedEmployeeId) {\n      this.inverseMatchingErrorMessage = 'Veuillez sélectionner un employé.';\n      return;\n    }\n    this.loadingInverseMatching = true;\n    this.inverseMatchingErrorMessage = null;\n    this.inverseMatchingResults = [];\n    // For inverse matching, we iterate through all job descriptions\n    // and call the matching service for each job with the selected employee.\n    // This assumes the backend's /jobemployeeskillmatch/:jobId endpoint\n    // can handle a single employee's skills being matched against a job.\n    // If the backend's /calculate endpoint in FastAPI is used, it would be different.\n    // Current backend endpoint only takes jobId and returns all matching employees for that job.\n    // To do inverse matching, we need to call the matching for each job and filter results.\n    // This might be inefficient for a large number of jobs.\n    // A dedicated inverse matching endpoint on the backend would be ideal.\n    // For demonstration, we'll simulate by calling matching for all jobs and filtering.\n    const promises = [];\n    this.jobDescriptions.forEach(job => {\n      if (job.id) {\n        promises.push(this.matchingService.getMatchingResults(job.id));\n      }\n    });\n    // Combine all observables and process results\n    // This is a simplified approach. A more robust solution would involve a backend endpoint\n    // specifically for inverse matching or a more complex client-side aggregation.\n    Promise.all(promises.map(p => p.toPromise())).then(allResultsArrays => {\n      const allResults = [].concat(...allResultsArrays.filter(r => r !== undefined));\n      this.inverseMatchingResults = allResults.filter(result => result.employee_id === this.selectedEmployeeId).sort((a, b) => b.score - a.score); // Sort by score descending\n      this.loadingInverseMatching = false;\n    }).catch(err => {\n      console.error('Error performing inverse matching:', err);\n      this.inverseMatchingErrorMessage = 'Erreur lors du calcul du matching inverse. Assurez-vous que le service FastAPI est en cours d\\'exécution.';\n      this.loadingInverseMatching = false;\n    });\n  }\n  // Nouvelle méthode pour l'affectation automatique\n  performAutoAssignment() {\n    if (!this.selectedJobId) {\n      this.autoAssignmentMessage = 'Veuillez sélectionner une fiche de poste.';\n      return;\n    }\n    if (this.matchingResults.length === 0) {\n      this.autoAssignmentMessage = 'Veuillez d\\'abord effectuer un matching.';\n      return;\n    }\n    const eligibleCandidates = this.matchingResults.filter(result => result.score >= this.minScoreForAssignment).slice(0, this.maxAssignments);\n    if (eligibleCandidates.length === 0) {\n      this.autoAssignmentMessage = `Aucun candidat n'atteint le score minimum de ${this.minScoreForAssignment}%.`;\n      return;\n    }\n    const confirmMessage = `Voulez-vous affecter automatiquement ${eligibleCandidates.length} employé(s) à cette fiche de poste ?\\n\\nCandidats sélectionnés :\\n${eligibleCandidates.map(c => `• ${c.name} (${c.score.toFixed(1)}%)`).join('\\n')}`;\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n    this.loadingAutoAssignment = true;\n    this.autoAssignmentMessage = null;\n    // Effectuer les affectations une par une\n    const assignmentPromises = eligibleCandidates.map(candidate => this.employeeService.assignEmployeeToJobDescription(candidate.employee_id, this.selectedJobId).toPromise().then(() => ({\n      success: true,\n      candidate\n    })).catch(error => ({\n      success: false,\n      candidate,\n      error\n    })));\n    Promise.all(assignmentPromises).then(results => {\n      const successful = results.filter(r => r.success);\n      const failed = results.filter(r => !r.success);\n      let message = '';\n      if (successful.length > 0) {\n        message += `✅ ${successful.length} employé(s) affecté(s) avec succès :\\n`;\n        message += successful.map(r => `• ${r.candidate.name} (${r.candidate.score.toFixed(1)}%)`).join('\\n');\n      }\n      if (failed.length > 0) {\n        message += `\\n\\n❌ ${failed.length} affectation(s) échouée(s) :\\n`;\n        message += failed.map(r => `• ${r.candidate.name} : ${r.error?.error?.message || 'Erreur inconnue'}`).join('\\n');\n      }\n      this.autoAssignmentMessage = message;\n      this.loadingAutoAssignment = false;\n      // Recharger les employés pour voir les changements\n      this.loadEmployees();\n    }).catch(error => {\n      console.error('Error during auto assignment:', error);\n      this.autoAssignmentMessage = '❌ Erreur lors de l\\'affectation automatique.';\n      this.loadingAutoAssignment = false;\n    });\n  }\n  getEmployeeFromResult(result) {\n    return this.employees.find(emp => emp.id === result.employee_id) || {\n      id: result.employee_id,\n      name: result.name,\n      position: result.position,\n      email: '',\n      hire_date: ''\n    };\n  }\n  getJobDescriptionFromResult(result) {\n    return this.jobDescriptions.find(job => job.id === result.job_description_id);\n  }\n  static {\n    this.ɵfac = function MatchingComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatchingComponent)(i0.ɵɵdirectiveInject(i1.JobDescriptionService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.MatchingService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MatchingComponent,\n      selectors: [[\"app-matching\"]],\n      decls: 50,\n      vars: 22,\n      consts: [[1, \"p-6\"], [1, \"text-3xl\", \"font-bold\", \"text-primary\", \"mb-6\"], [1, \"bg-blue-50\", \"border-l-4\", \"border-blue-400\", \"p-4\", \"mb-6\"], [1, \"flex\"], [1, \"flex-shrink-0\"], [\"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-blue-400\"], [\"fill-rule\", \"evenodd\", \"d\", \"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\", \"clip-rule\", \"evenodd\"], [1, \"ml-3\"], [1, \"text-sm\", \"text-blue-700\"], [1, \"card\", \"mb-6\"], [1, \"text-xl\", \"font-semibold\", \"text-dark\", \"mb-4\"], [1, \"mb-4\"], [\"for\", \"jobDescriptionSelect\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"jobDescriptionSelect\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"disabled\", \"\", 3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"gap-4\"], [1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"], [4, \"ngIf\"], [\"class\", \"card mb-6 bg-gradient-to-r from-green-50 to-blue-50 border-l-4 border-green-400\", 4, \"ngIf\"], [\"class\", \"text-center text-primary mb-4\", 4, \"ngIf\"], [\"class\", \"mt-4 p-3 bg-red-100 text-red-700 rounded-md\", 4, \"ngIf\"], [\"class\", \"mt-4 p-4 rounded-md\", 3, \"class\", 4, \"ngIf\"], [\"class\", \"mt-8\", 4, \"ngIf\"], [\"class\", \"mt-8 text-center text-gray-600\", 4, \"ngIf\"], [1, \"card\", \"mt-12\"], [\"for\", \"employeeSelect\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"employeeSelect\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [3, \"ngValue\"], [1, \"card\", \"mb-6\", \"bg-gradient-to-r\", \"from-green-50\", \"to-blue-50\", \"border-l-4\", \"border-green-400\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"gap-4\", \"mb-4\"], [1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"type\", \"range\", \"min\", \"50\", \"max\", \"100\", \"step\", \"5\", 1, \"w-full\", \"h-2\", \"bg-gray-200\", \"rounded-lg\", \"appearance-none\", \"cursor-pointer\", 3, \"ngModelChange\", \"ngModel\"], [1, \"flex\", \"justify-between\", \"text-xs\", \"text-gray-500\", \"mt-1\"], [\"type\", \"range\", \"min\", \"1\", \"max\", \"10\", \"step\", \"1\", 1, \"w-full\", \"h-2\", \"bg-gray-200\", \"rounded-lg\", \"appearance-none\", \"cursor-pointer\", 3, \"ngModelChange\", \"ngModel\"], [1, \"mb-4\", \"p-3\", \"bg-blue-100\", \"rounded-md\"], [1, \"text-sm\", \"text-blue-800\"], [1, \"btn\", \"btn-primary\", \"bg-green-600\", \"hover:bg-green-700\", 3, \"click\", \"disabled\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-5\", \"h-5\", \"mr-2\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M13 10V3L4 14h7v7l9-11h-7z\"], [1, \"text-center\", \"text-primary\", \"mb-4\"], [1, \"mt-4\", \"p-3\", \"bg-red-100\", \"text-red-700\", \"rounded-md\"], [1, \"mt-4\", \"p-4\", \"rounded-md\"], [1, \"whitespace-pre-wrap\", \"font-sans\"], [1, \"mt-8\"], [1, \"text-2xl\", \"font-bold\", \"text-primary\", \"mb-4\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"lg:grid-cols-3\", \"gap-6\"], [3, \"employee\", \"matchingScore\", 4, \"ngFor\", \"ngForOf\"], [3, \"employee\", \"matchingScore\"], [1, \"mt-8\", \"text-center\", \"text-gray-600\"], [\"class\", \"card mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mb-4\"], [1, \"text-xl\", \"font-semibold\", \"text-primary\"], [1, \"text-dark\"], [1, \"mt-4\", \"text-lg\", \"font-bold\", \"text-green-600\"]],\n      template: function MatchingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Matching Intelligent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(6, \"svg\", 5);\n          i0.ɵɵelement(7, \"path\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"p\", 8)(10, \"strong\");\n          i0.ɵɵtext(11, \"Algorithme de Matching :\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12, \" Notre syst\\u00E8me analyse les comp\\u00E9tences requises pour chaque poste et les compare avec les comp\\u00E9tences des employ\\u00E9s pour calculer un score de compatibilit\\u00E9 pr\\u00E9cis. \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(13, \"div\", 9)(14, \"h3\", 10);\n          i0.ɵɵtext(15, \"\\uD83C\\uDFAF Trouver les meilleurs candidats pour un poste\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 11)(17, \"label\", 12);\n          i0.ɵɵtext(18, \"S\\u00E9lectionner une fiche de poste:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 13);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MatchingComponent_Template_select_ngModelChange_19_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedJobId, $event) || (ctx.selectedJobId = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function MatchingComponent_Template_select_change_19_listener() {\n            return ctx.onJobSelect();\n          });\n          i0.ɵɵelementStart(20, \"option\", 14);\n          i0.ɵɵtext(21, \"-- Choisir une fiche de poste --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, MatchingComponent_option_22_Template, 2, 3, \"option\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 16)(24, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function MatchingComponent_Template_button_click_24_listener() {\n            return ctx.performMatching();\n          });\n          i0.ɵɵtemplate(25, MatchingComponent_span_25_Template, 2, 0, \"span\", 18)(26, MatchingComponent_span_26_Template, 2, 0, \"span\", 18);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(27, MatchingComponent_div_27_Template, 40, 17, \"div\", 19)(28, MatchingComponent_div_28_Template, 2, 0, \"div\", 20)(29, MatchingComponent_div_29_Template, 2, 1, \"div\", 21)(30, MatchingComponent_div_30_Template, 3, 3, \"div\", 22)(31, MatchingComponent_div_31_Template, 5, 1, \"div\", 23)(32, MatchingComponent_div_32_Template, 2, 0, \"div\", 24);\n          i0.ɵɵelementStart(33, \"div\", 25)(34, \"h3\", 10);\n          i0.ɵɵtext(35, \"\\uD83D\\uDD04 Matching Inverse: Opportunit\\u00E9s pour un employ\\u00E9\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"div\", 11)(37, \"label\", 26);\n          i0.ɵɵtext(38, \"S\\u00E9lectionner un employ\\u00E9:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"select\", 27);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function MatchingComponent_Template_select_ngModelChange_39_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.selectedEmployeeId, $event) || (ctx.selectedEmployeeId = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"change\", function MatchingComponent_Template_select_change_39_listener() {\n            return ctx.onEmployeeSelect();\n          });\n          i0.ɵɵelementStart(40, \"option\", 14);\n          i0.ɵɵtext(41, \"-- Choisir un employ\\u00E9 --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(42, MatchingComponent_option_42_Template, 2, 3, \"option\", 15);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(43, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function MatchingComponent_Template_button_click_43_listener() {\n            return ctx.performInverseMatching();\n          });\n          i0.ɵɵtemplate(44, MatchingComponent_span_44_Template, 2, 0, \"span\", 18)(45, MatchingComponent_span_45_Template, 2, 0, \"span\", 18);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(46, MatchingComponent_div_46_Template, 2, 0, \"div\", 20)(47, MatchingComponent_div_47_Template, 2, 1, \"div\", 21)(48, MatchingComponent_div_48_Template, 5, 1, \"div\", 23)(49, MatchingComponent_div_49_Template, 2, 0, \"div\", 24);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(19);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedJobId);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngValue\", null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.jobDescriptions);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedJobId || ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.matchingResults.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.matchingErrorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.autoAssignmentMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.matchingResults.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.matchingResults.length === 0 && ctx.selectedJobId && !ctx.loadingMatching && !ctx.matchingErrorMessage);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedEmployeeId);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngValue\", null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.selectedEmployeeId || ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loadingInverseMatching);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.inverseMatchingErrorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.inverseMatchingResults.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.inverseMatchingResults.length === 0 && ctx.selectedEmployeeId && !ctx.loadingInverseMatching && !ctx.inverseMatchingErrorMessage);\n        }\n      },\n      dependencies: [CommonModule, i4.NgForOf, i4.NgIf, i4.DecimalPipe, FormsModule, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.RangeValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, EmployeeCardComponent],\n      styles: [\"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGNoaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOENBQThDIiwiZmlsZSI6Im1hdGNoaW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBZGRpdGlvbmFsIG1hdGNoaW5nIHBhZ2Ugc3R5bGVzIGlmIG5lZWRlZCAqLyJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvbWF0Y2hpbmcvbWF0Y2hpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEM7QUFDOUMsZ1RBQWdUIiwic291cmNlc0NvbnRlbnQiOlsiLyogQWRkaXRpb25hbCBtYXRjaGluZyBwYWdlIHN0eWxlcyBpZiBuZWVkZWQgKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","EmployeeCardComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","job_r1","id","ɵɵadvance","ɵɵtextInterpolate2","emploi","filiere_activite","ɵɵtwoWayListener","MatchingComponent_div_27_Template_input_ngModelChange_7_listener","$event","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵtwoWayBindingSet","minScoreForAssignment","ɵɵresetView","MatchingComponent_div_27_Template_input_ngModelChange_18_listener","maxAssignments","ɵɵlistener","MatchingComponent_div_27_Template_button_click_32_listener","performAutoAssignment","ɵɵtemplate","MatchingComponent_div_27_span_34_Template","MatchingComponent_div_27_span_35_Template","ɵɵelement","MatchingComponent_div_27_span_38_Template","MatchingComponent_div_27_span_39_Template","ɵɵtextInterpolate1","ɵɵtwoWayProperty","ɵɵpipeBind2","matchingResults","length","loadingAutoAssignment","loadingMatching","matchingErrorMessage","ɵɵclassMap","autoAssignmentMessage","includes","ɵɵtextInterpolate","getEmployeeFromResult","result_r4","score","MatchingComponent_div_31_app_employee_card_4_Template","emp_r5","name","position","inverseMatchingErrorMessage","tmp_3_0","getJobDescriptionFromResult","result_r6","tmp_4_0","MatchingComponent_div_48_div_4_Template","inverseMatchingResults","MatchingComponent","constructor","jobDescriptionService","employeeService","matchingService","jobDescriptions","employees","selectedJobId","selectedEmployeeId","loadingJobDescriptions","loadingEmployees","loadingInverseMatching","ngOnInit","loadJobDescriptions","loadEmployees","getJobDescriptions","subscribe","next","data","error","err","console","getEmployees","onJobSelect","onEmployeeSelect","performMatching","getJobEmployeeSkillMatch","results","sort","a","b","performInverseMatching","promises","forEach","job","push","getMatchingResults","Promise","all","map","p","toPromise","then","allResultsArrays","allResults","concat","filter","r","undefined","result","employee_id","catch","eligibleCandidates","slice","confirmMessage","c","toFixed","join","window","confirm","assignmentPromises","candidate","assignEmployeeToJobDescription","success","successful","failed","message","find","emp","email","hire_date","job_description_id","ɵɵdirectiveInject","i1","JobDescriptionService","i2","EmployeeService","i3","MatchingService","selectors","decls","vars","consts","template","MatchingComponent_Template","rf","ctx","MatchingComponent_Template_select_ngModelChange_19_listener","MatchingComponent_Template_select_change_19_listener","MatchingComponent_option_22_Template","MatchingComponent_Template_button_click_24_listener","MatchingComponent_span_25_Template","MatchingComponent_span_26_Template","MatchingComponent_div_27_Template","MatchingComponent_div_28_Template","MatchingComponent_div_29_Template","MatchingComponent_div_30_Template","MatchingComponent_div_31_Template","MatchingComponent_div_32_Template","MatchingComponent_Template_select_ngModelChange_39_listener","MatchingComponent_Template_select_change_39_listener","MatchingComponent_option_42_Template","MatchingComponent_Template_button_click_43_listener","MatchingComponent_span_44_Template","MatchingComponent_span_45_Template","MatchingComponent_div_46_Template","MatchingComponent_div_47_Template","MatchingComponent_div_48_Template","MatchingComponent_div_49_Template","i4","NgForOf","NgIf","DecimalPipe","i5","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","RangeValueAccessor","SelectControlValueAccessor","NgControlStatus","NgModel","styles"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\matching\\matching.component.ts","C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\matching\\matching.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { JobDescriptionService } from '../../services/job-description.service';\nimport { EmployeeService } from '../../services/employee.service';\nimport { MatchingService } from '../../services/matching.service';\nimport { JobDescription } from '../../models/job-description.model';\nimport { Employee } from '../../models/employee.model';\nimport { MatchingResult } from '../../models/matching.model';\nimport { EmployeeCardComponent } from '../../components/employee-card/employee-card.component';\n\n@Component({\n  selector: 'app-matching',\n  standalone: true,\n  imports: [CommonModule, FormsModule, EmployeeCardComponent],\n  templateUrl: './matching.component.html',\n  styleUrls: ['./matching.component.css']\n})\nexport class MatchingComponent implements OnInit {\n  jobDescriptions: JobDescription[] = [];\n  employees: Employee[] = [];\n  selectedJobId: number | null = null;\n  selectedEmployeeId: number | null = null;\n  matchingResults: MatchingResult[] = [];\n  inverseMatchingResults: MatchingResult[] = [];\n\n  loadingJobDescriptions: boolean = true;\n  loadingEmployees: boolean = true;\n  loadingMatching: boolean = false;\n  loadingInverseMatching: boolean = false;\n  loadingAutoAssignment: boolean = false;\n\n  matchingErrorMessage: string | null = null;\n  inverseMatchingErrorMessage: string | null = null;\n  autoAssignmentMessage: string | null = null;\n\n  // Paramètres d'affectation automatique\n  minScoreForAssignment: number = 70;\n  maxAssignments: number = 5;\n\n  constructor(\n    private jobDescriptionService: JobDescriptionService,\n    private employeeService: EmployeeService,\n    private matchingService: MatchingService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadJobDescriptions();\n    this.loadEmployees();\n  }\n\n  loadJobDescriptions(): void {\n    this.loadingJobDescriptions = true;\n    this.jobDescriptionService.getJobDescriptions().subscribe({\n      next: (data) => {\n        this.jobDescriptions = data;\n        this.loadingJobDescriptions = false;\n      },\n      error: (err) => {\n        console.error('Error loading job descriptions:', err);\n        this.matchingErrorMessage = 'Erreur lors du chargement des fiches de poste.';\n        this.loadingJobDescriptions = false;\n      }\n    });\n  }\n\n  loadEmployees(): void {\n    this.loadingEmployees = true;\n    this.employeeService.getEmployees().subscribe({\n      next: (data) => {\n        this.employees = data;\n        this.loadingEmployees = false;\n      },\n      error: (err) => {\n        console.error('Error loading employees:', err);\n        this.inverseMatchingErrorMessage = 'Erreur lors du chargement des employés.';\n        this.loadingEmployees = false;\n      }\n    });\n  }\n\n  onJobSelect(): void {\n    this.matchingResults = [];\n    this.matchingErrorMessage = null;\n  }\n\n  onEmployeeSelect(): void {\n    this.inverseMatchingResults = [];\n    this.inverseMatchingErrorMessage = null;\n  }\n\n  performMatching(): void {\n    if (!this.selectedJobId) {\n      this.matchingErrorMessage = 'Veuillez sélectionner une fiche de poste.';\n      return;\n    }\n\n    this.loadingMatching = true;\n    this.matchingErrorMessage = null;\n    this.matchingResults = [];\n\n    // Utilise le nouveau controller jobemployeeskillmatch\n    this.matchingService.getJobEmployeeSkillMatch(this.selectedJobId).subscribe({\n      next: (results) => {\n        this.matchingResults = results.sort((a, b) => b.score - a.score); // Sort by score descending\n        this.loadingMatching = false;\n      },\n      error: (err) => {\n        console.error('Error performing matching:', err);\n        this.matchingErrorMessage = 'Erreur lors du calcul du matching. Vérifiez que le backend et FastAPI sont en cours d\\'exécution.';\n        this.loadingMatching = false;\n      }\n    });\n  }\n\n  performInverseMatching(): void {\n    if (!this.selectedEmployeeId) {\n      this.inverseMatchingErrorMessage = 'Veuillez sélectionner un employé.';\n      return;\n    }\n\n    this.loadingInverseMatching = true;\n    this.inverseMatchingErrorMessage = null;\n    this.inverseMatchingResults = [];\n\n    // For inverse matching, we iterate through all job descriptions\n    // and call the matching service for each job with the selected employee.\n    // This assumes the backend's /jobemployeeskillmatch/:jobId endpoint\n    // can handle a single employee's skills being matched against a job.\n    // If the backend's /calculate endpoint in FastAPI is used, it would be different.\n\n    // Current backend endpoint only takes jobId and returns all matching employees for that job.\n    // To do inverse matching, we need to call the matching for each job and filter results.\n    // This might be inefficient for a large number of jobs.\n    // A dedicated inverse matching endpoint on the backend would be ideal.\n\n    // For demonstration, we'll simulate by calling matching for all jobs and filtering.\n    const promises: Observable<MatchingResult[]>[] = [];\n    this.jobDescriptions.forEach(job => {\n      if (job.id) {\n        promises.push(this.matchingService.getMatchingResults(job.id));\n      }\n    });\n\n    // Combine all observables and process results\n    // This is a simplified approach. A more robust solution would involve a backend endpoint\n    // specifically for inverse matching or a more complex client-side aggregation.\n    Promise.all(promises.map(p => p.toPromise())).then(allResultsArrays => {\n      const allResults: MatchingResult[] = [].concat(...allResultsArrays.filter(r => r !== undefined) as any);\n      this.inverseMatchingResults = allResults.filter(result => result.employee_id === this.selectedEmployeeId)\n                                              .sort((a, b) => b.score - a.score); // Sort by score descending\n      this.loadingInverseMatching = false;\n    }).catch(err => {\n      console.error('Error performing inverse matching:', err);\n      this.inverseMatchingErrorMessage = 'Erreur lors du calcul du matching inverse. Assurez-vous que le service FastAPI est en cours d\\'exécution.';\n      this.loadingInverseMatching = false;\n    });\n  }\n\n  // Nouvelle méthode pour l'affectation automatique\n  performAutoAssignment(): void {\n    if (!this.selectedJobId) {\n      this.autoAssignmentMessage = 'Veuillez sélectionner une fiche de poste.';\n      return;\n    }\n\n    if (this.matchingResults.length === 0) {\n      this.autoAssignmentMessage = 'Veuillez d\\'abord effectuer un matching.';\n      return;\n    }\n\n    const eligibleCandidates = this.matchingResults\n      .filter(result => result.score >= this.minScoreForAssignment)\n      .slice(0, this.maxAssignments);\n\n    if (eligibleCandidates.length === 0) {\n      this.autoAssignmentMessage = `Aucun candidat n'atteint le score minimum de ${this.minScoreForAssignment}%.`;\n      return;\n    }\n\n    const confirmMessage = `Voulez-vous affecter automatiquement ${eligibleCandidates.length} employé(s) à cette fiche de poste ?\\n\\nCandidats sélectionnés :\\n${eligibleCandidates.map(c => `• ${c.name} (${c.score.toFixed(1)}%)`).join('\\n')}`;\n\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    this.loadingAutoAssignment = true;\n    this.autoAssignmentMessage = null;\n\n    // Effectuer les affectations une par une\n    const assignmentPromises = eligibleCandidates.map(candidate => \n      this.employeeService.assignEmployeeToJobDescription(candidate.employee_id, this.selectedJobId!)\n        .toPromise()\n        .then(() => ({ success: true, candidate }))\n        .catch(error => ({ success: false, candidate, error }))\n    );\n\n    Promise.all(assignmentPromises).then(results => {\n      const successful = results.filter(r => r.success);\n      const failed = results.filter(r => !r.success);\n\n      let message = '';\n      if (successful.length > 0) {\n        message += `✅ ${successful.length} employé(s) affecté(s) avec succès :\\n`;\n        message += successful.map(r => `• ${r.candidate.name} (${r.candidate.score.toFixed(1)}%)`).join('\\n');\n      }\n\n      if (failed.length > 0) {\n        message += `\\n\\n❌ ${failed.length} affectation(s) échouée(s) :\\n`;\n        message += failed.map(r => `• ${r.candidate.name} : ${r.error?.error?.message || 'Erreur inconnue'}`).join('\\n');\n      }\n\n      this.autoAssignmentMessage = message;\n      this.loadingAutoAssignment = false;\n\n      // Recharger les employés pour voir les changements\n      this.loadEmployees();\n    }).catch(error => {\n      console.error('Error during auto assignment:', error);\n      this.autoAssignmentMessage = '❌ Erreur lors de l\\'affectation automatique.';\n      this.loadingAutoAssignment = false;\n    });\n  }\n\n  getEmployeeFromResult(result: MatchingResult): Employee {\n    return this.employees.find(emp => emp.id === result.employee_id) || { \n      id: result.employee_id, \n      name: result.name, \n      position: result.position, \n      email: '', \n      hire_date: '' \n    };\n  }\n\n  getJobDescriptionFromResult(result: MatchingResult): JobDescription | undefined {\n    return this.jobDescriptions.find(job => job.id === result.job_description_id);\n  }\n}","<div class=\"p-6\">\n  <h2 class=\"text-3xl font-bold text-primary mb-6\">Matching Intelligent</h2>\n  \n  <div class=\"bg-blue-50 border-l-4 border-blue-400 p-4 mb-6\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <p class=\"text-sm text-blue-700\">\n          <strong>Algorithme de Matching :</strong> Notre système analyse les compétences requises pour chaque poste et les compare avec les compétences des employés pour calculer un score de compatibilité précis.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card mb-6\">\n    <h3 class=\"text-xl font-semibold text-dark mb-4\">🎯 Trouver les meilleurs candidats pour un poste</h3>\n    <div class=\"mb-4\">\n      <label for=\"jobDescriptionSelect\" class=\"block text-gray-700 text-sm font-bold mb-2\">Sélectionner une fiche de poste:</label>\n      <select id=\"jobDescriptionSelect\" [(ngModel)]=\"selectedJobId\" (change)=\"onJobSelect()\"\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n        <option [ngValue]=\"null\" disabled>-- Choisir une fiche de poste --</option>\n        <option *ngFor=\"let job of jobDescriptions\" [ngValue]=\"job.id\">\n          {{ job.emploi }} ({{ job.filiere_activite }})\n        </option>\n      </select>\n    </div>\n    <div class=\"flex gap-4\">\n      <button (click)=\"performMatching()\" [disabled]=\"!selectedJobId || loadingMatching\" class=\"btn btn-primary\">\n        <span *ngIf=\"!loadingMatching\">Lancer le Matching</span>\n        <span *ngIf=\"loadingMatching\">Chargement...</span>\n      </button>\n    </div>\n  </div>\n\n  <!-- Section Affectation Automatique -->\n  <div *ngIf=\"matchingResults.length > 0\" class=\"card mb-6 bg-gradient-to-r from-green-50 to-blue-50 border-l-4 border-green-400\">\n    <h3 class=\"text-xl font-semibold text-dark mb-4\">🤖 Affectation Automatique</h3>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n      <div>\n        <label class=\"block text-gray-700 text-sm font-bold mb-2\">Score minimum requis: {{ minScoreForAssignment }}%</label>\n        <input type=\"range\" [(ngModel)]=\"minScoreForAssignment\" min=\"50\" max=\"100\" step=\"5\" \n               class=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\">\n        <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\n          <span>50%</span>\n          <span>75%</span>\n          <span>100%</span>\n        </div>\n      </div>\n      <div>\n        <label class=\"block text-gray-700 text-sm font-bold mb-2\">Nombre max d'affectations: {{ maxAssignments }}</label>\n        <input type=\"range\" [(ngModel)]=\"maxAssignments\" min=\"1\" max=\"10\" step=\"1\" \n               class=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\">\n        <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\n          <span>1</span>\n          <span>5</span>\n          <span>10</span>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"mb-4 p-3 bg-blue-100 rounded-md\">\n      <p class=\"text-sm text-blue-800\">\n        <strong>Candidats éligibles:</strong> \n        {{ (matchingResults | filter: 'score >= ' + minScoreForAssignment).length }} employé(s) \n        avec un score ≥ {{ minScoreForAssignment }}%\n      </p>\n    </div>\n\n    <button (click)=\"performAutoAssignment()\" \n            [disabled]=\"loadingAutoAssignment || (matchingResults | filter: 'score >= ' + minScoreForAssignment).length === 0\" \n            class=\"btn btn-primary bg-green-600 hover:bg-green-700\">\n      <span *ngIf=\"!loadingMatching\">Lancer le Matching</span>\n      <span *ngIf=\"loadingMatching\">Chargement...</span>\n      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\"></path>\n      </svg>\n      <span *ngIf=\"!loadingAutoAssignment\">Affectation Automatique</span>\n      <span *ngIf=\"loadingAutoAssignment\">Affectation en cours...</span>\n    </button>\n  </div>\n\n  <div *ngIf=\"loadingMatching\" class=\"text-center text-primary mb-4\">\n    Calcul du matching en cours...\n  </div>\n\n  <div *ngIf=\"matchingErrorMessage\" class=\"mt-4 p-3 bg-red-100 text-red-700 rounded-md\">\n    {{ matchingErrorMessage }}\n  </div>\n\n  <!-- Messages d'affectation automatique -->\n  <div *ngIf=\"autoAssignmentMessage\" class=\"mt-4 p-4 rounded-md\" \n       [class]=\"autoAssignmentMessage.includes('✅') ? 'bg-green-100 text-green-800 border border-green-200' : 'bg-red-100 text-red-700 border border-red-200'\">\n    <pre class=\"whitespace-pre-wrap font-sans\">{{ autoAssignmentMessage }}</pre>\n  </div>\n\n  <div *ngIf=\"matchingResults.length > 0\" class=\"mt-8\">\n    <h3 class=\"text-2xl font-bold text-primary mb-4\">Résultats du Matching</h3>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <app-employee-card *ngFor=\"let result of matchingResults\"\n                         [employee]=\"getEmployeeFromResult(result)\"\n                         [matchingScore]=\"result.score\">\n      </app-employee-card>\n    </div>\n  </div>\n\n  <div *ngIf=\"matchingResults.length === 0 && selectedJobId && !loadingMatching && !matchingErrorMessage\" class=\"mt-8 text-center text-gray-600\">\n    Aucun employé correspondant trouvé pour cette fiche de poste.\n  </div>\n\n  <!-- Inverse Matching Section -->\n  <div class=\"card mt-12\">\n    <h3 class=\"text-xl font-semibold text-dark mb-4\">🔄 Matching Inverse: Opportunités pour un employé</h3>\n    <div class=\"mb-4\">\n      <label for=\"employeeSelect\" class=\"block text-gray-700 text-sm font-bold mb-2\">Sélectionner un employé:</label>\n      <select id=\"employeeSelect\" [(ngModel)]=\"selectedEmployeeId\" (change)=\"onEmployeeSelect()\"\n              class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\">\n        <option [ngValue]=\"null\" disabled>-- Choisir un employé --</option>\n        <option *ngFor=\"let emp of employees\" [ngValue]=\"emp.id\">\n          {{ emp.name }} ({{ emp.position }})\n        </option>\n      </select>\n    </div>\n    <button (click)=\"performInverseMatching()\" [disabled]=\"!selectedEmployeeId || loadingInverseMatching\" class=\"btn btn-primary\">\n      <span *ngIf=\"!loadingInverseMatching\">Lancer le Matching Inverse</span>\n      <span *ngIf=\"loadingInverseMatching\">Chargement...</span>\n    </button>\n  </div>\n\n  <div *ngIf=\"loadingInverseMatching\" class=\"text-center text-primary mb-4\">\n    Calcul du matching inverse en cours...\n  </div>\n\n  <div *ngIf=\"inverseMatchingErrorMessage\" class=\"mt-4 p-3 bg-red-100 text-red-700 rounded-md\">\n    {{ inverseMatchingErrorMessage }}\n  </div>\n\n  <div *ngIf=\"inverseMatchingResults.length > 0\" class=\"mt-8\">\n    <h3 class=\"text-2xl font-bold text-primary mb-4\">📊 Opportunités de Poste</h3>\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <div *ngFor=\"let result of inverseMatchingResults\" class=\"card mb-4\">\n        <h3 class=\"text-xl font-semibold text-primary\">{{ getJobDescriptionFromResult(result)?.emploi }}</h3>\n        <p class=\"text-dark\">{{ getJobDescriptionFromResult(result)?.filiere_activite }}</p>\n        <div class=\"mt-4 text-lg font-bold text-green-600\">\n          Score de correspondance: {{ result.score | number:'1.0-2' }}%\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div *ngIf=\"inverseMatchingResults.length === 0 && selectedEmployeeId && !loadingInverseMatching && !inverseMatchingErrorMessage\" class=\"mt-8 text-center text-gray-600\">\n    Aucune opportunité de poste trouvée pour cet employé.\n  </div>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}