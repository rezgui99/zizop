{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ResetPasswordComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16)(2, \"div\", 17);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 18);\n    i0.ɵɵelement(4, \"path\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(5, \"div\", 20)(6, \"h3\", 21);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\", 22);\n    i0.ɵɵtext(9, \" Redirection vers la page de connexion... \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.successMessage, \" \");\n  }\n}\nfunction ResetPasswordComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\", 16)(2, \"div\", 17);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 24);\n    i0.ɵɵelement(4, \"path\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(5, \"div\", 20)(6, \"h3\", 26);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction ResetPasswordComponent_div_13__svg_svg_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 36);\n    i0.ɵɵelement(1, \"path\", 37)(2, \"path\", 38);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_13__svg_svg_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 36);\n    i0.ɵɵelement(1, \"path\", 39);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_13_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getFieldError(\"newPassword\"), \" \");\n  }\n}\nfunction ResetPasswordComponent_div_13__svg_svg_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 36);\n    i0.ɵɵelement(1, \"path\", 37)(2, \"path\", 38);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_13__svg_svg_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 36);\n    i0.ɵɵelement(1, \"path\", 39);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_13_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getFieldError(\"confirmPassword\"), \" \");\n  }\n}\nfunction ResetPasswordComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"div\")(2, \"label\", 28);\n    i0.ɵɵtext(3, \" Nouveau mot de passe \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 29);\n    i0.ɵɵelement(5, \"input\", 30);\n    i0.ɵɵelementStart(6, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ResetPasswordComponent_div_13_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.togglePasswordVisibility(\"password\"));\n    });\n    i0.ɵɵtemplate(7, ResetPasswordComponent_div_13__svg_svg_7_Template, 3, 0, \"svg\", 32)(8, ResetPasswordComponent_div_13__svg_svg_8_Template, 2, 0, \"svg\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, ResetPasswordComponent_div_13_p_9_Template, 2, 1, \"p\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\")(11, \"label\", 34);\n    i0.ɵɵtext(12, \" Confirmer le nouveau mot de passe \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 29);\n    i0.ɵɵelement(14, \"input\", 35);\n    i0.ɵɵelementStart(15, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ResetPasswordComponent_div_13_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.togglePasswordVisibility(\"confirmPassword\"));\n    });\n    i0.ɵɵtemplate(16, ResetPasswordComponent_div_13__svg_svg_16_Template, 3, 0, \"svg\", 32)(17, ResetPasswordComponent_div_13__svg_svg_17_Template, 2, 0, \"svg\", 32);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(18, ResetPasswordComponent_div_13_p_18_Template, 2, 1, \"p\", 33);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassMap(\"appearance-none relative block w-full px-3 py-2 pr-10 border rounded-md placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm \" + (ctx_r0.getFieldError(\"newPassword\") ? \"border-red-300\" : \"border-gray-300\"));\n    i0.ɵɵproperty(\"type\", ctx_r0.showPassword ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.showPassword);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showPassword);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getFieldError(\"newPassword\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassMap(\"appearance-none relative block w-full px-3 py-2 pr-10 border rounded-md placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm \" + (ctx_r0.getFieldError(\"confirmPassword\") ? \"border-red-300\" : \"border-gray-300\"));\n    i0.ɵɵproperty(\"type\", ctx_r0.showConfirmPassword ? \"text\" : \"password\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.showConfirmPassword);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showConfirmPassword);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getFieldError(\"confirmPassword\"));\n  }\n}\nfunction ResetPasswordComponent_div_14__svg_svg_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 45);\n    i0.ɵɵelement(1, \"path\", 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_14__svg_svg_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 46);\n    i0.ɵɵelement(1, \"circle\", 47)(2, \"path\", 48);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 41)(2, \"span\", 42);\n    i0.ɵɵtemplate(3, ResetPasswordComponent_div_14__svg_svg_3_Template, 2, 0, \"svg\", 43)(4, ResetPasswordComponent_div_14__svg_svg_4_Template, 3, 0, \"svg\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading || ctx_r0.resetPasswordForm.invalid || !ctx_r0.token);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.loading ? \"R\\u00E9initialisation...\" : \"R\\u00E9initialiser le mot de passe\", \" \");\n  }\n}\nexport class ResetPasswordComponent {\n  constructor(formBuilder, authService, router, route) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.route = route;\n    this.loading = false;\n    this.errorMessage = null;\n    this.successMessage = null;\n    this.token = null;\n    this.showPassword = false;\n    this.showConfirmPassword = false;\n    this.resetPasswordForm = this.formBuilder.group({\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  ngOnInit() {\n    // Get token from query parameters\n    this.token = this.route.snapshot.queryParams['token'];\n    if (!this.token) {\n      this.errorMessage = 'Token de réinitialisation manquant ou invalide';\n    }\n  }\n  passwordMatchValidator(form) {\n    const password = form.get('newPassword');\n    const confirmPassword = form.get('confirmPassword');\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\n      confirmPassword.setErrors({\n        passwordMismatch: true\n      });\n    } else if (confirmPassword?.errors?.['passwordMismatch']) {\n      delete confirmPassword.errors['passwordMismatch'];\n      if (Object.keys(confirmPassword.errors).length === 0) {\n        confirmPassword.setErrors(null);\n      }\n    }\n    return null;\n  }\n  get f() {\n    return this.resetPasswordForm.controls;\n  }\n  togglePasswordVisibility(field) {\n    if (field === 'password') {\n      this.showPassword = !this.showPassword;\n    } else {\n      this.showConfirmPassword = !this.showConfirmPassword;\n    }\n  }\n  onSubmit() {\n    if (this.resetPasswordForm.invalid || !this.token) {\n      this.markFormGroupTouched();\n      return;\n    }\n    this.loading = true;\n    this.errorMessage = null;\n    this.successMessage = null;\n    const resetPasswordData = {\n      token: this.token,\n      newPassword: this.resetPasswordForm.value.newPassword,\n      confirmPassword: this.resetPasswordForm.value.confirmPassword\n    };\n    this.authService.resetPassword(resetPasswordData).subscribe({\n      next: response => {\n        this.successMessage = response.message || 'Mot de passe réinitialisé avec succès';\n        this.resetPasswordForm.reset();\n        // Redirect to login after 3 seconds\n        setTimeout(() => {\n          this.router.navigate(['/auth/login']);\n        }, 3000);\n      },\n      error: error => {\n        console.error('Reset password error:', error);\n        this.errorMessage = error.message || 'Erreur lors de la réinitialisation du mot de passe';\n      },\n      complete: () => {\n        this.loading = false;\n      }\n    });\n  }\n  markFormGroupTouched() {\n    Object.keys(this.resetPasswordForm.controls).forEach(key => {\n      const control = this.resetPasswordForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n  getFieldError(fieldName) {\n    const field = this.resetPasswordForm.get(fieldName);\n    if (field?.errors && field.touched) {\n      if (field.errors['required']) {\n        return `${this.getFieldLabel(fieldName)} est requis`;\n      }\n      if (field.errors['minlength']) {\n        return `${this.getFieldLabel(fieldName)} doit contenir au moins ${field.errors['minlength'].requiredLength} caractères`;\n      }\n      if (field.errors['passwordMismatch']) {\n        return 'Les mots de passe ne correspondent pas';\n      }\n    }\n    return null;\n  }\n  getFieldLabel(fieldName) {\n    const labels = {\n      newPassword: 'Le nouveau mot de passe',\n      confirmPassword: 'La confirmation du mot de passe'\n    };\n    return labels[fieldName] || fieldName;\n  }\n  static {\n    this.ɵfac = function ResetPasswordComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResetPasswordComponent,\n      selectors: [[\"app-reset-password\"]],\n      decls: 20,\n      vars: 5,\n      consts: [[1, \"min-h-screen\", \"flex\", \"items-center\", \"justify-center\", \"bg-gray-50\", \"py-12\", \"px-4\", \"sm:px-6\", \"lg:px-8\"], [1, \"max-w-md\", \"w-full\", \"space-y-8\"], [1, \"mx-auto\", \"h-12\", \"w-12\", \"flex\", \"items-center\", \"justify-center\", \"rounded-full\", \"bg-primary\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"h-8\", \"w-8\", \"text-white\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\"], [1, \"mt-6\", \"text-center\", \"text-3xl\", \"font-extrabold\", \"text-gray-900\"], [1, \"mt-2\", \"text-center\", \"text-sm\", \"text-gray-600\"], [1, \"mt-8\", \"space-y-6\", 3, \"ngSubmit\", \"formGroup\"], [\"class\", \"rounded-md bg-green-50 p-4\", 4, \"ngIf\"], [\"class\", \"rounded-md bg-red-50 p-4\", 4, \"ngIf\"], [\"class\", \"space-y-4\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"text-center\"], [1, \"text-sm\", \"text-gray-600\"], [\"routerLink\", \"/auth/login\", 1, \"font-medium\", \"text-primary\", \"hover:text-blue-500\"], [1, \"rounded-md\", \"bg-green-50\", \"p-4\"], [1, \"flex\"], [1, \"flex-shrink-0\"], [\"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-green-400\"], [\"fill-rule\", \"evenodd\", \"d\", \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\", \"clip-rule\", \"evenodd\"], [1, \"ml-3\"], [1, \"text-sm\", \"font-medium\", \"text-green-800\"], [1, \"text-sm\", \"text-green-700\", \"mt-1\"], [1, \"rounded-md\", \"bg-red-50\", \"p-4\"], [\"viewBox\", \"0 0 20 20\", \"fill\", \"currentColor\", 1, \"h-5\", \"w-5\", \"text-red-400\"], [\"fill-rule\", \"evenodd\", \"d\", \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\", \"clip-rule\", \"evenodd\"], [1, \"text-sm\", \"font-medium\", \"text-red-800\"], [1, \"space-y-4\"], [\"for\", \"newPassword\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [1, \"mt-1\", \"relative\"], [\"id\", \"newPassword\", \"name\", \"newPassword\", \"autocomplete\", \"new-password\", \"formControlName\", \"newPassword\", \"placeholder\", \"Minimum 6 caract\\u00E8res\", 3, \"type\"], [\"type\", \"button\", 1, \"absolute\", \"inset-y-0\", \"right-0\", \"pr-3\", \"flex\", \"items-center\", 3, \"click\"], [\"class\", \"h-5 w-5 text-gray-400 hover:text-gray-600\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 4, \"ngIf\"], [\"class\", \"mt-1 text-sm text-red-600\", 4, \"ngIf\"], [\"for\", \"confirmPassword\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\"], [\"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"autocomplete\", \"new-password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"R\\u00E9p\\u00E9tez votre nouveau mot de passe\", 3, \"type\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"h-5\", \"w-5\", \"text-gray-400\", \"hover:text-gray-600\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"], [1, \"mt-1\", \"text-sm\", \"text-red-600\"], [\"type\", \"submit\", 1, \"group\", \"relative\", \"w-full\", \"flex\", \"justify-center\", \"py-2\", \"px-4\", \"border\", \"border-transparent\", \"text-sm\", \"font-medium\", \"rounded-md\", \"text-white\", \"bg-primary\", \"hover:bg-blue-700\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-offset-2\", \"focus:ring-primary\", \"disabled:opacity-50\", \"disabled:cursor-not-allowed\", 3, \"disabled\"], [1, \"absolute\", \"left-0\", \"inset-y-0\", \"flex\", \"items-center\", \"pl-3\"], [\"class\", \"h-5 w-5 text-blue-300 group-hover:text-blue-400\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 4, \"ngIf\"], [\"class\", \"animate-spin h-5 w-5 text-blue-300\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 4, \"ngIf\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"h-5\", \"w-5\", \"text-blue-300\", \"group-hover:text-blue-400\"], [\"fill\", \"none\", \"viewBox\", \"0 0 24 24\", 1, \"animate-spin\", \"h-5\", \"w-5\", \"text-blue-300\"], [\"cx\", \"12\", \"cy\", \"12\", \"r\", \"10\", \"stroke\", \"currentColor\", \"stroke-width\", \"4\", 1, \"opacity-25\"], [\"fill\", \"currentColor\", \"d\", \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\", 1, \"opacity-75\"]],\n      template: function ResetPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\")(3, \"div\", 2);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(4, \"svg\", 3);\n          i0.ɵɵelement(5, \"path\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(6, \"h2\", 5);\n          i0.ɵɵtext(7, \" R\\u00E9initialiser votre mot de passe \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\", 6);\n          i0.ɵɵtext(9, \" Entrez votre nouveau mot de passe \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_10_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(11, ResetPasswordComponent_div_11_Template, 10, 1, \"div\", 8)(12, ResetPasswordComponent_div_12_Template, 8, 1, \"div\", 9)(13, ResetPasswordComponent_div_13_Template, 19, 12, \"div\", 10)(14, ResetPasswordComponent_div_14_Template, 6, 4, \"div\", 11);\n          i0.ɵɵelementStart(15, \"div\", 12)(16, \"p\", 13);\n          i0.ɵɵtext(17, \" Retour \\u00E0 la \");\n          i0.ɵɵelementStart(18, \"a\", 14);\n          i0.ɵɵtext(19, \" page de connexion \");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.successMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.successMessage);\n        }\n      },\n      dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, RouterLink],\n      styles: [\"\\n\\n.animate-spin[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDO0VBQ0Usa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0U7SUFDRSx1QkFBdUI7RUFDekI7RUFDQTtJQUNFLHlCQUF5QjtFQUMzQjtBQUNGIiwiZmlsZSI6InJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBSZXNldCBwYXNzd29yZCBjb21wb25lbnQgc3BlY2lmaWMgc3R5bGVzICovXHJcbi5hbmltYXRlLXNwaW4ge1xyXG4gIGFuaW1hdGlvbjogc3BpbiAxcyBsaW5lYXIgaW5maW5pdGU7XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICB9XHJcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXV0aC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZDQUE2QztBQUM3QztFQUNFLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFO0lBQ0UsdUJBQXVCO0VBQ3pCO0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDRjtBQUNBLGdyQkFBZ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLyogUmVzZXQgcGFzc3dvcmQgY29tcG9uZW50IHNwZWNpZmljIHN0eWxlcyAqL1xyXG4uYW5pbWF0ZS1zcGluIHtcclxuICBhbmltYXRpb246IHNwaW4gMXMgbGluZWFyIGluZmluaXRlO1xyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNwaW4ge1xyXG4gIGZyb20ge1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XHJcbiAgfVxyXG4gIHRvIHtcclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Validators","ReactiveFormsModule","RouterLink","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","successMessage","errorMessage","getFieldError","ɵɵlistener","ResetPasswordComponent_div_13_Template_button_click_6_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","togglePasswordVisibility","ɵɵtemplate","ResetPasswordComponent_div_13__svg_svg_7_Template","ResetPasswordComponent_div_13__svg_svg_8_Template","ResetPasswordComponent_div_13_p_9_Template","ResetPasswordComponent_div_13_Template_button_click_15_listener","ResetPasswordComponent_div_13__svg_svg_16_Template","ResetPasswordComponent_div_13__svg_svg_17_Template","ResetPasswordComponent_div_13_p_18_Template","ɵɵclassMap","ɵɵproperty","showPassword","showConfirmPassword","ResetPasswordComponent_div_14__svg_svg_3_Template","ResetPasswordComponent_div_14__svg_svg_4_Template","loading","resetPasswordForm","invalid","token","ResetPasswordComponent","constructor","formBuilder","authService","router","route","group","newPassword","required","minLength","confirmPassword","validators","passwordMatchValidator","ngOnInit","snapshot","queryParams","form","password","get","value","setErrors","passwordMismatch","errors","Object","keys","length","f","controls","field","onSubmit","markFormGroupTouched","resetPasswordData","resetPassword","subscribe","next","response","message","reset","setTimeout","navigate","error","console","complete","forEach","key","control","markAsTouched","fieldName","touched","getFieldLabel","requiredLength","labels","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","ActivatedRoute","selectors","decls","vars","consts","template","ResetPasswordComponent_Template","rf","ctx","ResetPasswordComponent_Template_form_ngSubmit_10_listener","ResetPasswordComponent_div_11_Template","ResetPasswordComponent_div_12_Template","ResetPasswordComponent_div_13_Template","ResetPasswordComponent_div_14_Template","i4","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\auth\\reset-password\\reset-password.component.ts","C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\auth\\reset-password\\reset-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router, ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { AuthService } from '../../../services/auth.service';\r\nimport { ApiError } from '../../../models/auth.model';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, RouterLink],\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  resetPasswordForm: FormGroup;\r\n  loading = false;\r\n  errorMessage: string | null = null;\r\n  successMessage: string | null = null;\r\n  token: string | null = null;\r\n  showPassword = false;\r\n  showConfirmPassword = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.resetPasswordForm = this.formBuilder.group({\r\n      newPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required]]\r\n    }, {\r\n      validators: this.passwordMatchValidator\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Get token from query parameters\r\n    this.token = this.route.snapshot.queryParams['token'];\r\n    \r\n    if (!this.token) {\r\n      this.errorMessage = 'Token de réinitialisation manquant ou invalide';\r\n    }\r\n  }\r\n\r\n  passwordMatchValidator(form: FormGroup) {\r\n    const password = form.get('newPassword');\r\n    const confirmPassword = form.get('confirmPassword');\r\n    \r\n    if (password && confirmPassword && password.value !== confirmPassword.value) {\r\n      confirmPassword.setErrors({ passwordMismatch: true });\r\n    } else if (confirmPassword?.errors?.['passwordMismatch']) {\r\n      delete confirmPassword.errors['passwordMismatch'];\r\n      if (Object.keys(confirmPassword.errors).length === 0) {\r\n        confirmPassword.setErrors(null);\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  get f() {\r\n    return this.resetPasswordForm.controls;\r\n  }\r\n\r\n  togglePasswordVisibility(field: 'password' | 'confirmPassword'): void {\r\n    if (field === 'password') {\r\n      this.showPassword = !this.showPassword;\r\n    } else {\r\n      this.showConfirmPassword = !this.showConfirmPassword;\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.resetPasswordForm.invalid || !this.token) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.errorMessage = null;\r\n    this.successMessage = null;\r\n\r\n    const resetPasswordData = {\r\n      token: this.token,\r\n      newPassword: this.resetPasswordForm.value.newPassword,\r\n      confirmPassword: this.resetPasswordForm.value.confirmPassword\r\n    };\r\n\r\n    this.authService.resetPassword(resetPasswordData).subscribe({\r\n      next: (response) => {\r\n        this.successMessage = response.message || 'Mot de passe réinitialisé avec succès';\r\n        this.resetPasswordForm.reset();\r\n        \r\n        // Redirect to login after 3 seconds\r\n        setTimeout(() => {\r\n          this.router.navigate(['/auth/login']);\r\n        }, 3000);\r\n      },\r\n      error: (error: ApiError) => {\r\n        console.error('Reset password error:', error);\r\n        this.errorMessage = error.message || 'Erreur lors de la réinitialisation du mot de passe';\r\n      },\r\n      complete: () => {\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.resetPasswordForm.controls).forEach(key => {\r\n      const control = this.resetPasswordForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  getFieldError(fieldName: string): string | null {\r\n    const field = this.resetPasswordForm.get(fieldName);\r\n    \r\n    if (field?.errors && field.touched) {\r\n      if (field.errors['required']) {\r\n        return `${this.getFieldLabel(fieldName)} est requis`;\r\n      }\r\n      if (field.errors['minlength']) {\r\n        return `${this.getFieldLabel(fieldName)} doit contenir au moins ${field.errors['minlength'].requiredLength} caractères`;\r\n      }\r\n      if (field.errors['passwordMismatch']) {\r\n        return 'Les mots de passe ne correspondent pas';\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  private getFieldLabel(fieldName: string): string {\r\n    const labels: { [key: string]: string } = {\r\n      newPassword: 'Le nouveau mot de passe',\r\n      confirmPassword: 'La confirmation du mot de passe'\r\n    };\r\n    return labels[fieldName] || fieldName;\r\n  }\r\n}","<div class=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n  <div class=\"max-w-md w-full space-y-8\">\r\n    <!-- Header -->\r\n    <div>\r\n      <div class=\"mx-auto h-12 w-12 flex items-center justify-center rounded-full bg-primary\">\r\n        <svg class=\"h-8 w-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\"></path>\r\n        </svg>\r\n      </div>\r\n      <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n        Réinitialiser votre mot de passe\r\n      </h2>\r\n      <p class=\"mt-2 text-center text-sm text-gray-600\">\r\n        Entrez votre nouveau mot de passe\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Form -->\r\n    <form class=\"mt-8 space-y-6\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n      <!-- Success Message -->\r\n      <div *ngIf=\"successMessage\" class=\"rounded-md bg-green-50 p-4\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex-shrink-0\">\r\n            <svg class=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\r\n            </svg>\r\n          </div>\r\n          <div class=\"ml-3\">\r\n            <h3 class=\"text-sm font-medium text-green-800\">\r\n              {{ successMessage }}\r\n            </h3>\r\n            <p class=\"text-sm text-green-700 mt-1\">\r\n              Redirection vers la page de connexion...\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Error Message -->\r\n      <div *ngIf=\"errorMessage\" class=\"rounded-md bg-red-50 p-4\">\r\n        <div class=\"flex\">\r\n          <div class=\"flex-shrink-0\">\r\n            <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\r\n            </svg>\r\n          </div>\r\n          <div class=\"ml-3\">\r\n            <h3 class=\"text-sm font-medium text-red-800\">\r\n              {{ errorMessage }}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"space-y-4\" *ngIf=\"!successMessage\">\r\n        <!-- New Password -->\r\n        <div>\r\n          <label for=\"newPassword\" class=\"block text-sm font-medium text-gray-700\">\r\n            Nouveau mot de passe\r\n          </label>\r\n          <div class=\"mt-1 relative\">\r\n            <input\r\n              id=\"newPassword\"\r\n              name=\"newPassword\"\r\n              [type]=\"showPassword ? 'text' : 'password'\"\r\n              autocomplete=\"new-password\"\r\n              formControlName=\"newPassword\"\r\n              [class]=\"'appearance-none relative block w-full px-3 py-2 pr-10 border rounded-md placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm ' + \r\n                      (getFieldError('newPassword') ? 'border-red-300' : 'border-gray-300')\"\r\n              placeholder=\"Minimum 6 caractères\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n              (click)=\"togglePasswordVisibility('password')\">\r\n              <svg *ngIf=\"!showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\r\n              </svg>\r\n              <svg *ngIf=\"showPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <p *ngIf=\"getFieldError('newPassword')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('newPassword') }}\r\n          </p>\r\n        </div>\r\n\r\n        <!-- Confirm Password -->\r\n        <div>\r\n          <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700\">\r\n            Confirmer le nouveau mot de passe\r\n          </label>\r\n          <div class=\"mt-1 relative\">\r\n            <input\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              [type]=\"showConfirmPassword ? 'text' : 'password'\"\r\n              autocomplete=\"new-password\"\r\n              formControlName=\"confirmPassword\"\r\n              [class]=\"'appearance-none relative block w-full px-3 py-2 pr-10 border rounded-md placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm ' + \r\n                      (getFieldError('confirmPassword') ? 'border-red-300' : 'border-gray-300')\"\r\n              placeholder=\"Répétez votre nouveau mot de passe\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n              (click)=\"togglePasswordVisibility('confirmPassword')\">\r\n              <svg *ngIf=\"!showConfirmPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\r\n              </svg>\r\n              <svg *ngIf=\"showConfirmPassword\" class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <p *ngIf=\"getFieldError('confirmPassword')\" class=\"mt-1 text-sm text-red-600\">\r\n            {{ getFieldError('confirmPassword') }}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Submit button -->\r\n      <div *ngIf=\"!successMessage\">\r\n        <button\r\n          type=\"submit\"\r\n          [disabled]=\"loading || resetPasswordForm.invalid || !token\"\r\n          class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:opacity-50 disabled:cursor-not-allowed\">\r\n          <span class=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n            <svg *ngIf=\"!loading\" class=\"h-5 w-5 text-blue-300 group-hover:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\"></path>\r\n            </svg>\r\n            <svg *ngIf=\"loading\" class=\"animate-spin h-5 w-5 text-blue-300\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\r\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n          </span>\r\n          {{ loading ? 'Réinitialisation...' : 'Réinitialiser le mot de passe' }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Back to login -->\r\n      <div class=\"text-center\">\r\n        <p class=\"text-sm text-gray-600\">\r\n          Retour à la\r\n          <a routerLink=\"/auth/login\" class=\"font-medium text-primary hover:text-blue-500\">\r\n            page de connexion\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}