{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/employee.service\";\nimport * as i2 from \"../../services/skill.service\";\nimport * as i3 from \"../../services/job-description.service\";\nimport * as i4 from \"../../services/matching.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nconst _c0 = a0 => [\"/profile\", a0];\nfunction EmployeesComponent_div_6_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const job_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", job_r3.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", job_r3.emploi, \" - \", job_r3.filiere_activite, \" \");\n  }\n}\nfunction EmployeesComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"h3\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 17);\n    i0.ɵɵlistener(\"ngSubmit\", function EmployeesComponent_div_6_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(4, \"div\", 18)(5, \"div\")(6, \"label\", 19);\n    i0.ɵɵtext(7, \"Nom *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"label\", 19);\n    i0.ɵɵtext(11, \"Poste *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\")(14, \"label\", 19);\n    i0.ɵɵtext(15, \"Email *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\")(18, \"label\", 19);\n    i0.ɵɵtext(19, \"Date d'embauche *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\")(22, \"label\", 19);\n    i0.ɵɵtext(23, \"T\\u00E9l\\u00E9phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"div\")(26, \"label\", 19);\n    i0.ɵɵtext(27, \"Genre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"select\", 25)(29, \"option\", 26);\n    i0.ɵɵtext(30, \"S\\u00E9lectionner\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"option\", 27);\n    i0.ɵɵtext(32, \"Homme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"option\", 28);\n    i0.ɵɵtext(34, \"Femme\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"option\", 29);\n    i0.ɵɵtext(36, \"Autre\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(37, \"div\")(38, \"label\", 19);\n    i0.ɵɵtext(39, \"Localisation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"input\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"div\")(42, \"label\", 19);\n    i0.ɵɵtext(43, \"Fiche de poste\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"select\", 31)(45, \"option\", 26);\n    i0.ɵɵtext(46, \"-- Aucune fiche assign\\u00E9e --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(47, EmployeesComponent_div_6_option_47_Template, 2, 3, \"option\", 32);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(48, \"div\", 33)(49, \"label\", 19);\n    i0.ɵɵtext(50, \"Notes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(51, \"textarea\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"div\", 35)(53, \"button\", 36);\n    i0.ɵɵtext(54);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function EmployeesComponent_div_6_Template_button_click_55_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.cancelEdit());\n    });\n    i0.ɵɵtext(56, \" Annuler \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.editingEmployee ? \"Modifier l'employ\\u00E9\" : \"Ajouter un employ\\u00E9\", \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.employeeForm);\n    i0.ɵɵadvance(44);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.jobDescriptions);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.employeeForm.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.editingEmployee ? \"Mettre \\u00E0 jour\" : \"Ajouter\", \" \");\n  }\n}\nfunction EmployeesComponent_tr_25_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 47);\n    i0.ɵɵtext(1, \"Non assign\\u00E9\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeesComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 39)(1, \"td\", 40);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 41);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 41);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 41);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 41);\n    i0.ɵɵtemplate(11, EmployeesComponent_tr_25_span_11_Template, 2, 0, \"span\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\", 43)(13, \"button\", 44);\n    i0.ɵɵtext(14, \"Profil\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 45);\n    i0.ɵɵlistener(\"click\", function EmployeesComponent_tr_25_Template_button_click_15_listener() {\n      const employee_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.editEmployee(employee_r5));\n    });\n    i0.ɵɵtext(16, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function EmployeesComponent_tr_25_Template_button_click_17_listener() {\n      const employee_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.deleteEmployee(employee_r5));\n    });\n    i0.ɵɵtext(18, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const employee_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r5.position);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r5.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 6, employee_r5.hire_date, \"dd/MM/yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !employee_r5.job_description_id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c0, employee_r5.id));\n  }\n}\nfunction EmployeesComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 48);\n    i0.ɵɵtext(1, \" Aucun employ\\u00E9 trouv\\u00E9. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeesComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1, \" Chargement des employ\\u00E9s... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeesComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 50);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nexport class EmployeesComponent {\n  constructor(employeeService, skillService, jobDescriptionService, matchingService, formBuilder) {\n    this.employeeService = employeeService;\n    this.skillService = skillService;\n    this.jobDescriptionService = jobDescriptionService;\n    this.matchingService = matchingService;\n    this.formBuilder = formBuilder;\n    this.employees = [];\n    this.employeeSkills = [];\n    this.jobDescriptions = [];\n    this.skills = [];\n    this.skillLevels = [];\n    this.showAddForm = false;\n    this.editingEmployee = null;\n    this.showAssignJobForm = false;\n    this.assigningEmployee = null;\n    this.selectedJobId = null;\n    this.loading = false;\n    this.loadingSkills = false;\n    this.loadingJobs = false;\n    this.errorMessage = null;\n    // Nouvelles propriétés pour l'affectation automatique\n    this.showAutoAssignModal = false;\n    this.autoAssigningEmployee = null;\n    this.bestJobMatches = [];\n    this.loadingBestMatches = false;\n    this.autoAssignMessage = null;\n    this.viewMode = 'list';\n    this.employeeForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      position: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      hire_date: ['', Validators.required],\n      phone: [''],\n      gender: [''],\n      location: [''],\n      notes: [''],\n      job_description_id: [''],\n      skills: this.formBuilder.array([]) // FormArray pour les compétences\n    });\n  }\n  ngOnInit() {\n    this.loadEmployees();\n    this.loadEmployeeSkills();\n    this.loadSkillsData();\n    this.loadJobDescriptions();\n  }\n  loadEmployees() {\n    this.loading = true;\n    this.errorMessage = null;\n    this.employeeService.getEmployees().subscribe({\n      next: employees => {\n        this.employees = employees;\n        this.loading = false;\n      },\n      error: err => {\n        console.error('Error loading employees:', err);\n        this.errorMessage = 'Erreur lors du chargement des employés. Veuillez réessayer plus tard.';\n        this.loading = false;\n      }\n    });\n  }\n  loadEmployeeSkills() {\n    this.loadingSkills = true;\n    this.skillService.getEmployeeSkills().subscribe({\n      next: employeeSkills => {\n        this.employeeSkills = employeeSkills;\n        this.loadingSkills = false;\n      },\n      error: err => {\n        console.error('Error loading employee skills:', err);\n        this.loadingSkills = false;\n      }\n    });\n  }\n  loadSkillsData() {\n    Promise.all([this.skillService.getSkills().toPromise(), this.skillService.getSkillLevels().toPromise()]).then(([skills, skillLevels]) => {\n      this.skills = skills || [];\n      this.skillLevels = skillLevels || [];\n    }).catch(err => {\n      console.error('Error loading skills data:', err);\n    });\n  }\n  loadJobDescriptions() {\n    this.loadingJobs = true;\n    this.jobDescriptionService.getJobDescriptions().subscribe({\n      next: jobDescriptions => {\n        this.jobDescriptions = jobDescriptions;\n        this.loadingJobs = false;\n      },\n      error: err => {\n        console.error('Error loading job descriptions:', err);\n        this.loadingJobs = false;\n      }\n    });\n  }\n  get skillsFormArray() {\n    return this.employeeForm.get('skills');\n  }\n  addSkill() {\n    const skillGroup = this.formBuilder.group({\n      skill_id: ['', Validators.required],\n      actual_skill_level_id: ['', Validators.required],\n      acquired_date: [''],\n      certification: [''],\n      last_evaluated_date: ['']\n    });\n    this.skillsFormArray.push(skillGroup);\n  }\n  removeSkill(index) {\n    this.skillsFormArray.removeAt(index);\n  }\n  switchView(mode) {\n    this.viewMode = mode;\n    if (mode === 'skills' && this.employeeSkills.length === 0) {\n      this.loadEmployeeSkills();\n    }\n  }\n  getEmployeeSkills(employeeId) {\n    return this.employeeSkills.filter(skill => skill.employee_id === employeeId);\n  }\n  getEmployeeName(employeeId) {\n    const employee = this.employees.find(emp => emp.id === employeeId);\n    return employee ? employee.name : `Employee ${employeeId}`;\n  }\n  onSubmit() {\n    if (this.employeeForm.valid) {\n      const formValue = this.employeeForm.value;\n      const employeeData = {\n        name: formValue.name,\n        position: formValue.position,\n        email: formValue.email,\n        hire_date: formValue.hire_date,\n        phone: formValue.phone || '',\n        gender: formValue.gender || '',\n        location: formValue.location || '',\n        notes: formValue.notes || '',\n        job_description_id: this.parseIntegerField(formValue.job_description_id) || undefined,\n        skills: formValue.skills.filter(skill => skill.skill_id && skill.actual_skill_level_id).map(skill => ({\n          skill_id: parseInt(skill.skill_id, 10),\n          actual_skill_level_id: parseInt(skill.actual_skill_level_id, 10),\n          acquired_date: skill.acquired_date || null,\n          certification: skill.certification || null,\n          last_evaluated_date: skill.last_evaluated_date || null\n        }))\n      };\n      console.log('Données employé à envoyer:', employeeData);\n      if (this.editingEmployee) {\n        this.employeeService.updateEmployee(this.editingEmployee.id, employeeData).subscribe({\n          next: updatedEmployee => {\n            const index = this.employees.findIndex(emp => emp.id === updatedEmployee.id);\n            if (index !== -1) {\n              this.employees[index] = updatedEmployee;\n            }\n            this.loadEmployeeSkills(); // Recharger les compétences\n            this.cancelEdit();\n            this.errorMessage = null;\n            console.log('✅ Employé mis à jour avec succès');\n          },\n          error: err => {\n            console.error('Error updating employee:', err);\n            this.errorMessage = `❌ Erreur mise à jour: ${err.error?.message || err.message}`;\n          }\n        });\n      } else {\n        this.employeeService.createEmployee(employeeData).subscribe({\n          next: newEmployee => {\n            this.employees.push(newEmployee);\n            this.loadEmployeeSkills(); // Recharger les compétences\n            this.cancelEdit();\n            this.errorMessage = null;\n            console.log('✅ Employé créé avec succès');\n          },\n          error: err => {\n            console.error('Error creating employee:', err);\n            this.errorMessage = `❌ Erreur création: ${err.error?.message || err.message}`;\n          }\n        });\n      }\n    } else {\n      console.log('❌ Formulaire invalide:', this.employeeForm.errors);\n      this.errorMessage = 'Veuillez remplir tous les champs obligatoires.';\n    }\n  }\n  editEmployee(employee) {\n    this.editingEmployee = employee;\n    // Remplir les champs de base\n    this.employeeForm.patchValue({\n      name: employee.name,\n      position: employee.position,\n      email: employee.email,\n      hire_date: employee.hire_date,\n      phone: employee.phone || '',\n      gender: employee.gender || '',\n      location: employee.location || '',\n      notes: employee.notes || ''\n    });\n  }\n  deleteEmployee(employee) {\n    if (window.confirm(`Êtes-vous sûr de vouloir supprimer ${employee.name} ?`)) {\n      this.employeeService.deleteEmployee(employee.id).subscribe({\n        next: () => {\n          this.employees = this.employees.filter(emp => emp.id !== employee.id);\n          this.errorMessage = null;\n        },\n        error: err => {\n          console.error('Error deleting employee:', err);\n          this.errorMessage = 'Erreur lors de la suppression de l\\'employé.';\n        }\n      });\n    }\n  }\n  cancelEdit() {\n    this.editingEmployee = null;\n    this.showAddForm = false;\n    this.employeeForm.reset();\n    // Vider le FormArray des compétences\n    while (this.skillsFormArray.length !== 0) {\n      this.skillsFormArray.removeAt(0);\n    }\n    this.errorMessage = null;\n  }\n  // Méthode pour voir tous les employés d'une fiche de poste\n  viewEmployeesOfJob(jobId) {\n    this.employeeService.getEmployeesByJobDescription(jobId).subscribe({\n      next: employees => {\n        console.log('Employés de cette fiche de poste:', employees);\n        // Vous pouvez afficher ces données dans un modal ou une nouvelle vue\n      },\n      error: err => {\n        console.error('Error loading employees of job:', err);\n        this.errorMessage = 'Erreur lors du chargement des employés de cette fiche de poste.';\n      }\n    });\n  }\n  // Méthode pour voir toutes les fiches d'un employé\n  viewJobsOfEmployee(employeeId) {\n    this.employeeService.getJobDescriptionsByEmployee(employeeId).subscribe({\n      next: jobs => {\n        console.log('Fiches de poste de cet employé:', jobs);\n        // Vous pouvez afficher ces données dans un modal ou une nouvelle vue\n      },\n      error: err => {\n        console.error('Error loading jobs of employee:', err);\n        this.errorMessage = 'Erreur lors du chargement des fiches de cet employé.';\n      }\n    });\n  }\n  parseIntegerField(value) {\n    if (!value || value === '' || value === 'null' || value === 'undefined') {\n      return null;\n    }\n    const parsed = parseInt(value, 10);\n    return isNaN(parsed) ? null : parsed;\n  }\n  editSkill(skill) {\n    // TODO: Implémenter l'édition de compétence\n    console.log('Edit skill:', skill);\n  }\n  deleteSkill(skill) {\n    this.skillService.deleteEmployeeSkill(skill.employee_id, skill.skill_id).subscribe({\n      next: () => {\n        this.loadEmployeeSkills();\n        // Optionnel: afficher un message de succès\n      },\n      error: err => {\n        console.error('Error deleting skill:', err);\n        this.errorMessage = 'Erreur lors de la suppression de la compétence.';\n      }\n    });\n  }\n  getSkillName(skillId) {\n    const skill = this.skills.find(s => s.id === skillId);\n    return skill ? skill.name : 'Compétence inconnue';\n  }\n  getSkillLevelName(levelId) {\n    const level = this.skillLevels.find(l => l.id === levelId);\n    return level ? level.level_name : 'Niveau inconnu';\n  }\n  getJobDescriptionName(jobId) {\n    const job = this.jobDescriptions.find(j => j.id === jobId);\n    return job ? `${job.emploi} - ${job.filiere_activite}` : 'Fiche inconnue';\n  }\n  // Nouvelle méthode pour trouver le meilleur poste pour un employé\n  findBestJobForEmployee(employee) {\n    this.autoAssigningEmployee = employee;\n    this.showAutoAssignModal = true;\n    this.loadingBestMatches = true;\n    this.autoAssignMessage = null;\n    this.bestJobMatches = [];\n    // Utiliser la méthode alternative car le backend n'a probablement pas l'endpoint spécifique\n    this.matchingService.findBestJobForEmployeeAlternative(employee.id, this.jobDescriptions).subscribe({\n      next: matches => {\n        this.bestJobMatches = matches.slice(0, 5); // Top 5 des meilleurs matches\n        this.loadingBestMatches = false;\n        if (this.bestJobMatches.length === 0) {\n          this.autoAssignMessage = 'Aucun poste compatible trouvé pour cet employé.';\n        }\n      },\n      error: err => {\n        console.error('Error finding best job matches:', err);\n        this.autoAssignMessage = 'Erreur lors de la recherche des postes compatibles.';\n        this.loadingBestMatches = false;\n      }\n    });\n  }\n  // Affecter l'employé au poste sélectionné\n  assignToBestJob(jobId, score) {\n    if (!this.autoAssigningEmployee) return;\n    const confirmMessage = `Voulez-vous affecter ${this.autoAssigningEmployee.name} à ce poste ?\\n\\nScore de compatibilité : ${score.toFixed(1)}%`;\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n    this.employeeService.assignEmployeeToJobDescription(this.autoAssigningEmployee.id, jobId).subscribe({\n      next: () => {\n        // Mettre à jour l'employé localement\n        const index = this.employees.findIndex(emp => emp.id === this.autoAssigningEmployee.id);\n        if (index !== -1) {\n          this.employees[index].job_description_id = jobId;\n        }\n        this.autoAssignMessage = `✅ ${this.autoAssigningEmployee.name} a été affecté(e) avec succès !`;\n        this.bestJobMatches = [];\n        // Fermer le modal après 2 secondes\n        setTimeout(() => {\n          this.closeAutoAssignModal();\n        }, 2000);\n      },\n      error: err => {\n        console.error('Error assigning employee:', err);\n        this.autoAssignMessage = `❌ Erreur lors de l'affectation : ${err.error?.message || err.message}`;\n      }\n    });\n  }\n  // Fermer le modal d'affectation automatique\n  closeAutoAssignModal() {\n    this.showAutoAssignModal = false;\n    this.autoAssigningEmployee = null;\n    this.bestJobMatches = [];\n    this.autoAssignMessage = null;\n    this.loadingBestMatches = false;\n  }\n  // Obtenir le nom du poste à partir de l'ID\n  getJobNameFromId(jobId) {\n    const job = this.jobDescriptions.find(j => j.id === jobId);\n    return job ? job.emploi : 'Poste inconnu';\n  }\n  // Obtenir la filière du poste à partir de l'ID\n  getJobFiliereFromId(jobId) {\n    const job = this.jobDescriptions.find(j => j.id === jobId);\n    return job ? job.filiere_activite : 'Filière inconnue';\n  }\n  static {\n    this.ɵfac = function EmployeesComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EmployeesComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.SkillService), i0.ɵɵdirectiveInject(i3.JobDescriptionService), i0.ɵɵdirectiveInject(i4.MatchingService), i0.ɵɵdirectiveInject(i5.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EmployeesComponent,\n      selectors: [[\"app-employees\"]],\n      decls: 29,\n      vars: 6,\n      consts: [[1, \"p-6\"], [1, \"text-3xl\", \"font-bold\", \"text-primary\", \"mb-6\"], [1, \"mb-4\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"card mb-6\", 4, \"ngIf\"], [1, \"card\"], [1, \"overflow-x-auto\"], [1, \"min-w-full\", \"table-auto\"], [1, \"bg-gray-50\"], [1, \"px-6\", \"py-3\", \"text-left\", \"text-xs\", \"font-medium\", \"text-gray-500\", \"uppercase\", \"tracking-wider\"], [1, \"bg-white\", \"divide-y\", \"divide-gray-200\"], [\"class\", \"hover:bg-gray-50\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-center text-gray-600 mt-4\", 4, \"ngIf\"], [\"class\", \"text-center text-primary mt-4\", 4, \"ngIf\"], [\"class\", \"mt-4 p-3 bg-red-100 text-red-700 rounded-md\", 4, \"ngIf\"], [1, \"card\", \"mb-6\"], [1, \"text-xl\", \"font-semibold\", \"text-dark\", \"mb-4\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"gap-4\"], [1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [\"type\", \"text\", \"formControlName\", \"position\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [\"type\", \"date\", \"formControlName\", \"hire_date\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [\"type\", \"tel\", \"formControlName\", \"phone\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [\"formControlName\", \"gender\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [\"value\", \"\"], [\"value\", \"Homme\"], [\"value\", \"Femme\"], [\"value\", \"Autre\"], [\"type\", \"text\", \"formControlName\", \"location\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [\"formControlName\", \"job_description_id\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-4\"], [\"formControlName\", \"notes\", \"rows\", \"3\", 1, \"w-full\", \"px-3\", \"py-2\", \"border\", \"rounded-md\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary\"], [1, \"mt-6\", \"flex\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"disabled:opacity-50\", \"disabled:cursor-not-allowed\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [3, \"value\"], [1, \"hover:bg-gray-50\"], [1, \"px-6\", \"py-4\", \"whitespace-nowrap\", \"text-sm\", \"font-medium\", \"text-gray-900\"], [1, \"px-6\", \"py-4\", \"whitespace-nowrap\", \"text-sm\", \"text-gray-500\"], [\"class\", \"text-gray-400\", 4, \"ngIf\"], [1, \"px-6\", \"py-4\", \"whitespace-nowrap\", \"text-sm\", \"font-medium\"], [1, \"text-green-600\", \"hover:text-green-900\", \"mr-3\", 3, \"routerLink\"], [1, \"text-primary\", \"hover:text-blue-700\", \"mr-3\", 3, \"click\"], [1, \"text-red-600\", \"hover:text-red-900\", 3, \"click\"], [1, \"text-gray-400\"], [1, \"text-center\", \"text-gray-600\", \"mt-4\"], [1, \"text-center\", \"text-primary\", \"mt-4\"], [1, \"mt-4\", \"p-3\", \"bg-red-100\", \"text-red-700\", \"rounded-md\"]],\n      template: function EmployeesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Liste des Employ\\u00E9s\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function EmployeesComponent_Template_button_click_4_listener() {\n            return ctx.showAddForm = !ctx.showAddForm;\n          });\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(6, EmployeesComponent_div_6_Template, 57, 5, \"div\", 4);\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"table\", 7)(10, \"thead\", 8)(11, \"tr\")(12, \"th\", 9);\n          i0.ɵɵtext(13, \"Nom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"th\", 9);\n          i0.ɵɵtext(15, \"Poste\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"th\", 9);\n          i0.ɵɵtext(17, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"th\", 9);\n          i0.ɵɵtext(19, \"Date d'embauche\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\", 9);\n          i0.ɵɵtext(21, \"Fiche de poste\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"th\", 9);\n          i0.ɵɵtext(23, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"tbody\", 10);\n          i0.ɵɵtemplate(25, EmployeesComponent_tr_25_Template, 19, 11, \"tr\", 11);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵtemplate(26, EmployeesComponent_div_26_Template, 2, 0, \"div\", 12)(27, EmployeesComponent_div_27_Template, 2, 0, \"div\", 13)(28, EmployeesComponent_div_28_Template, 2, 1, \"div\", 14);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", ctx.showAddForm ? \"Annuler\" : \"Ajouter un employ\\u00E9\", \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showAddForm || ctx.editingEmployee);\n          i0.ɵɵadvance(19);\n          i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.employees.length === 0 && !ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [CommonModule, i6.NgForOf, i6.NgIf, i6.DatePipe, FormsModule, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, ReactiveFormsModule, i5.FormGroupDirective, i5.FormControlName, RouterLink],\n      styles: [\"\\n\\n\\n\\n\\n.bg-gold[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #FFD700, #FFA500);\\n}\\n\\n.bg-silver[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #C0C0C0, #A8A8A8);\\n}\\n\\n.bg-bronze[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #CD7F32, #B8860B);\\n}\\n\\n\\n\\n.transition-all[_ngcontent-%COMP%] {\\n  transition: all 0.3s ease-in-out;\\n}\\n\\n\\n\\n.max-h-96[_ngcontent-%COMP%] {\\n  max-height: 24rem;\\n}\\n\\n\\n\\n.hover\\\\:bg-gray-50[_ngcontent-%COMP%]:hover {\\n  background-color: #f9fafb;\\n}\\n\\n\\n\\n.bg-green-50[_ngcontent-%COMP%] {\\n  background-color: #f0fdf4;\\n}\\n\\n.bg-red-50[_ngcontent-%COMP%] {\\n  background-color: #fef2f2;\\n}\\n\\n.text-green-800[_ngcontent-%COMP%] {\\n  color: #166534;\\n}\\n\\n.text-red-800[_ngcontent-%COMP%] {\\n  color: #991b1b;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtDQUErQzs7QUFFL0MsNENBQTRDO0FBQzVDO0VBQ0UscURBQXFEO0FBQ3ZEOztBQUVBO0VBQ0UscURBQXFEO0FBQ3ZEOztBQUVBO0VBQ0UscURBQXFEO0FBQ3ZEOztBQUVBLDZDQUE2QztBQUM3QztFQUNFLGdDQUFnQztBQUNsQzs7QUFFQSx5QkFBeUI7QUFDekI7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUEsOENBQThDO0FBQzlDO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBLDBDQUEwQztBQUMxQztFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6ImVtcGxveWVlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQWRkaXRpb25hbCBlbXBsb3llZXMgcGFnZSBzdHlsZXMgaWYgbmVlZGVkICovXHJcblxyXG4vKiBTdHlsZXMgcG91ciBsZXMgbcOpZGFpbGxlcyBkZSBjbGFzc2VtZW50ICovXHJcbi5iZy1nb2xkIHtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjRkZENzAwLCAjRkZBNTAwKTtcclxufVxyXG5cclxuLmJnLXNpbHZlciB7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI0MwQzBDMCwgI0E4QThBOCk7XHJcbn1cclxuXHJcbi5iZy1icm9uemUge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNDRDdGMzIsICNCODg2MEIpO1xyXG59XHJcblxyXG4vKiBBbmltYXRpb24gcG91ciBsZXMgYmFycmVzIGRlIHByb2dyZXNzaW9uICovXHJcbi50cmFuc2l0aW9uLWFsbCB7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBwb3VyIGxlIG1vZGFsICovXHJcbi5tYXgtaC05NiB7XHJcbiAgbWF4LWhlaWdodDogMjRyZW07XHJcbn1cclxuXHJcbi8qIEhvdmVyIGVmZmVjdHMgcG91ciBsZXMgY2FydGVzIGRlIG1hdGNoaW5nICovXHJcbi5ob3ZlclxcOmJnLWdyYXktNTA6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmOWZhZmI7XHJcbn1cclxuXHJcbi8qIFN0eWxlcyBwb3VyIGxlcyBiYWRnZXMgZGUgY29tcMOpdGVuY2VzICovXHJcbi5iZy1ncmVlbi01MCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZmRmNDtcclxufVxyXG5cclxuLmJnLXJlZC01MCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZjJmMjtcclxufVxyXG5cclxuLnRleHQtZ3JlZW4tODAwIHtcclxuICBjb2xvcjogIzE2NjUzNDtcclxufVxyXG5cclxuLnRleHQtcmVkLTgwMCB7XHJcbiAgY29sb3I6ICM5OTFiMWI7XHJcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZW1wbG95ZWVzL2VtcGxveWVlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtDQUErQzs7QUFFL0MsNENBQTRDO0FBQzVDO0VBQ0UscURBQXFEO0FBQ3ZEOztBQUVBO0VBQ0UscURBQXFEO0FBQ3ZEOztBQUVBO0VBQ0UscURBQXFEO0FBQ3ZEOztBQUVBLDZDQUE2QztBQUM3QztFQUNFLGdDQUFnQztBQUNsQzs7QUFFQSx5QkFBeUI7QUFDekI7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUEsOENBQThDO0FBQzlDO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBLDBDQUEwQztBQUMxQztFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCO0FBQ0EsbzJEQUFvMkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBBZGRpdGlvbmFsIGVtcGxveWVlcyBwYWdlIHN0eWxlcyBpZiBuZWVkZWQgKi9cclxuXHJcbi8qIFN0eWxlcyBwb3VyIGxlcyBtw4PCqWRhaWxsZXMgZGUgY2xhc3NlbWVudCAqL1xyXG4uYmctZ29sZCB7XHJcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI0ZGRDcwMCwgI0ZGQTUwMCk7XHJcbn1cclxuXHJcbi5iZy1zaWx2ZXIge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICNDMEMwQzAsICNBOEE4QTgpO1xyXG59XHJcblxyXG4uYmctYnJvbnplIHtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjQ0Q3RjMyLCAjQjg4NjBCKTtcclxufVxyXG5cclxuLyogQW5pbWF0aW9uIHBvdXIgbGVzIGJhcnJlcyBkZSBwcm9ncmVzc2lvbiAqL1xyXG4udHJhbnNpdGlvbi1hbGwge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xyXG59XHJcblxyXG4vKiBTdHlsZXMgcG91ciBsZSBtb2RhbCAqL1xyXG4ubWF4LWgtOTYge1xyXG4gIG1heC1oZWlnaHQ6IDI0cmVtO1xyXG59XHJcblxyXG4vKiBIb3ZlciBlZmZlY3RzIHBvdXIgbGVzIGNhcnRlcyBkZSBtYXRjaGluZyAqL1xyXG4uaG92ZXJcXDpiZy1ncmF5LTUwOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmYWZiO1xyXG59XHJcblxyXG4vKiBTdHlsZXMgcG91ciBsZXMgYmFkZ2VzIGRlIGNvbXDDg8KpdGVuY2VzICovXHJcbi5iZy1ncmVlbi01MCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZmRmNDtcclxufVxyXG5cclxuLmJnLXJlZC01MCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZlZjJmMjtcclxufVxyXG5cclxuLnRleHQtZ3JlZW4tODAwIHtcclxuICBjb2xvcjogIzE2NjUzNDtcclxufVxyXG5cclxuLnRleHQtcmVkLTgwMCB7XHJcbiAgY29sb3I6ICM5OTFiMWI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","CommonModule","FormsModule","ReactiveFormsModule","RouterLink","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","job_r3","id","ɵɵadvance","ɵɵtextInterpolate2","emploi","filiere_activite","ɵɵlistener","EmployeesComponent_div_6_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵelement","ɵɵtemplate","EmployeesComponent_div_6_option_47_Template","EmployeesComponent_div_6_Template_button_click_55_listener","cancelEdit","ɵɵtextInterpolate1","editingEmployee","employeeForm","jobDescriptions","valid","EmployeesComponent_tr_25_span_11_Template","EmployeesComponent_tr_25_Template_button_click_15_listener","employee_r5","_r4","$implicit","editEmployee","EmployeesComponent_tr_25_Template_button_click_17_listener","deleteEmployee","ɵɵtextInterpolate","name","position","email","ɵɵpipeBind2","hire_date","job_description_id","ɵɵpureFunction1","_c0","errorMessage","EmployeesComponent","constructor","employeeService","skillService","jobDescriptionService","matchingService","formBuilder","employees","employeeSkills","skills","skillLevels","showAddForm","showAssignJobForm","assigningEmployee","selectedJobId","loading","loadingSkills","loadingJobs","showAutoAssignModal","autoAssigningEmployee","bestJobMatches","loadingBestMatches","autoAssignMessage","viewMode","group","required","minLength","phone","gender","location","notes","array","ngOnInit","loadEmployees","loadEmployeeSkills","loadSkillsData","loadJobDescriptions","getEmployees","subscribe","next","error","err","console","getEmployeeSkills","Promise","all","getSkills","toPromise","getSkillLevels","then","catch","getJobDescriptions","skillsFormArray","get","addSkill","skillGroup","skill_id","actual_skill_level_id","acquired_date","certification","last_evaluated_date","push","removeSkill","index","removeAt","switchView","mode","length","employeeId","filter","skill","employee_id","getEmployeeName","employee","find","emp","formValue","value","employeeData","parseIntegerField","undefined","map","parseInt","log","updateEmployee","updatedEmployee","findIndex","message","createEmployee","newEmployee","errors","patchValue","window","confirm","reset","viewEmployeesOfJob","jobId","getEmployeesByJobDescription","viewJobsOfEmployee","getJobDescriptionsByEmployee","jobs","parsed","isNaN","editSkill","deleteSkill","deleteEmployeeSkill","getSkillName","skillId","s","getSkillLevelName","levelId","level","l","level_name","getJobDescriptionName","job","j","findBestJobForEmployee","findBestJobForEmployeeAlternative","matches","slice","assignToBestJob","score","confirmMessage","toFixed","assignEmployeeToJobDescription","setTimeout","closeAutoAssignModal","getJobNameFromId","getJobFiliereFromId","ɵɵdirectiveInject","i1","EmployeeService","i2","SkillService","i3","JobDescriptionService","i4","MatchingService","i5","FormBuilder","selectors","decls","vars","consts","template","EmployeesComponent_Template","rf","ctx","EmployeesComponent_Template_button_click_4_listener","EmployeesComponent_div_6_Template","EmployeesComponent_tr_25_Template","EmployeesComponent_div_26_Template","EmployeesComponent_div_27_Template","EmployeesComponent_div_28_Template","i6","NgForOf","NgIf","DatePipe","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\employees\\employees.component.ts","C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\employees\\employees.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterLink } from '@angular/router';\nimport { EmployeeService } from '../../services/employee.service';\nimport { SkillService } from '../../services/skill.service';\nimport { JobDescriptionService } from '../../services/job-description.service';\nimport { MatchingService } from '../../services/matching.service';\nimport { Employee, Skill, SkillLevel } from '../../models/employee.model';\nimport { JobDescription } from '../../models/job-description.model';\nimport { MatchingResult } from '../../models/matching.model';\nimport { EmployeeSkillComponent } from '../../components/employee-skill/employee-skill.component';\n\n@Component({\n  selector: 'app-employees',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterLink],\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n  employees: Employee[] = [];\n  employeeSkills: any[] = [];\n  employeeForm: FormGroup;\n  jobDescriptions: JobDescription[] = [];\n  skills: Skill[] = [];\n  skillLevels: SkillLevel[] = [];\n  showAddForm: boolean = false;\n  editingEmployee: Employee | null = null;\n  showAssignJobForm: boolean = false;\n  assigningEmployee: Employee | null = null;\n  selectedJobId: number | null = null;\n  loading: boolean = false;\n  loadingSkills: boolean = false;\n  loadingJobs: boolean = false;\n  errorMessage: string | null = null;\n  \n  // Nouvelles propriétés pour l'affectation automatique\n  showAutoAssignModal: boolean = false;\n  autoAssigningEmployee: Employee | null = null;\n  bestJobMatches: MatchingResult[] = [];\n  loadingBestMatches: boolean = false;\n  autoAssignMessage: string | null = null;\n  viewMode: 'list' | 'skills' = 'list';\n\n  constructor(\n    private employeeService: EmployeeService,\n    private skillService: SkillService,\n    private jobDescriptionService: JobDescriptionService,\n    private matchingService: MatchingService,\n    private formBuilder: FormBuilder\n  ) {\n    this.employeeForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      position: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      hire_date: ['', Validators.required],\n      phone: [''],\n      gender: [''],\n      location: [''],\n      notes: [''],\n      job_description_id: [''],\n      skills: this.formBuilder.array([]) // FormArray pour les compétences\n    });\n  }\n\n  ngOnInit(): void {\n    this.loadEmployees();\n    this.loadEmployeeSkills();\n    this.loadSkillsData();\n    this.loadJobDescriptions();\n  }\n\n  loadEmployees(): void {\n    this.loading = true;\n    this.errorMessage = null;\n    this.employeeService.getEmployees().subscribe({\n      next: (employees) => {\n        this.employees = employees;\n        this.loading = false;\n      },\n      error: (err) => {\n        console.error('Error loading employees:', err);\n        this.errorMessage = 'Erreur lors du chargement des employés. Veuillez réessayer plus tard.';\n        this.loading = false;\n      }\n    });\n  }\n\n  loadEmployeeSkills(): void {\n    this.loadingSkills = true;\n    this.skillService.getEmployeeSkills().subscribe({\n      next: (employeeSkills) => {\n        this.employeeSkills = employeeSkills;\n        this.loadingSkills = false;\n      },\n      error: (err) => {\n        console.error('Error loading employee skills:', err);\n        this.loadingSkills = false;\n      }\n    });\n  }\n\n  loadSkillsData(): void {\n    Promise.all([\n      this.skillService.getSkills().toPromise(),\n      this.skillService.getSkillLevels().toPromise()\n    ]).then(([skills, skillLevels]) => {\n      this.skills = skills || [];\n      this.skillLevels = skillLevels || [];\n    }).catch(err => {\n      console.error('Error loading skills data:', err);\n    });\n  }\n\n  loadJobDescriptions(): void {\n    this.loadingJobs = true;\n    this.jobDescriptionService.getJobDescriptions().subscribe({\n      next: (jobDescriptions) => {\n        this.jobDescriptions = jobDescriptions;\n        this.loadingJobs = false;\n      },\n      error: (err) => {\n        console.error('Error loading job descriptions:', err);\n        this.loadingJobs = false;\n      }\n    });\n  }\n\n  get skillsFormArray(): FormArray {\n    return this.employeeForm.get('skills') as FormArray;\n  }\n\n  addSkill(): void {\n    const skillGroup = this.formBuilder.group({\n      skill_id: ['', Validators.required],\n      actual_skill_level_id: ['', Validators.required],\n      acquired_date: [''],\n      certification: [''],\n      last_evaluated_date: ['']\n    });\n    this.skillsFormArray.push(skillGroup);\n  }\n\n  removeSkill(index: number): void {\n    this.skillsFormArray.removeAt(index);\n  }\n  switchView(mode: 'list' | 'skills'): void {\n    this.viewMode = mode;\n    if (mode === 'skills' && this.employeeSkills.length === 0) {\n      this.loadEmployeeSkills();\n    }\n  }\n\n  getEmployeeSkills(employeeId: number): any[] {\n    return this.employeeSkills.filter(skill => skill.employee_id === employeeId);\n  }\n\n  getEmployeeName(employeeId: number): string {\n    const employee = this.employees.find(emp => emp.id === employeeId);\n    return employee ? employee.name : `Employee ${employeeId}`;\n  }\n  onSubmit(): void {\n    if (this.employeeForm.valid) {\n      const formValue = this.employeeForm.value;\n      \n      const employeeData = {\n        name: formValue.name,\n        position: formValue.position,\n        email: formValue.email,\n        hire_date: formValue.hire_date,\n        phone: formValue.phone || '',\n        gender: formValue.gender || '',\n        location: formValue.location || '',\n        notes: formValue.notes || '',\n        job_description_id: this.parseIntegerField(formValue.job_description_id) || undefined,\n        skills: formValue.skills\n          .filter((skill: any) => skill.skill_id && skill.actual_skill_level_id)\n          .map((skill: any) => ({\n            skill_id: parseInt(skill.skill_id, 10),\n            actual_skill_level_id: parseInt(skill.actual_skill_level_id, 10),\n            acquired_date: skill.acquired_date || null,\n            certification: skill.certification || null,\n            last_evaluated_date: skill.last_evaluated_date || null\n          }))\n      } as Employee;\n      \n      console.log('Données employé à envoyer:', employeeData);\n      \n      if (this.editingEmployee) {\n        this.employeeService.updateEmployee(this.editingEmployee.id!, employeeData).subscribe({\n          next: (updatedEmployee) => {\n            const index = this.employees.findIndex(emp => emp.id === updatedEmployee.id);\n            if (index !== -1) {\n              this.employees[index] = updatedEmployee;\n            }\n            this.loadEmployeeSkills(); // Recharger les compétences\n            this.cancelEdit();\n            this.errorMessage = null;\n            console.log('✅ Employé mis à jour avec succès');\n          },\n          error: (err) => {\n            console.error('Error updating employee:', err);\n            this.errorMessage = `❌ Erreur mise à jour: ${err.error?.message || err.message}`;\n          }\n        });\n      } else {\n        this.employeeService.createEmployee(employeeData).subscribe({\n          next: (newEmployee) => {\n            this.employees.push(newEmployee);\n            this.loadEmployeeSkills(); // Recharger les compétences\n            this.cancelEdit();\n            this.errorMessage = null;\n            console.log('✅ Employé créé avec succès');\n          },\n          error: (err) => {\n            console.error('Error creating employee:', err);\n            this.errorMessage = `❌ Erreur création: ${err.error?.message || err.message}`;\n          }\n        });\n      }\n    } else {\n      console.log('❌ Formulaire invalide:', this.employeeForm.errors);\n      this.errorMessage = 'Veuillez remplir tous les champs obligatoires.';\n    }\n  }\n\n  editEmployee(employee: Employee): void {\n    this.editingEmployee = employee;\n    \n    \n    // Remplir les champs de base\n    this.employeeForm.patchValue({\n      name: employee.name,\n      position: employee.position,\n      email: employee.email,\n      hire_date: employee.hire_date,\n      phone: employee.phone || '',\n      gender: employee.gender || '',\n      location: employee.location || '',\n      notes: employee.notes || '',\n      \n    });\n\n   \n   \n  }\n\n  deleteEmployee(employee: Employee): void {\n    if (window.confirm(`Êtes-vous sûr de vouloir supprimer ${employee.name} ?`)) {\n      this.employeeService.deleteEmployee(employee.id!).subscribe({\n        next: () => {\n          this.employees = this.employees.filter(emp => emp.id !== employee.id);\n          this.errorMessage = null;\n        },\n        error: (err) => {\n          console.error('Error deleting employee:', err);\n          this.errorMessage = 'Erreur lors de la suppression de l\\'employé.';\n        }\n      });\n    }\n  }\n\n  cancelEdit(): void {\n    this.editingEmployee = null;\n    this.showAddForm = false;\n    this.employeeForm.reset();\n    \n    // Vider le FormArray des compétences\n    while (this.skillsFormArray.length !== 0) {\n      this.skillsFormArray.removeAt(0);\n    }\n    \n    this.errorMessage = null;\n  }\n\n \n\n\n\n\n\n\n    \n\n  // Méthode pour voir tous les employés d'une fiche de poste\n  viewEmployeesOfJob(jobId: number): void {\n    this.employeeService.getEmployeesByJobDescription(jobId).subscribe({\n      next: (employees) => {\n        console.log('Employés de cette fiche de poste:', employees);\n        // Vous pouvez afficher ces données dans un modal ou une nouvelle vue\n      },\n      error: (err) => {\n        console.error('Error loading employees of job:', err);\n        this.errorMessage = 'Erreur lors du chargement des employés de cette fiche de poste.';\n      }\n    });\n  }\n\n  // Méthode pour voir toutes les fiches d'un employé\n  viewJobsOfEmployee(employeeId: number): void {\n    this.employeeService.getJobDescriptionsByEmployee(employeeId).subscribe({\n      next: (jobs) => {\n        console.log('Fiches de poste de cet employé:', jobs);\n        // Vous pouvez afficher ces données dans un modal ou une nouvelle vue\n      },\n      error: (err) => {\n        console.error('Error loading jobs of employee:', err);\n        this.errorMessage = 'Erreur lors du chargement des fiches de cet employé.';\n      }\n    });\n  }\n\n  private parseIntegerField(value: any): number | null {\n    if (!value || value === '' || value === 'null' || value === 'undefined') {\n      return null;\n    }\n    const parsed = parseInt(value, 10);\n    return isNaN(parsed) ? null : parsed;\n  }\n\n  editSkill(skill: any): void {\n    // TODO: Implémenter l'édition de compétence\n    console.log('Edit skill:', skill);\n  }\n\n  deleteSkill(skill: any): void {\n    this.skillService.deleteEmployeeSkill(skill.employee_id, skill.skill_id).subscribe({\n      next: () => {\n        this.loadEmployeeSkills();\n        // Optionnel: afficher un message de succès\n      },\n      error: (err) => {\n        console.error('Error deleting skill:', err);\n        this.errorMessage = 'Erreur lors de la suppression de la compétence.';\n      }\n    });\n  }\n\n  getSkillName(skillId: number): string {\n    const skill = this.skills.find(s => s.id === skillId);\n    return skill ? skill.name : 'Compétence inconnue';\n  }\n\n  getSkillLevelName(levelId: number): string {\n    const level = this.skillLevels.find(l => l.id === levelId);\n    return level ? level.level_name : 'Niveau inconnu';\n  }\n\n  getJobDescriptionName(jobId: number): string {\n    const job = this.jobDescriptions.find(j => j.id === jobId);\n    return job ? `${job.emploi} - ${job.filiere_activite}` : 'Fiche inconnue';\n  }\n\n  // Nouvelle méthode pour trouver le meilleur poste pour un employé\n  findBestJobForEmployee(employee: Employee): void {\n    this.autoAssigningEmployee = employee;\n    this.showAutoAssignModal = true;\n    this.loadingBestMatches = true;\n    this.autoAssignMessage = null;\n    this.bestJobMatches = [];\n\n    // Utiliser la méthode alternative car le backend n'a probablement pas l'endpoint spécifique\n    this.matchingService.findBestJobForEmployeeAlternative(employee.id!, this.jobDescriptions)\n      .subscribe({\n        next: (matches) => {\n          this.bestJobMatches = matches.slice(0, 5); // Top 5 des meilleurs matches\n          this.loadingBestMatches = false;\n          \n          if (this.bestJobMatches.length === 0) {\n            this.autoAssignMessage = 'Aucun poste compatible trouvé pour cet employé.';\n          }\n        },\n        error: (err) => {\n          console.error('Error finding best job matches:', err);\n          this.autoAssignMessage = 'Erreur lors de la recherche des postes compatibles.';\n          this.loadingBestMatches = false;\n        }\n      });\n  }\n\n  // Affecter l'employé au poste sélectionné\n  assignToBestJob(jobId: number, score: number): void {\n    if (!this.autoAssigningEmployee) return;\n\n    const confirmMessage = `Voulez-vous affecter ${this.autoAssigningEmployee.name} à ce poste ?\\n\\nScore de compatibilité : ${score.toFixed(1)}%`;\n    \n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    this.employeeService.assignEmployeeToJobDescription(this.autoAssigningEmployee.id!, jobId)\n      .subscribe({\n        next: () => {\n          // Mettre à jour l'employé localement\n          const index = this.employees.findIndex(emp => emp.id === this.autoAssigningEmployee!.id);\n          if (index !== -1) {\n            this.employees[index].job_description_id = jobId;\n          }\n          \n          this.autoAssignMessage = `✅ ${this.autoAssigningEmployee!.name} a été affecté(e) avec succès !`;\n          this.bestJobMatches = [];\n          \n          // Fermer le modal après 2 secondes\n          setTimeout(() => {\n            this.closeAutoAssignModal();\n          }, 2000);\n        },\n        error: (err) => {\n          console.error('Error assigning employee:', err);\n          this.autoAssignMessage = `❌ Erreur lors de l'affectation : ${err.error?.message || err.message}`;\n        }\n      });\n  }\n\n  // Fermer le modal d'affectation automatique\n  closeAutoAssignModal(): void {\n    this.showAutoAssignModal = false;\n    this.autoAssigningEmployee = null;\n    this.bestJobMatches = [];\n    this.autoAssignMessage = null;\n    this.loadingBestMatches = false;\n  }\n\n  // Obtenir le nom du poste à partir de l'ID\n  getJobNameFromId(jobId: number): string {\n    const job = this.jobDescriptions.find(j => j.id === jobId);\n    return job ? job.emploi : 'Poste inconnu';\n  }\n\n  // Obtenir la filière du poste à partir de l'ID\n  getJobFiliereFromId(jobId: number): string {\n    const job = this.jobDescriptions.find(j => j.id === jobId);\n    return job ? job.filiere_activite : 'Filière inconnue';\n  }\n}","<div class=\"p-6\">\n  <h2 class=\"text-3xl font-bold text-primary mb-6\">Liste des Employés</h2>\n\n  <!-- Bouton d'ajout -->\n  <div class=\"mb-4\">\n    <button (click)=\"showAddForm = !showAddForm\" class=\"btn btn-primary\">\n      {{ showAddForm ? 'Annuler' : 'Ajouter un employé' }}\n    </button>\n  </div>\n\n  <!-- Formulaire d'ajout/modification -->\n  <div *ngIf=\"showAddForm || editingEmployee\" class=\"card mb-6\">\n    <h3 class=\"text-xl font-semibold text-dark mb-4\">\n      {{ editingEmployee ? 'Modifier l\\'employé' : 'Ajouter un employé' }}\n    </h3>\n    <form [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Nom *</label>\n          <input type=\"text\" formControlName=\"name\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n        </div>\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Poste *</label>\n          <input type=\"text\" formControlName=\"position\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n        </div>\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Email *</label>\n          <input type=\"email\" formControlName=\"email\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n        </div>\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Date d'embauche *</label>\n          <input type=\"date\" formControlName=\"hire_date\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n        </div>\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Téléphone</label>\n          <input type=\"tel\" formControlName=\"phone\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n        </div>\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Genre</label>\n          <select formControlName=\"gender\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n            <option value=\"\">Sélectionner</option>\n            <option value=\"Homme\">Homme</option>\n            <option value=\"Femme\">Femme</option>\n            <option value=\"Autre\">Autre</option>\n          </select>\n        </div>\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Localisation</label>\n          <input type=\"text\" formControlName=\"location\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n        </div>\n        <div>\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\">Fiche de poste</label>\n          <select formControlName=\"job_description_id\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\">\n            <option value=\"\">-- Aucune fiche assignée --</option>\n            <option *ngFor=\"let job of jobDescriptions\" [value]=\"job.id\">\n              {{ job.emploi }} - {{ job.filiere_activite }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"mt-4\">\n        <label class=\"block text-gray-700 text-sm font-bold mb-2\">Notes</label>\n        <textarea formControlName=\"notes\" rows=\"3\" class=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"></textarea>\n      </div>\n\n      <div class=\"mt-6 flex gap-2\">\n        <button type=\"submit\" [disabled]=\"!employeeForm.valid\" class=\"btn btn-primary disabled:opacity-50 disabled:cursor-not-allowed\">\n          {{ editingEmployee ? 'Mettre à jour' : 'Ajouter' }}\n        </button>\n        <button type=\"button\" (click)=\"cancelEdit()\" class=\"btn btn-secondary\">\n          Annuler\n        </button>\n      </div>\n    </form>\n  </div>\n\n  <!-- Liste des employés -->\n  <div class=\"card\">\n    <div class=\"overflow-x-auto\">\n      <table class=\"min-w-full table-auto\">\n        <thead class=\"bg-gray-50\">\n          <tr>\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nom</th>\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Poste</th>\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date d'embauche</th>\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Fiche de poste</th>\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n          </tr>\n        </thead>\n        <tbody class=\"bg-white divide-y divide-gray-200\">\n          <tr *ngFor=\"let employee of employees\" class=\"hover:bg-gray-50\">\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{{ employee.name }}</td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ employee.position }}</td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ employee.email }}</td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ employee.hire_date | date:'dd/MM/yyyy' }}</td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n              <span *ngIf=\"!employee.job_description_id\" class=\"text-gray-400\">Non assigné</span>\n            </td>\n            <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n              <button [routerLink]=\"['/profile', employee.id]\" class=\"text-green-600 hover:text-green-900 mr-3\">Profil</button>\n              <button (click)=\"editEmployee(employee)\" class=\"text-primary hover:text-blue-700 mr-3\">Modifier</button>\n              <button (click)=\"deleteEmployee(employee)\" class=\"text-red-600 hover:text-red-900\">Supprimer</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <div *ngIf=\"employees.length === 0 && !loading\" class=\"text-center text-gray-600 mt-4\">\n    Aucun employé trouvé.\n  </div>\n\n  <div *ngIf=\"loading\" class=\"text-center text-primary mt-4\">\n    Chargement des employés...\n  </div>\n\n  <div *ngIf=\"errorMessage\" class=\"mt-4 p-3 bg-red-100 text-red-700 rounded-md\">\n    {{ errorMessage }}\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}