{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeSkillService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/employeeskills'; // adapte selon ton backend\n  }\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  getOne(employee_id, skill_id) {\n    return this.http.get(`${this.apiUrl}/${employee_id}/${skill_id}`);\n  }\n  create(skill) {\n    return this.http.post(this.apiUrl, skill);\n  }\n  update(employee_id, skill_id, skill) {\n    return this.http.put(`${this.apiUrl}/${employee_id}/${skill_id}`, skill);\n  }\n  delete(employee_id, skill_id) {\n    return this.http.delete(`${this.apiUrl}/${employee_id}/${skill_id}`);\n  }\n  static {\n    this.ɵfac = function EmployeeSkillService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EmployeeSkillService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmployeeSkillService,\n      factory: EmployeeSkillService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["EmployeeSkillService","constructor","http","apiUrl","getAll","get","getOne","employee_id","skill_id","create","skill","post","update","put","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\services\\employee-skill.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface EmployeeSkill {\r\n  employee_id: number;\r\n  skill_id: number;\r\n  actual_skill_level_id: number;\r\n  acquired_date: string;\r\n  certification?: string;\r\n  last_evaluated_date?: string;\r\n  Employee?: any; // Optionnel : infos sur l'employé\r\n  Skill?: any;    // Optionnel : infos sur la compétence\r\n  SkillLevel?: any; // Optionnel : niveau\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeSkillService {\r\n  private apiUrl = 'http://localhost:3000/api/employeeskills'; // adapte selon ton backend\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<EmployeeSkill[]> {\r\n    return this.http.get<EmployeeSkill[]>(this.apiUrl);\r\n  }\r\n\r\n  getOne(employee_id: number, skill_id: number): Observable<EmployeeSkill> {\r\n    return this.http.get<EmployeeSkill>(`${this.apiUrl}/${employee_id}/${skill_id}`);\r\n  }\r\n\r\n  create(skill: EmployeeSkill): Observable<EmployeeSkill> {\r\n    return this.http.post<EmployeeSkill>(this.apiUrl, skill);\r\n  }\r\n\r\n  update(employee_id: number, skill_id: number, skill: Partial<EmployeeSkill>): Observable<EmployeeSkill> {\r\n    return this.http.put<EmployeeSkill>(`${this.apiUrl}/${employee_id}/${skill_id}`, skill);\r\n  }\r\n\r\n  delete(employee_id: number, skill_id: number): Observable<{ message: string }> {\r\n    return this.http.delete<{ message: string }>(`${this.apiUrl}/${employee_id}/${skill_id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAmBA,OAAM,MAAOA,oBAAoB;EAG/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,0CAA0C,CAAC,CAAC;EAEtB;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkB,IAAI,CAACF,MAAM,CAAC;EACpD;EAEAG,MAAMA,CAACC,WAAmB,EAAEC,QAAgB;IAC1C,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAgB,GAAG,IAAI,CAACF,MAAM,IAAII,WAAW,IAAIC,QAAQ,EAAE,CAAC;EAClF;EAEAC,MAAMA,CAACC,KAAoB;IACzB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAgB,IAAI,CAACR,MAAM,EAAEO,KAAK,CAAC;EAC1D;EAEAE,MAAMA,CAACL,WAAmB,EAAEC,QAAgB,EAAEE,KAA6B;IACzE,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAgB,GAAG,IAAI,CAACV,MAAM,IAAII,WAAW,IAAIC,QAAQ,EAAE,EAAEE,KAAK,CAAC;EACzF;EAEAI,MAAMA,CAACP,WAAmB,EAAEC,QAAgB;IAC1C,OAAO,IAAI,CAACN,IAAI,CAACY,MAAM,CAAsB,GAAG,IAAI,CAACX,MAAM,IAAII,WAAW,IAAIC,QAAQ,EAAE,CAAC;EAC3F;;;uCAvBWR,oBAAoB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAApBlB,oBAAoB;MAAAmB,OAAA,EAApBnB,oBAAoB,CAAAoB,IAAA;MAAAC,UAAA,EAFnB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}