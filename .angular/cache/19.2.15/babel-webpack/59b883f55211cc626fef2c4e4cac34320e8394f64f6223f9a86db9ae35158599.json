{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeSkillService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.backendUrl}/employeeskills`; // adapter selon ton backend\n  }\n  // Récupérer toutes les compétences\n  getAll() {\n    return this.http.get(this.apiUrl);\n  }\n  // Ajouter une compétence\n  create(skillData) {\n    return this.http.post(this.apiUrl, skillData);\n  }\n  // Mettre à jour une compétence\n  update(employee_id, skill_id, skillData) {\n    return this.http.put(`${this.apiUrl}/${employee_id}/${skill_id}`, skillData);\n  }\n  // Supprimer une compétence\n  delete(employee_id, skill_id) {\n    return this.http.delete(`${this.apiUrl}/${employee_id}/${skill_id}`);\n  }\n  // Récupérer une compétence par employee et skill\n  getById(employee_id, skill_id) {\n    return this.http.get(`${this.apiUrl}/${employee_id}/${skill_id}`);\n  }\n  static {\n    this.ɵfac = function EmployeeSkillService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EmployeeSkillService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmployeeSkillService,\n      factory: EmployeeSkillService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","EmployeeSkillService","constructor","http","apiUrl","backendUrl","getAll","get","create","skillData","post","update","employee_id","skill_id","put","delete","getById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\services\\employee-skill.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { EmployeeSkill } from '../models/employee-skill.model'; // tu peux créer un modèle séparé ou utiliser l'interface\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeSkillService {\r\n  private apiUrl = `${environment.backendUrl}/employeeskills`; // adapter selon ton backend\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Récupérer toutes les compétences\r\n  getAll(): Observable<EmployeeSkill[]> {\r\n    return this.http.get<EmployeeSkill[]>(this.apiUrl);\r\n  }\r\n\r\n  // Ajouter une compétence\r\n  create(skillData: EmployeeSkill): Observable<EmployeeSkill> {\r\n    return this.http.post<EmployeeSkill>(this.apiUrl, skillData);\r\n  }\r\n\r\n  // Mettre à jour une compétence\r\n  update(employee_id: number, skill_id: number, skillData: EmployeeSkill): Observable<EmployeeSkill> {\r\n    return this.http.put<EmployeeSkill>(`${this.apiUrl}/${employee_id}/${skill_id}`, skillData);\r\n  }\r\n\r\n  // Supprimer une compétence\r\n  delete(employee_id: number, skill_id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${employee_id}/${skill_id}`);\r\n  }\r\n\r\n  // Récupérer une compétence par employee et skill\r\n  getById(employee_id: number, skill_id: number): Observable<EmployeeSkill> {\r\n    return this.http.get<EmployeeSkill>(`${this.apiUrl}/${employee_id}/${skill_id}`);\r\n  }\r\n}\r\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,iBAAiB,CAAC,CAAC;EAErB;EAExC;EACAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAkB,IAAI,CAACH,MAAM,CAAC;EACpD;EAEA;EACAI,MAAMA,CAACC,SAAwB;IAC7B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAgB,IAAI,CAACN,MAAM,EAAEK,SAAS,CAAC;EAC9D;EAEA;EACAE,MAAMA,CAACC,WAAmB,EAAEC,QAAgB,EAAEJ,SAAwB;IACpE,OAAO,IAAI,CAACN,IAAI,CAACW,GAAG,CAAgB,GAAG,IAAI,CAACV,MAAM,IAAIQ,WAAW,IAAIC,QAAQ,EAAE,EAAEJ,SAAS,CAAC;EAC7F;EAEA;EACAM,MAAMA,CAACH,WAAmB,EAAEC,QAAgB;IAC1C,OAAO,IAAI,CAACV,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAIQ,WAAW,IAAIC,QAAQ,EAAE,CAAC;EAC5E;EAEA;EACAG,OAAOA,CAACJ,WAAmB,EAAEC,QAAgB;IAC3C,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAgB,GAAG,IAAI,CAACH,MAAM,IAAIQ,WAAW,IAAIC,QAAQ,EAAE,CAAC;EAClF;;;uCA5BWZ,oBAAoB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAApBnB,oBAAoB;MAAAoB,OAAA,EAApBpB,oBAAoB,CAAAqB,IAAA;MAAAC,UAAA,EAFnB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}