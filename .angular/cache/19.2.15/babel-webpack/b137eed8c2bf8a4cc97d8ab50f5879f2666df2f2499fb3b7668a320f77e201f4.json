{"ast":null,"code":"import { Employee } from '../models/employee.model';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.backendUrl}/employees`;\n    this.apiUrl1 = `${environment.backendUrl}/employeeskills`;\n  }\n  getEmployees() {\n    return this.http.get(this.apiUrl);\n  }\n  getEmployeeById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createEmployee(employee) {\n    return this.http.post(this.apiUrl, employee);\n  }\n  updateEmployee(id, employee) {\n    return this.http.put(`${this.apiUrl}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  // Récupérer toutes les compétences\n  getAll() {\n    return this.http.get(this.apiUrl1);\n  }\n  // Ajouter une compétence\n  create(skillData) {\n    return this.http.post(this.apiUrl1, skillData);\n  }\n  // Mettre à jour une compétence\n  update(employee_id, skill_id, skillData) {\n    return this.http.put(`${this.apiUrl1}/${employee_id}/${skill_id}`, skillData);\n  }\n  // Supprimer une compétence\n  delete(employee_id, skill_id) {\n    return this.http.delete(`${this.apiUrl1}/${employee_id}/${skill_id}`);\n  }\n  // Récupérer une compétence par employee et skill\n  getById(employee_id, skill_id) {\n    return this.http.get(`${this.apiUrl1}/${employee_id}/${skill_id}`);\n  }\n  static {\n    this.ɵfac = function EmployeeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmployeeService,\n      factory: EmployeeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Employee","environment","EmployeeService","constructor","http","apiUrl","backendUrl","apiUrl1","getEmployees","get","getEmployeeById","id","createEmployee","employee","post","updateEmployee","put","deleteEmployee","delete","getAll","create","skillData","update","employee_id","skill_id","getById","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\services\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employee, EmployeeSkill } from '../models/employee.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private apiUrl = `${environment.backendUrl}/employees`;\n  private apiUrl1 = `${environment.backendUrl}/employeeskills`;\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(this.apiUrl);\n  }\n\n  getEmployeeById(id: number): Observable<Employee> {\n    return this.http.get<Employee>(`${this.apiUrl}/${id}`);\n  }\n\n  createEmployee(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(this.apiUrl, employee);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Employee> {\n    return this.http.put<Employee>(`${this.apiUrl}/${id}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n   \n  \n    \n  \n    // Récupérer toutes les compétences\n    getAll(): Observable<EmployeeSkill[]> {\n      return this.http.get<EmployeeSkill[]>(this.apiUrl1);\n    }\n  \n    // Ajouter une compétence\n    create(skillData: EmployeeSkill): Observable<EmployeeSkill> {\n      return this.http.post<EmployeeSkill>(this.apiUrl1, skillData);\n    }\n  \n    // Mettre à jour une compétence\n    update(employee_id: number, skill_id: number, skillData: EmployeeSkill): Observable<EmployeeSkill> {\n      return this.http.put<EmployeeSkill>(`${this.apiUrl1}/${employee_id}/${skill_id}`, skillData);\n    }\n  \n    // Supprimer une compétence\n    delete(employee_id: number, skill_id: number): Observable<void> {\n      return this.http.delete<void>(`${this.apiUrl1}/${employee_id}/${skill_id}`);\n    }\n  \n    // Récupérer une compétence par employee et skill\n    getById(employee_id: number, skill_id: number): Observable<EmployeeSkill> {\n      return this.http.get<EmployeeSkill>(`${this.apiUrl1}/${employee_id}/${skill_id}`);\n    }\n  \n}\n\nexport type { Employee };\n"],"mappings":"AAGA,SAASA,QAAQ,QAAuB,0BAA0B;AAClE,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,YAAY;IAC9C,KAAAC,OAAO,GAAG,GAAGN,WAAW,CAACK,UAAU,iBAAiB;EAEpB;EAExCE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAa,IAAI,CAACJ,MAAM,CAAC;EAC/C;EAEAK,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAW,GAAG,IAAI,CAACJ,MAAM,IAAIM,EAAE,EAAE,CAAC;EACxD;EAEAC,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAW,IAAI,CAACT,MAAM,EAAEQ,QAAQ,CAAC;EACxD;EAEAE,cAAcA,CAACJ,EAAU,EAAEE,QAAkB;IAC3C,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAW,GAAG,IAAI,CAACX,MAAM,IAAIM,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACP,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,MAAM,IAAIM,EAAE,EAAE,CAAC;EACvD;EAKE;EACAQ,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACf,IAAI,CAACK,GAAG,CAAkB,IAAI,CAACF,OAAO,CAAC;EACrD;EAEA;EACAa,MAAMA,CAACC,SAAwB;IAC7B,OAAO,IAAI,CAACjB,IAAI,CAACU,IAAI,CAAgB,IAAI,CAACP,OAAO,EAAEc,SAAS,CAAC;EAC/D;EAEA;EACAC,MAAMA,CAACC,WAAmB,EAAEC,QAAgB,EAAEH,SAAwB;IACpE,OAAO,IAAI,CAACjB,IAAI,CAACY,GAAG,CAAgB,GAAG,IAAI,CAACT,OAAO,IAAIgB,WAAW,IAAIC,QAAQ,EAAE,EAAEH,SAAS,CAAC;EAC9F;EAEA;EACAH,MAAMA,CAACK,WAAmB,EAAEC,QAAgB;IAC1C,OAAO,IAAI,CAACpB,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACX,OAAO,IAAIgB,WAAW,IAAIC,QAAQ,EAAE,CAAC;EAC7E;EAEA;EACAC,OAAOA,CAACF,WAAmB,EAAEC,QAAgB;IAC3C,OAAO,IAAI,CAACpB,IAAI,CAACK,GAAG,CAAgB,GAAG,IAAI,CAACF,OAAO,IAAIgB,WAAW,IAAIC,QAAQ,EAAE,CAAC;EACnF;;;uCApDStB,eAAe,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAf3B,eAAe;MAAA4B,OAAA,EAAf5B,eAAe,CAAA6B,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}