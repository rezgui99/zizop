{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MatchingService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.backendUrl}/jobemployeeskillmatch`;\n  }\n  getMatchingResults(jobId) {\n    return this.http.get(`${this.apiUrl}/${jobId}`);\n  }\n  getMatchingAnalytics(jobId) {\n    return this.http.get(`${this.apiUrl}/${jobId}/analytics`);\n  }\n  exportMatchingResults(jobId, format = 'pdf') {\n    return this.http.get(`${this.apiUrl}/${jobId}/export?format=${format}`, {\n      responseType: 'blob'\n    });\n  }\n  static {\n    this.ɵfac = function MatchingService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MatchingService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MatchingService,\n      factory: MatchingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","MatchingService","constructor","http","apiUrl","backendUrl","getMatchingResults","jobId","get","getMatchingAnalytics","exportMatchingResults","format","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\services\\matching.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatchingResult, MatchingAnalytics } from '../models/matching.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchingService {\n  private apiUrl = `${environment.backendUrl}/jobemployeeskillmatch`;\n\n  constructor(private http: HttpClient) { }\n\n  getMatchingResults(jobId: number): Observable<MatchingResult[]> {\n    return this.http.get<MatchingResult[]>(`${this.apiUrl}/${jobId}`);\n  }\n\n  getMatchingAnalytics(jobId: number): Observable<MatchingAnalytics> {\n    return this.http.get<MatchingAnalytics>(`${this.apiUrl}/${jobId}/analytics`);\n  }\n\n  exportMatchingResults(jobId: number, format: 'pdf' | 'excel' = 'pdf'): Observable<Blob> {\n    return this.http.get(`${this.apiUrl}/${jobId}/export?format=${format}`, {\n      responseType: 'blob'\n    });\n  }\n}"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,wBAAwB;EAE1B;EAExCC,kBAAkBA,CAACC,KAAa;IAC9B,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAmB,GAAG,IAAI,CAACJ,MAAM,IAAIG,KAAK,EAAE,CAAC;EACnE;EAEAE,oBAAoBA,CAACF,KAAa;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAoB,GAAG,IAAI,CAACJ,MAAM,IAAIG,KAAK,YAAY,CAAC;EAC9E;EAEAG,qBAAqBA,CAACH,KAAa,EAAEI,MAAA,GAA0B,KAAK;IAClE,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,MAAM,IAAIG,KAAK,kBAAkBI,MAAM,EAAE,EAAE;MACtEC,YAAY,EAAE;KACf,CAAC;EACJ;;;uCAjBWX,eAAe,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAff,eAAe;MAAAgB,OAAA,EAAfhB,eAAe,CAAAiB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}