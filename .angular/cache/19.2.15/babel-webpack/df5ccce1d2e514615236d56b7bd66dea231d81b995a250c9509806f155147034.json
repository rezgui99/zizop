{"ast":null,"code":"import { __decorate } from \"tslib\";\nlet EmployeeSkillService = class EmployeeSkillService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api/employeeskills'; // à adapter\n  }\n  // Récupérer toutes les compétences des employés\n  getAll() {\n    return this.http.get(this.apiUrl).pipe(catchError(this.handleError));\n  }\n  // Ajouter une compétence\n  create(skillData) {\n    return this.http.post(this.apiUrl, skillData).pipe(catchError(this.handleError));\n  }\n  // Mettre à jour une compétence\n  update(employee_id, skill_id, skillData) {\n    return this.http.put(`${this.apiUrl}/${employee_id}/${skill_id}`, skillData).pipe(catchError(this.handleError));\n  }\n  // Supprimer une compétence\n  delete(employee_id, skill_id) {\n    return this.http.delete(`${this.apiUrl}/${employee_id}/${skill_id}`).pipe(catchError(this.handleError));\n  }\n  // Gestion centralisée des erreurs\n  handleError(error) {\n    let errorMsg = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMsg = `Erreur client: ${error.error.message}`;\n    } else {\n      errorMsg = `Erreur serveur [${error.status}]: ${error.message}`;\n    }\n    return throwError(() => new Error(errorMsg));\n  }\n};\nEmployeeSkillService = __decorate([Injectable({\n  providedIn: 'root'\n})], EmployeeSkillService);\nexport { EmployeeSkillService };","map":{"version":3,"names":["EmployeeSkillService","constructor","http","apiUrl","getAll","get","pipe","catchError","handleError","create","skillData","post","update","employee_id","skill_id","put","delete","error","errorMsg","ErrorEvent","message","status","throwError","Error","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\services\\employee-skill.service.ts"],"sourcesContent":["@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeSkillService {\r\n  private apiUrl = 'http://localhost:3000/api/employeeskills'; // à adapter\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Récupérer toutes les compétences des employés\r\n  getAll(): Observable<EmployeeSkill[]> {\r\n    return this.http.get<EmployeeSkill[]>(this.apiUrl)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // Ajouter une compétence\r\n  create(skillData: Partial<EmployeeSkill>): Observable<EmployeeSkill> {\r\n    return this.http.post<EmployeeSkill>(this.apiUrl, skillData)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // Mettre à jour une compétence\r\n  update(employee_id: number, skill_id: number, skillData: Partial<EmployeeSkill>): Observable<EmployeeSkill> {\r\n    return this.http.put<EmployeeSkill>(`${this.apiUrl}/${employee_id}/${skill_id}`, skillData)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // Supprimer une compétence\r\n  delete(employee_id: number, skill_id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${employee_id}/${skill_id}`)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  // Gestion centralisée des erreurs\r\n  private handleError(error: HttpErrorResponse) {\r\n    let errorMsg = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMsg = `Erreur client: ${error.error.message}`;\r\n    } else {\r\n      errorMsg = `Erreur serveur [${error.status}]: ${error.message}`;\r\n    }\r\n    return throwError(() => new Error(errorMsg));\r\n  }\r\n}\r\n"],"mappings":";AAGO,IAAMA,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,0CAA0C,CAAC,CAAC;EAErB;EAExC;EACAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAkB,IAAI,CAACF,MAAM,CAAC,CAC/CG,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC;EACvC;EAEA;EACAC,MAAMA,CAACC,SAAiC;IACtC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAgB,IAAI,CAACR,MAAM,EAAEO,SAAS,CAAC,CACzDJ,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC;EACvC;EAEA;EACAI,MAAMA,CAACC,WAAmB,EAAEC,QAAgB,EAAEJ,SAAiC;IAC7E,OAAO,IAAI,CAACR,IAAI,CAACa,GAAG,CAAgB,GAAG,IAAI,CAACZ,MAAM,IAAIU,WAAW,IAAIC,QAAQ,EAAE,EAAEJ,SAAS,CAAC,CACxFJ,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC;EACvC;EAEA;EACAQ,MAAMA,CAACH,WAAmB,EAAEC,QAAgB;IAC1C,OAAO,IAAI,CAACZ,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,MAAM,IAAIU,WAAW,IAAIC,QAAQ,EAAE,CAAC,CACvER,IAAI,CAACC,UAAU,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC;EACvC;EAEA;EACQA,WAAWA,CAACS,KAAwB;IAC1C,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrCD,QAAQ,GAAG,kBAAkBD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;IACpD,CAAC,MAAM;MACLF,QAAQ,GAAG,mBAAmBD,KAAK,CAACI,MAAM,MAAMJ,KAAK,CAACG,OAAO,EAAE;IACjE;IACA,OAAOE,UAAU,CAAC,MAAM,IAAIC,KAAK,CAACL,QAAQ,CAAC,CAAC;EAC9C;CACD;AAvCYlB,oBAAoB,GAAAwB,UAAA,EAHhCC,UAAU,CAAC;EACVC,UAAU,EAAE;CACb,CAAC,C,EACW1B,oBAAoB,CAuChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}