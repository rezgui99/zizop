{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.backendUrl}/employees`;\n    this.jobDescriptionEmployeeUrl = `${environment.backendUrl}/jobdescriptionemployee`;\n  }\n  getEmployees() {\n    return this.http.get(this.apiUrl);\n  }\n  getEmployeeById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createEmployee(employee) {\n    return this.http.post(this.apiUrl, employee);\n  }\n  updateEmployee(id, employee) {\n    return this.http.put(`${this.apiUrl}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  // Méthodes pour le controller jobdescriptionemployee\n  getEmployeesByJobDescription(jobDescriptionId) {\n    return this.http.get(`${this.jobDescriptionEmployeeUrl}/job/${jobDescriptionId}`);\n  }\n  getJobDescriptionsByEmployee(employeeId) {\n    return this.http.get(`${this.jobDescriptionEmployeeUrl}/employee/${employeeId}`);\n  }\n  assignEmployeeToJobDescription(employeeId, jobDescriptionId) {\n    return this.http.post(`${this.jobDescriptionEmployeeUrl}`, {\n      employee_id: employeeId,\n      job_description_id: jobDescriptionId\n    });\n  }\n  unassignEmployeeFromJobDescription(employeeId, jobDescriptionId) {\n    return this.http.delete(`${this.jobDescriptionEmployeeUrl}/${employeeId}/${jobDescriptionId}`);\n  }\n  getAllJobDescriptionEmployees() {\n    return this.http.get(`${this.jobDescriptionEmployeeUrl}`);\n  }\n  static {\n    this.ɵfac = function EmployeeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmployeeService,\n      factory: EmployeeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","EmployeeService","constructor","http","apiUrl","backendUrl","jobDescriptionEmployeeUrl","getEmployees","get","getEmployeeById","id","createEmployee","employee","post","updateEmployee","put","deleteEmployee","delete","getEmployeesByJobDescription","jobDescriptionId","getJobDescriptionsByEmployee","employeeId","assignEmployeeToJobDescription","employee_id","job_description_id","unassignEmployeeFromJobDescription","getAllJobDescriptionEmployees","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\services\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employee } from '../models/employee.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private apiUrl = `${environment.backendUrl}/employees`;\n  private jobDescriptionEmployeeUrl = `${environment.backendUrl}/jobdescriptionemployee`;\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(this.apiUrl);\n  }\n\n  getEmployeeById(id: number): Observable<Employee> {\n    return this.http.get<Employee>(`${this.apiUrl}/${id}`);\n  }\n\n  createEmployee(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(this.apiUrl, employee);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Employee> {\n    return this.http.put<Employee>(`${this.apiUrl}/${id}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  // Méthodes pour le controller jobdescriptionemployee\n  getEmployeesByJobDescription(jobDescriptionId: number): Observable<Employee[]> {\n    return this.http.get<Employee[]>(`${this.jobDescriptionEmployeeUrl}/job/${jobDescriptionId}`);\n  }\n\n  getJobDescriptionsByEmployee(employeeId: number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.jobDescriptionEmployeeUrl}/employee/${employeeId}`);\n  }\n\n  assignEmployeeToJobDescription(employeeId: number, jobDescriptionId: number): Observable<any> {\n    return this.http.post<any>(`${this.jobDescriptionEmployeeUrl}`, {\n      employee_id: employeeId,\n      job_description_id: jobDescriptionId\n    });\n  }\n\n  unassignEmployeeFromJobDescription(employeeId: number, jobDescriptionId: number): Observable<void> {\n    return this.http.delete<void>(`${this.jobDescriptionEmployeeUrl}/${employeeId}/${jobDescriptionId}`);\n  }\n\n  getAllJobDescriptionEmployees(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.jobDescriptionEmployeeUrl}`);\n  }\n}\n\nexport type { Employee };\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,YAAY;IAC9C,KAAAC,yBAAyB,GAAG,GAAGN,WAAW,CAACK,UAAU,yBAAyB;EAE9C;EAExCE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAa,IAAI,CAACJ,MAAM,CAAC;EAC/C;EAEAK,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAW,GAAG,IAAI,CAACJ,MAAM,IAAIM,EAAE,EAAE,CAAC;EACxD;EAEAC,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAW,IAAI,CAACT,MAAM,EAAEQ,QAAQ,CAAC;EACxD;EAEAE,cAAcA,CAACJ,EAAU,EAAEE,QAAkB;IAC3C,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAW,GAAG,IAAI,CAACX,MAAM,IAAIM,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACP,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,MAAM,IAAIM,EAAE,EAAE,CAAC;EACvD;EAEA;EACAQ,4BAA4BA,CAACC,gBAAwB;IACnD,OAAO,IAAI,CAAChB,IAAI,CAACK,GAAG,CAAa,GAAG,IAAI,CAACF,yBAAyB,QAAQa,gBAAgB,EAAE,CAAC;EAC/F;EAEAC,4BAA4BA,CAACC,UAAkB;IAC7C,OAAO,IAAI,CAAClB,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACF,yBAAyB,aAAae,UAAU,EAAE,CAAC;EACzF;EAEAC,8BAA8BA,CAACD,UAAkB,EAAEF,gBAAwB;IACzE,OAAO,IAAI,CAAChB,IAAI,CAACU,IAAI,CAAM,GAAG,IAAI,CAACP,yBAAyB,EAAE,EAAE;MAC9DiB,WAAW,EAAEF,UAAU;MACvBG,kBAAkB,EAAEL;KACrB,CAAC;EACJ;EAEAM,kCAAkCA,CAACJ,UAAkB,EAAEF,gBAAwB;IAC7E,OAAO,IAAI,CAAChB,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACX,yBAAyB,IAAIe,UAAU,IAAIF,gBAAgB,EAAE,CAAC;EACtG;EAEAO,6BAA6BA,CAAA;IAC3B,OAAO,IAAI,CAACvB,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACF,yBAAyB,EAAE,CAAC;EAClE;;;uCAhDWL,eAAe,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAf7B,eAAe;MAAA8B,OAAA,EAAf9B,eAAe,CAAA+B,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}