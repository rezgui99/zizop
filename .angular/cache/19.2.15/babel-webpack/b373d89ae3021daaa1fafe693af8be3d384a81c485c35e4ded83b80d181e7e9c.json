{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/h_ref/Desktop/frontend/matchnhire/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/employee.service\";\nimport * as i2 from \"../../services/skill.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"skillTypeChart\"];\nconst _c1 = [\"employeePositionChart\"];\nfunction StatisticsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Chargement des donn\\u00E9es statistiques... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StatisticsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction StatisticsComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Aucune donn\\u00E9e de comp\\u00E9tence par type disponible. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StatisticsComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Aucune donn\\u00E9e d'employ\\u00E9s par poste disponible. \");\n    i0.ɵɵelementEnd();\n  }\n}\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(employeeService, skillService) {\n    this.employeeService = employeeService;\n    this.skillService = skillService;\n    this.loading = true;\n    this.errorMessage = null;\n    // Charts\n    this.skillTypeChart = null;\n    this.employeePositionChart = null;\n    // Data flags\n    this.hasSkillTypeData = false;\n    this.hasEmployeePositionData = false;\n    // Statistics\n    this.totalEmployees = 0;\n    this.totalSkills = 0;\n    this.totalPositions = 0;\n  }\n  ngOnInit() {\n    this.loadStatistics();\n  }\n  ngAfterViewInit() {\n    // Charts will be created after data is loaded\n  }\n  loadStatistics() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.loading = true;\n      _this.errorMessage = null;\n      try {\n        const [employees, skillTypes] = yield Promise.all([_this.employeeService.getEmployees().toPromise(), _this.skillService.getSkillTypes().toPromise()]);\n        if (employees && skillTypes) {\n          _this.totalEmployees = employees.length;\n          _this.processSkillTypeDistribution(employees, skillTypes);\n          _this.processEmployeePositionDistribution(employees);\n          _this.calculateTotalSkills(employees);\n        } else {\n          _this.errorMessage = 'Données manquantes pour les statistiques.';\n        }\n      } catch (err) {\n        console.error('Error loading statistics:', err);\n        _this.errorMessage = 'Erreur lors du chargement des statistiques. Veuillez vérifier la connexion au backend.';\n      } finally {\n        _this.loading = false;\n      }\n    })();\n  }\n  processSkillTypeDistribution(employees, skillTypes) {\n    const skillTypeCounts = {};\n    const skillTypeMap = new Map(skillTypes.map(type => [type.id, type.type_name]));\n    employees.forEach(employee => {\n      employee.skills?.forEach(empSkill => {\n        if (empSkill.skill?.skill_type_id) {\n          const typeName = skillTypeMap.get(empSkill.skill.skill_type_id);\n          if (typeName) {\n            skillTypeCounts[typeName] = (skillTypeCounts[typeName] || 0) + 1;\n          }\n        }\n      });\n    });\n    const labels = Object.keys(skillTypeCounts);\n    const data = Object.values(skillTypeCounts);\n    this.hasSkillTypeData = labels.length > 0;\n    if (this.hasSkillTypeData) {\n      this.createSkillTypeChart(labels, data);\n    }\n  }\n  processEmployeePositionDistribution(employees) {\n    const positionCounts = {};\n    employees.forEach(employee => {\n      if (employee.position) {\n        positionCounts[employee.position] = (positionCounts[employee.position] || 0) + 1;\n      }\n    });\n    const labels = Object.keys(positionCounts);\n    const data = Object.values(positionCounts);\n    this.totalPositions = labels.length;\n    this.hasEmployeePositionData = labels.length > 0;\n    if (this.hasEmployeePositionData) {\n      this.createEmployeePositionChart(labels, data);\n    }\n  }\n  calculateTotalSkills(employees) {\n    const uniqueSkills = new Set();\n    employees.forEach(employee => {\n      employee.skills?.forEach(empSkill => {\n        if (empSkill.skill?.id) {\n          uniqueSkills.add(empSkill.skill.id);\n        }\n      });\n    });\n    this.totalSkills = uniqueSkills.size;\n  }\n  createSkillTypeChart(labels, data) {\n    if (this.skillTypeChart) {\n      this.skillTypeChart.destroy();\n    }\n    const ctx = this.skillTypeChartRef.nativeElement.getContext('2d');\n    if (ctx) {\n      this.skillTypeChart = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: labels,\n          datasets: [{\n            data: data,\n            backgroundColor: ['#2196F3',\n            // Primary blue\n            '#FFC107',\n            // Secondary yellow\n            '#4CAF50',\n            // Green\n            '#FF5722',\n            // Orange\n            '#9C27B0',\n            // Purple\n            '#00BCD4',\n            // Cyan\n            '#795548' // Brown\n            ],\n            hoverBackgroundColor: ['#1976D2', '#FFA000', '#388E3C', '#E64A19', '#7B1FA2', '#0097A7', '#5D4037']\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'bottom'\n            },\n            tooltip: {\n              callbacks: {\n                label: context => {\n                  const label = context.label || '';\n                  const value = context.parsed;\n                  const total = context.dataset.data.reduce((sum, current) => sum + current, 0);\n                  const percentage = total > 0 ? (value / total * 100).toFixed(1) : 0;\n                  return `${label}: ${value} (${percentage}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n  createEmployeePositionChart(labels, data) {\n    if (this.employeePositionChart) {\n      this.employeePositionChart.destroy();\n    }\n    const ctx = this.employeePositionChartRef.nativeElement.getContext('2d');\n    if (ctx) {\n      this.employeePositionChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Nombre d\\'employés',\n            data: data,\n            backgroundColor: '#2196F3',\n            borderColor: '#1976D2',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n  }\n  ngOnDestroy() {\n    if (this.skillTypeChart) {\n      this.skillTypeChart.destroy();\n    }\n    if (this.employeePositionChart) {\n      this.employeePositionChart.destroy();\n    }\n  }\n  static {\n    this.ɵfac = function StatisticsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.SkillService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StatisticsComponent,\n      selectors: [[\"app-statistics\"]],\n      viewQuery: function StatisticsComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.skillTypeChartRef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.employeePositionChartRef = _t.first);\n        }\n      },\n      decls: 41,\n      vars: 7,\n      consts: [[\"skillTypeChart\", \"\"], [\"employeePositionChart\", \"\"], [1, \"p-6\"], [1, \"text-3xl\", \"font-bold\", \"text-primary\", \"mb-6\"], [1, \"bg-gradient-to-r\", \"from-blue-500\", \"to-purple-600\", \"text-white\", \"p-6\", \"rounded-lg\", \"mb-6\"], [1, \"text-xl\", \"font-semibold\", \"mb-2\"], [1, \"text-blue-100\"], [\"class\", \"text-center text-primary\", 4, \"ngIf\"], [\"class\", \"mt-4 p-3 bg-red-100 text-red-700 rounded-md\", 4, \"ngIf\"], [1, \"grid\", \"grid-cols-1\", \"lg:grid-cols-2\", \"gap-6\"], [1, \"card\"], [1, \"text-xl\", \"font-semibold\", \"text-dark\", \"mb-4\"], [1, \"relative\", \"h-80\"], [\"class\", \"text-center text-gray-600\", 4, \"ngIf\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-3\", \"gap-6\", \"mt-8\"], [1, \"card\", \"text-center\", \"bg-gradient-to-br\", \"from-blue-50\", \"to-blue-100\"], [1, \"text-3xl\", \"font-bold\", \"text-primary\", \"mb-2\"], [1, \"text-gray-600\"], [1, \"card\", \"text-center\", \"bg-gradient-to-br\", \"from-yellow-50\", \"to-yellow-100\"], [1, \"text-3xl\", \"font-bold\", \"text-secondary\", \"mb-2\"], [1, \"card\", \"text-center\", \"bg-gradient-to-br\", \"from-green-50\", \"to-green-100\"], [1, \"text-3xl\", \"font-bold\", \"text-green-600\", \"mb-2\"], [1, \"text-center\", \"text-primary\"], [1, \"mt-4\", \"p-3\", \"bg-red-100\", \"text-red-700\", \"rounded-md\"], [1, \"text-center\", \"text-gray-600\"]],\n      template: function StatisticsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\", 3);\n          i0.ɵɵtext(2, \"\\uD83D\\uDCCA Tableau de Bord RH\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 4)(4, \"h3\", 5);\n          i0.ɵɵtext(5, \"Analytics & Insights\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"p\", 6);\n          i0.ɵɵtext(7, \"Visualisez les donn\\u00E9es cl\\u00E9s de votre organisation et prenez des d\\u00E9cisions \\u00E9clair\\u00E9es.\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(8, StatisticsComponent_div_8_Template, 2, 0, \"div\", 7)(9, StatisticsComponent_div_9_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementStart(10, \"div\", 9)(11, \"div\", 10)(12, \"h3\", 11);\n          i0.ɵɵtext(13, \"\\uD83C\\uDFAF R\\u00E9partition des Comp\\u00E9tences\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 12);\n          i0.ɵɵelement(15, \"canvas\", null, 0);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, StatisticsComponent_div_17_Template, 2, 0, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 10)(19, \"h3\", 11);\n          i0.ɵɵtext(20, \"\\uD83D\\uDC65 Distribution par Poste\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"div\", 12);\n          i0.ɵɵelement(22, \"canvas\", null, 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, StatisticsComponent_div_24_Template, 2, 0, \"div\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"div\", 14)(26, \"div\", 15)(27, \"h3\", 16);\n          i0.ɵɵtext(28);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"p\", 17);\n          i0.ɵɵtext(30, \"Employ\\u00E9s totaux\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 18)(32, \"h3\", 19);\n          i0.ɵɵtext(33);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"p\", 17);\n          i0.ɵɵtext(35, \"Comp\\u00E9tences uniques\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"div\", 20)(37, \"h3\", 21);\n          i0.ɵɵtext(38);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(39, \"p\", 17);\n          i0.ɵɵtext(40, \"Postes diff\\u00E9rents\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", !ctx.hasSkillTypeData);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", !ctx.hasEmployeePositionData);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.totalEmployees);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.totalSkills);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.totalPositions);\n        }\n      },\n      dependencies: [CommonModule, i3.NgIf],\n      styles: [\"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRpc3RpY3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnREFBZ0QiLCJmaWxlIjoic3RhdGlzdGljcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogQWRkaXRpb25hbCBzdGF0aXN0aWNzIHBhZ2Ugc3R5bGVzIGlmIG5lZWRlZCAqLyJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvc3RhdGlzdGljcy9zdGF0aXN0aWNzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0RBQWdEO0FBQ2hELHdUQUF3VCIsInNvdXJjZXNDb250ZW50IjpbIi8qIEFkZGl0aW9uYWwgc3RhdGlzdGljcyBwYWdlIHN0eWxlcyBpZiBuZWVkZWQgKi8iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","Chart","registerables","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","register","StatisticsComponent","constructor","employeeService","skillService","loading","skillTypeChart","employeePositionChart","hasSkillTypeData","hasEmployeePositionData","totalEmployees","totalSkills","totalPositions","ngOnInit","loadStatistics","ngAfterViewInit","_this","_asyncToGenerator","employees","skillTypes","Promise","all","getEmployees","toPromise","getSkillTypes","length","processSkillTypeDistribution","processEmployeePositionDistribution","calculateTotalSkills","err","console","error","skillTypeCounts","skillTypeMap","Map","map","type","id","type_name","forEach","employee","skills","empSkill","skill","skill_type_id","typeName","get","labels","Object","keys","data","values","createSkillTypeChart","positionCounts","position","createEmployeePositionChart","uniqueSkills","Set","add","size","destroy","ctx","skillTypeChartRef","nativeElement","getContext","datasets","backgroundColor","hoverBackgroundColor","options","responsive","maintainAspectRatio","plugins","legend","tooltip","callbacks","label","context","value","parsed","total","dataset","reduce","sum","current","percentage","toFixed","employeePositionChartRef","borderColor","borderWidth","scales","y","beginAtZero","ticks","stepSize","display","ngOnDestroy","ɵɵdirectiveInject","i1","EmployeeService","i2","SkillService","selectors","viewQuery","StatisticsComponent_Query","rf","ɵɵtemplate","StatisticsComponent_div_8_Template","StatisticsComponent_div_9_Template","ɵɵelement","StatisticsComponent_div_17_Template","StatisticsComponent_div_24_Template","ɵɵproperty","ɵɵtextInterpolate","i3","NgIf","styles"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\statistics\\statistics.component.ts","C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\pages\\statistics\\statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Chart, ChartConfiguration, registerables } from 'chart.js';\nimport { EmployeeService } from '../../services/employee.service';\nimport { SkillService } from '../../services/skill.service';\nimport { Employee, Skill, SkillType } from '../../models/employee.model';\n\nChart.register(...registerables);\n\n@Component({\n  selector: 'app-statistics',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit, AfterViewInit {\n  @ViewChild('skillTypeChart') skillTypeChartRef!: ElementRef<HTMLCanvasElement>;\n  @ViewChild('employeePositionChart') employeePositionChartRef!: ElementRef<HTMLCanvasElement>;\n\n  loading: boolean = true;\n  errorMessage: string | null = null;\n  \n  // Charts\n  skillTypeChart: Chart | null = null;\n  employeePositionChart: Chart | null = null;\n  \n  // Data flags\n  hasSkillTypeData: boolean = false;\n  hasEmployeePositionData: boolean = false;\n  \n  // Statistics\n  totalEmployees: number = 0;\n  totalSkills: number = 0;\n  totalPositions: number = 0;\n\n  constructor(\n    private employeeService: EmployeeService,\n    private skillService: SkillService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadStatistics();\n  }\n\n  ngAfterViewInit(): void {\n    // Charts will be created after data is loaded\n  }\n\n  async loadStatistics(): Promise<void> {\n    this.loading = true;\n    this.errorMessage = null;\n    \n    try {\n      const [employees, skillTypes] = await Promise.all([\n        this.employeeService.getEmployees().toPromise(),\n        this.skillService.getSkillTypes().toPromise()\n      ]);\n\n      if (employees && skillTypes) {\n        this.totalEmployees = employees.length;\n        this.processSkillTypeDistribution(employees, skillTypes);\n        this.processEmployeePositionDistribution(employees);\n        this.calculateTotalSkills(employees);\n      } else {\n        this.errorMessage = 'Données manquantes pour les statistiques.';\n      }\n    } catch (err) {\n      console.error('Error loading statistics:', err);\n      this.errorMessage = 'Erreur lors du chargement des statistiques. Veuillez vérifier la connexion au backend.';\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  private processSkillTypeDistribution(employees: Employee[], skillTypes: SkillType[]): void {\n    const skillTypeCounts: { [key: string]: number } = {};\n    const skillTypeMap = new Map<number, string>(skillTypes.map(type => [type.id, type.type_name]));\n\n    employees.forEach(employee => {\n      employee.skills?.forEach(empSkill => {\n        if (empSkill.skill?.skill_type_id) {\n          const typeName = skillTypeMap.get(empSkill.skill.skill_type_id);\n          if (typeName) {\n            skillTypeCounts[typeName] = (skillTypeCounts[typeName] || 0) + 1;\n          }\n        }\n      });\n    });\n\n    const labels = Object.keys(skillTypeCounts);\n    const data = Object.values(skillTypeCounts);\n    \n    this.hasSkillTypeData = labels.length > 0;\n    \n    if (this.hasSkillTypeData) {\n      this.createSkillTypeChart(labels, data);\n    }\n  }\n\n  private processEmployeePositionDistribution(employees: Employee[]): void {\n    const positionCounts: { [key: string]: number } = {};\n\n    employees.forEach(employee => {\n      if (employee.position) {\n        positionCounts[employee.position] = (positionCounts[employee.position] || 0) + 1;\n      }\n    });\n\n    const labels = Object.keys(positionCounts);\n    const data = Object.values(positionCounts);\n    \n    this.totalPositions = labels.length;\n    this.hasEmployeePositionData = labels.length > 0;\n    \n    if (this.hasEmployeePositionData) {\n      this.createEmployeePositionChart(labels, data);\n    }\n  }\n\n  private calculateTotalSkills(employees: Employee[]): void {\n    const uniqueSkills = new Set<number>();\n    employees.forEach(employee => {\n      employee.skills?.forEach(empSkill => {\n        if (empSkill.skill?.id) {\n          uniqueSkills.add(empSkill.skill.id);\n        }\n      });\n    });\n    this.totalSkills = uniqueSkills.size;\n  }\n\n  private createSkillTypeChart(labels: string[], data: number[]): void {\n    if (this.skillTypeChart) {\n      this.skillTypeChart.destroy();\n    }\n\n    const ctx = this.skillTypeChartRef.nativeElement.getContext('2d');\n    if (ctx) {\n      this.skillTypeChart = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: labels,\n          datasets: [{\n            data: data,\n            backgroundColor: [\n              '#2196F3', // Primary blue\n              '#FFC107', // Secondary yellow\n              '#4CAF50', // Green\n              '#FF5722', // Orange\n              '#9C27B0', // Purple\n              '#00BCD4', // Cyan\n              '#795548'  // Brown\n            ],\n            hoverBackgroundColor: [\n              '#1976D2',\n              '#FFA000',\n              '#388E3C',\n              '#E64A19',\n              '#7B1FA2',\n              '#0097A7',\n              '#5D4037'\n            ]\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              position: 'bottom',\n            },\n            tooltip: {\n              callbacks: {\n                label: (context) => {\n                  const label = context.label || '';\n                  const value = context.parsed;\n                  const total = context.dataset.data.reduce((sum: any, current: any) => sum + current, 0);\n                  const percentage = total > 0 ? ((value / total) * 100).toFixed(1) : 0;\n                  return `${label}: ${value} (${percentage}%)`;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n\n  private createEmployeePositionChart(labels: string[], data: number[]): void {\n    if (this.employeePositionChart) {\n      this.employeePositionChart.destroy();\n    }\n\n    const ctx = this.employeePositionChartRef.nativeElement.getContext('2d');\n    if (ctx) {\n      this.employeePositionChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: 'Nombre d\\'employés',\n            data: data,\n            backgroundColor: '#2196F3',\n            borderColor: '#1976D2',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n              ticks: {\n                stepSize: 1\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false,\n            }\n          }\n        }\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.skillTypeChart) {\n      this.skillTypeChart.destroy();\n    }\n    if (this.employeePositionChart) {\n      this.employeePositionChart.destroy();\n    }\n  }\n}","<div class=\"p-6\">\n  <h2 class=\"text-3xl font-bold text-primary mb-6\">📊 Tableau de Bord RH</h2>\n  \n  <div class=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6 rounded-lg mb-6\">\n    <h3 class=\"text-xl font-semibold mb-2\">Analytics & Insights</h3>\n    <p class=\"text-blue-100\">Visualisez les données clés de votre organisation et prenez des décisions éclairées.</p>\n  </div>\n\n  <div *ngIf=\"loading\" class=\"text-center text-primary\">\n    Chargement des données statistiques...\n  </div>\n\n  <div *ngIf=\"errorMessage\" class=\"mt-4 p-3 bg-red-100 text-red-700 rounded-md\">\n    {{ errorMessage }}\n  </div>\n\n  <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n    <!-- Répartition des compétences par type -->\n    <div class=\"card\">\n      <h3 class=\"text-xl font-semibold text-dark mb-4\">🎯 Répartition des Compétences</h3>\n      <div class=\"relative h-80\">\n        <canvas #skillTypeChart></canvas>\n      </div>\n      <div *ngIf=\"!hasSkillTypeData\" class=\"text-center text-gray-600\">\n        Aucune donnée de compétence par type disponible.\n      </div>\n    </div>\n\n    <!-- Nombre d'employés par poste -->\n    <div class=\"card\">\n      <h3 class=\"text-xl font-semibold text-dark mb-4\">👥 Distribution par Poste</h3>\n      <div class=\"relative h-80\">\n        <canvas #employeePositionChart></canvas>\n      </div>\n      <div *ngIf=\"!hasEmployeePositionData\" class=\"text-center text-gray-600\">\n        Aucune donnée d'employés par poste disponible.\n      </div>\n    </div>\n  </div>\n\n  <!-- Statistiques générales -->\n  <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-8\">\n    <div class=\"card text-center bg-gradient-to-br from-blue-50 to-blue-100\">\n      <h3 class=\"text-3xl font-bold text-primary mb-2\">{{ totalEmployees }}</h3>\n      <p class=\"text-gray-600\">Employés totaux</p>\n    </div>\n    <div class=\"card text-center bg-gradient-to-br from-yellow-50 to-yellow-100\">\n      <h3 class=\"text-3xl font-bold text-secondary mb-2\">{{ totalSkills }}</h3>\n      <p class=\"text-gray-600\">Compétences uniques</p>\n    </div>\n    <div class=\"card text-center bg-gradient-to-br from-green-50 to-green-100\">\n      <h3 class=\"text-3xl font-bold text-green-600 mb-2\">{{ totalPositions }}</h3>\n      <p class=\"text-gray-600\">Postes différents</p>\n    </div>\n  </div>\n</div>"],"mappings":";AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,KAAK,EAAsBC,aAAa,QAAQ,UAAU;;;;;;;;;ICMjEC,EAAA,CAAAC,cAAA,cAAsD;IACpDD,EAAA,CAAAE,MAAA,oDACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAENH,EAAA,CAAAC,cAAA,cAA8E;IAC5ED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,EACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,YAAA,MACF;;;;;IASIP,EAAA,CAAAC,cAAA,cAAiE;IAC/DD,EAAA,CAAAE,MAAA,mEACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IASNH,EAAA,CAAAC,cAAA,cAAwE;IACtED,EAAA,CAAAE,MAAA,iEACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;AD7BZL,KAAK,CAACU,QAAQ,CAAC,GAAGT,aAAa,CAAC;AAShC,OAAM,MAAOU,mBAAmB;EAoB9BC,YACUC,eAAgC,EAChCC,YAA0B;IAD1B,KAAAD,eAAe,GAAfA,eAAe;IACf,KAAAC,YAAY,GAAZA,YAAY;IAlBtB,KAAAC,OAAO,GAAY,IAAI;IACvB,KAAAN,YAAY,GAAkB,IAAI;IAElC;IACA,KAAAO,cAAc,GAAiB,IAAI;IACnC,KAAAC,qBAAqB,GAAiB,IAAI;IAE1C;IACA,KAAAC,gBAAgB,GAAY,KAAK;IACjC,KAAAC,uBAAuB,GAAY,KAAK;IAExC;IACA,KAAAC,cAAc,GAAW,CAAC;IAC1B,KAAAC,WAAW,GAAW,CAAC;IACvB,KAAAC,cAAc,GAAW,CAAC;EAKtB;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAC,eAAeA,CAAA;IACb;EAAA;EAGID,cAAcA,CAAA;IAAA,IAAAE,KAAA;IAAA,OAAAC,iBAAA;MAClBD,KAAI,CAACX,OAAO,GAAG,IAAI;MACnBW,KAAI,CAACjB,YAAY,GAAG,IAAI;MAExB,IAAI;QACF,MAAM,CAACmB,SAAS,EAAEC,UAAU,CAAC,SAASC,OAAO,CAACC,GAAG,CAAC,CAChDL,KAAI,CAACb,eAAe,CAACmB,YAAY,EAAE,CAACC,SAAS,EAAE,EAC/CP,KAAI,CAACZ,YAAY,CAACoB,aAAa,EAAE,CAACD,SAAS,EAAE,CAC9C,CAAC;QAEF,IAAIL,SAAS,IAAIC,UAAU,EAAE;UAC3BH,KAAI,CAACN,cAAc,GAAGQ,SAAS,CAACO,MAAM;UACtCT,KAAI,CAACU,4BAA4B,CAACR,SAAS,EAAEC,UAAU,CAAC;UACxDH,KAAI,CAACW,mCAAmC,CAACT,SAAS,CAAC;UACnDF,KAAI,CAACY,oBAAoB,CAACV,SAAS,CAAC;QACtC,CAAC,MAAM;UACLF,KAAI,CAACjB,YAAY,GAAG,2CAA2C;QACjE;MACF,CAAC,CAAC,OAAO8B,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;QAC/Cb,KAAI,CAACjB,YAAY,GAAG,wFAAwF;MAC9G,CAAC,SAAS;QACRiB,KAAI,CAACX,OAAO,GAAG,KAAK;MACtB;IAAC;EACH;EAEQqB,4BAA4BA,CAACR,SAAqB,EAAEC,UAAuB;IACjF,MAAMa,eAAe,GAA8B,EAAE;IACrD,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAAiBf,UAAU,CAACgB,GAAG,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,EAAE,EAAED,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;IAE/FpB,SAAS,CAACqB,OAAO,CAACC,QAAQ,IAAG;MAC3BA,QAAQ,CAACC,MAAM,EAAEF,OAAO,CAACG,QAAQ,IAAG;QAClC,IAAIA,QAAQ,CAACC,KAAK,EAAEC,aAAa,EAAE;UACjC,MAAMC,QAAQ,GAAGZ,YAAY,CAACa,GAAG,CAACJ,QAAQ,CAACC,KAAK,CAACC,aAAa,CAAC;UAC/D,IAAIC,QAAQ,EAAE;YACZb,eAAe,CAACa,QAAQ,CAAC,GAAG,CAACb,eAAe,CAACa,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;UAClE;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAME,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACjB,eAAe,CAAC;IAC3C,MAAMkB,IAAI,GAAGF,MAAM,CAACG,MAAM,CAACnB,eAAe,CAAC;IAE3C,IAAI,CAACxB,gBAAgB,GAAGuC,MAAM,CAACtB,MAAM,GAAG,CAAC;IAEzC,IAAI,IAAI,CAACjB,gBAAgB,EAAE;MACzB,IAAI,CAAC4C,oBAAoB,CAACL,MAAM,EAAEG,IAAI,CAAC;IACzC;EACF;EAEQvB,mCAAmCA,CAACT,SAAqB;IAC/D,MAAMmC,cAAc,GAA8B,EAAE;IAEpDnC,SAAS,CAACqB,OAAO,CAACC,QAAQ,IAAG;MAC3B,IAAIA,QAAQ,CAACc,QAAQ,EAAE;QACrBD,cAAc,CAACb,QAAQ,CAACc,QAAQ,CAAC,GAAG,CAACD,cAAc,CAACb,QAAQ,CAACc,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;MAClF;IACF,CAAC,CAAC;IAEF,MAAMP,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACI,cAAc,CAAC;IAC1C,MAAMH,IAAI,GAAGF,MAAM,CAACG,MAAM,CAACE,cAAc,CAAC;IAE1C,IAAI,CAACzC,cAAc,GAAGmC,MAAM,CAACtB,MAAM;IACnC,IAAI,CAAChB,uBAAuB,GAAGsC,MAAM,CAACtB,MAAM,GAAG,CAAC;IAEhD,IAAI,IAAI,CAAChB,uBAAuB,EAAE;MAChC,IAAI,CAAC8C,2BAA2B,CAACR,MAAM,EAAEG,IAAI,CAAC;IAChD;EACF;EAEQtB,oBAAoBA,CAACV,SAAqB;IAChD,MAAMsC,YAAY,GAAG,IAAIC,GAAG,EAAU;IACtCvC,SAAS,CAACqB,OAAO,CAACC,QAAQ,IAAG;MAC3BA,QAAQ,CAACC,MAAM,EAAEF,OAAO,CAACG,QAAQ,IAAG;QAClC,IAAIA,QAAQ,CAACC,KAAK,EAAEN,EAAE,EAAE;UACtBmB,YAAY,CAACE,GAAG,CAAChB,QAAQ,CAACC,KAAK,CAACN,EAAE,CAAC;QACrC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,IAAI,CAAC1B,WAAW,GAAG6C,YAAY,CAACG,IAAI;EACtC;EAEQP,oBAAoBA,CAACL,MAAgB,EAAEG,IAAc;IAC3D,IAAI,IAAI,CAAC5C,cAAc,EAAE;MACvB,IAAI,CAACA,cAAc,CAACsD,OAAO,EAAE;IAC/B;IAEA,MAAMC,GAAG,GAAG,IAAI,CAACC,iBAAiB,CAACC,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;IACjE,IAAIH,GAAG,EAAE;MACP,IAAI,CAACvD,cAAc,GAAG,IAAIhB,KAAK,CAACuE,GAAG,EAAE;QACnCzB,IAAI,EAAE,KAAK;QACXc,IAAI,EAAE;UACJH,MAAM,EAAEA,MAAM;UACdkB,QAAQ,EAAE,CAAC;YACTf,IAAI,EAAEA,IAAI;YACVgB,eAAe,EAAE,CACf,SAAS;YAAE;YACX,SAAS;YAAE;YACX,SAAS;YAAE;YACX,SAAS;YAAE;YACX,SAAS;YAAE;YACX,SAAS;YAAE;YACX,SAAS,CAAE;YAAA,CACZ;YACDC,oBAAoB,EAAE,CACpB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS;WAEZ;SACF;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,OAAO,EAAE;YACPC,MAAM,EAAE;cACNlB,QAAQ,EAAE;aACX;YACDmB,OAAO,EAAE;cACPC,SAAS,EAAE;gBACTC,KAAK,EAAGC,OAAO,IAAI;kBACjB,MAAMD,KAAK,GAAGC,OAAO,CAACD,KAAK,IAAI,EAAE;kBACjC,MAAME,KAAK,GAAGD,OAAO,CAACE,MAAM;kBAC5B,MAAMC,KAAK,GAAGH,OAAO,CAACI,OAAO,CAAC9B,IAAI,CAAC+B,MAAM,CAAC,CAACC,GAAQ,EAAEC,OAAY,KAAKD,GAAG,GAAGC,OAAO,EAAE,CAAC,CAAC;kBACvF,MAAMC,UAAU,GAAGL,KAAK,GAAG,CAAC,GAAG,CAAEF,KAAK,GAAGE,KAAK,GAAI,GAAG,EAAEM,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;kBACrE,OAAO,GAAGV,KAAK,KAAKE,KAAK,KAAKO,UAAU,IAAI;gBAC9C;;;;;OAKT,CAAC;IACJ;EACF;EAEQ7B,2BAA2BA,CAACR,MAAgB,EAAEG,IAAc;IAClE,IAAI,IAAI,CAAC3C,qBAAqB,EAAE;MAC9B,IAAI,CAACA,qBAAqB,CAACqD,OAAO,EAAE;IACtC;IAEA,MAAMC,GAAG,GAAG,IAAI,CAACyB,wBAAwB,CAACvB,aAAa,CAACC,UAAU,CAAC,IAAI,CAAC;IACxE,IAAIH,GAAG,EAAE;MACP,IAAI,CAACtD,qBAAqB,GAAG,IAAIjB,KAAK,CAACuE,GAAG,EAAE;QAC1CzB,IAAI,EAAE,KAAK;QACXc,IAAI,EAAE;UACJH,MAAM,EAAEA,MAAM;UACdkB,QAAQ,EAAE,CAAC;YACTU,KAAK,EAAE,oBAAoB;YAC3BzB,IAAI,EAAEA,IAAI;YACVgB,eAAe,EAAE,SAAS;YAC1BqB,WAAW,EAAE,SAAS;YACtBC,WAAW,EAAE;WACd;SACF;QACDpB,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BmB,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI;cACjBC,KAAK,EAAE;gBACLC,QAAQ,EAAE;;;WAGf;UACDtB,OAAO,EAAE;YACPC,MAAM,EAAE;cACNsB,OAAO,EAAE;;;;OAIhB,CAAC;IACJ;EACF;EAEAC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACzF,cAAc,EAAE;MACvB,IAAI,CAACA,cAAc,CAACsD,OAAO,EAAE;IAC/B;IACA,IAAI,IAAI,CAACrD,qBAAqB,EAAE;MAC9B,IAAI,CAACA,qBAAqB,CAACqD,OAAO,EAAE;IACtC;EACF;;;uCA5NW3D,mBAAmB,EAAAT,EAAA,CAAAwG,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAA1G,EAAA,CAAAwG,iBAAA,CAAAG,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAnBnG,mBAAmB;MAAAoG,SAAA;MAAAC,SAAA,WAAAC,0BAAAC,EAAA,EAAA3C,GAAA;QAAA,IAAA2C,EAAA;;;;;;;;;;;;;;;UCf9BhH,EADF,CAAAC,cAAA,aAAiB,YACkC;UAAAD,EAAA,CAAAE,MAAA,sCAAqB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAGzEH,EADF,CAAAC,cAAA,aAAyF,YAChD;UAAAD,EAAA,CAAAE,MAAA,2BAAoB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAChEH,EAAA,CAAAC,cAAA,WAAyB;UAAAD,EAAA,CAAAE,MAAA,oHAAoF;UAC/GF,EAD+G,CAAAG,YAAA,EAAI,EAC7G;UAMNH,EAJA,CAAAiH,UAAA,IAAAC,kCAAA,iBAAsD,IAAAC,kCAAA,iBAIwB;UAO1EnH,EAHJ,CAAAC,cAAA,cAAmD,eAE/B,cACiC;UAAAD,EAAA,CAAAE,MAAA,0DAA8B;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACpFH,EAAA,CAAAC,cAAA,eAA2B;UACzBD,EAAA,CAAAoH,SAAA,uBAAiC;UACnCpH,EAAA,CAAAG,YAAA,EAAM;UACNH,EAAA,CAAAiH,UAAA,KAAAI,mCAAA,kBAAiE;UAGnErH,EAAA,CAAAG,YAAA,EAAM;UAIJH,EADF,CAAAC,cAAA,eAAkB,cACiC;UAAAD,EAAA,CAAAE,MAAA,2CAAyB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC/EH,EAAA,CAAAC,cAAA,eAA2B;UACzBD,EAAA,CAAAoH,SAAA,uBAAwC;UAC1CpH,EAAA,CAAAG,YAAA,EAAM;UACNH,EAAA,CAAAiH,UAAA,KAAAK,mCAAA,kBAAwE;UAI5EtH,EADE,CAAAG,YAAA,EAAM,EACF;UAKFH,EAFJ,CAAAC,cAAA,eAAwD,eACmB,cACtB;UAAAD,EAAA,CAAAE,MAAA,IAAoB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC1EH,EAAA,CAAAC,cAAA,aAAyB;UAAAD,EAAA,CAAAE,MAAA,4BAAe;UAC1CF,EAD0C,CAAAG,YAAA,EAAI,EACxC;UAEJH,EADF,CAAAC,cAAA,eAA6E,cACxB;UAAAD,EAAA,CAAAE,MAAA,IAAiB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACzEH,EAAA,CAAAC,cAAA,aAAyB;UAAAD,EAAA,CAAAE,MAAA,gCAAmB;UAC9CF,EAD8C,CAAAG,YAAA,EAAI,EAC5C;UAEJH,EADF,CAAAC,cAAA,eAA2E,cACtB;UAAAD,EAAA,CAAAE,MAAA,IAAoB;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAC5EH,EAAA,CAAAC,cAAA,aAAyB;UAAAD,EAAA,CAAAE,MAAA,8BAAiB;UAGhDF,EAHgD,CAAAG,YAAA,EAAI,EAC1C,EACF,EACF;;;UA/CEH,EAAA,CAAAI,SAAA,GAAa;UAAbJ,EAAA,CAAAuH,UAAA,SAAAlD,GAAA,CAAAxD,OAAA,CAAa;UAIbb,EAAA,CAAAI,SAAA,EAAkB;UAAlBJ,EAAA,CAAAuH,UAAA,SAAAlD,GAAA,CAAA9D,YAAA,CAAkB;UAWdP,EAAA,CAAAI,SAAA,GAAuB;UAAvBJ,EAAA,CAAAuH,UAAA,UAAAlD,GAAA,CAAArD,gBAAA,CAAuB;UAWvBhB,EAAA,CAAAI,SAAA,GAA8B;UAA9BJ,EAAA,CAAAuH,UAAA,UAAAlD,GAAA,CAAApD,uBAAA,CAA8B;UASajB,EAAA,CAAAI,SAAA,GAAoB;UAApBJ,EAAA,CAAAwH,iBAAA,CAAAnD,GAAA,CAAAnD,cAAA,CAAoB;UAIlBlB,EAAA,CAAAI,SAAA,GAAiB;UAAjBJ,EAAA,CAAAwH,iBAAA,CAAAnD,GAAA,CAAAlD,WAAA,CAAiB;UAIjBnB,EAAA,CAAAI,SAAA,GAAoB;UAApBJ,EAAA,CAAAwH,iBAAA,CAAAnD,GAAA,CAAAjD,cAAA,CAAoB;;;qBDvCjEvB,YAAY,EAAA4H,EAAA,CAAAC,IAAA;MAAAC,MAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}