{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.backendUrl}/employeeskills`;\n  }\n  getEmployees() {\n    return this.http.get(this.apiUrl);\n  }\n  getEmployeeById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createEmployee(employee) {\n    return this.http.post(this.apiUrl, employee);\n  }\n  updateEmployee(id, employee) {\n    return this.http.put(`${this.apiUrl}/${id}`, employee);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function EmployeeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmployeeService,\n      factory: EmployeeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","EmployeeService","constructor","http","apiUrl","backendUrl","getEmployees","get","getEmployeeById","id","createEmployee","employee","post","updateEmployee","put","deleteEmployee","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\h_ref\\Desktop\\frontend\\matchnhire\\src\\app\\services\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Employee } from '../models/employee.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n  private apiUrl = `${environment.backendUrl}/employeeskills`;\n\n  constructor(private http: HttpClient) { }\n\n  getEmployees(): Observable<Employee[]> {\n    return this.http.get<Employee[]>(this.apiUrl);\n  }\n\n  getEmployeeById(id: number): Observable<Employee> {\n    return this.http.get<Employee>(`${this.apiUrl}/${id}`);\n  }\n\n  createEmployee(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(this.apiUrl, employee);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Employee> {\n    return this.http.put<Employee>(`${this.apiUrl}/${id}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACK,UAAU,iBAAiB;EAEnB;EAExCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,IAAI,CAACH,MAAM,CAAC;EAC/C;EAEAI,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAW,GAAG,IAAI,CAACH,MAAM,IAAIK,EAAE,EAAE,CAAC;EACxD;EAEAC,cAAcA,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAW,IAAI,CAACR,MAAM,EAAEO,QAAQ,CAAC;EACxD;EAEAE,cAAcA,CAACJ,EAAU,EAAEE,QAAkB;IAC3C,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAW,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIK,EAAE,EAAE,CAAC;EACvD;;;uCAvBWR,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfnB,eAAe;MAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}